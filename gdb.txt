File move.h will be skipped when stepping.
File basic_string.h will be skipped when stepping.
File tuple will be skipped when stepping.
File stl_vector.h will be skipped when stepping.
File unique_ptr.h will be skipped when stepping.
Breakpoint 1 at 0x497e80c: file /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaType.cpp, line 8299.
Catchpoint 2 (throw)
Starting program: /home/swd/projs/common/pasta/build-debug/bin/DumpAST/dump-ast /home/swd/apps/clang-latest/bin/clang++ -DBOOST_ASIO_DISABLE_HANDLER_TYPE_REQUIREMENTS -DBOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT -DBOOST_BEAST_ALLOW_DEPRECATED -DBOOST_CONTAINER_FWD_BAD_DEQUE -DBOOST_COROUTINES_NO_DEPRECATION_WARNING -DBOOST_FILESYSTEM_DEPRECATED -DBOOST_STACKTRACE_ADDR2LINE_LOCATION=\\\"/usr/bin/addr2line\\\" -DBOOST_STACKTRACE_USE_ADDR2LINE -DBOOST_STACKTRACE_USE_BACKTRACE -DBOOST_STACKTRACE_USE_NOOP -DCARES_STATICLIB -DDATE_HEADER_ONLY -DDEBUG -DENABLE_TESTS -DGIT_COMMIT_HASH=\\\"ed9064ce3f6de6da6b63417e59f3100c8e6c4c6d\\\" -DHAS_UNCAUGHT_EXCEPTIONS=1 -DOPENSSL_NO_SSL2 -D_DEBUG -I/home/swd/projs/ripple/mine/src/ed25519-donna -I/home/swd/projs/ripple/mine/src/secp256k1/include -I/home/swd/projs/ripple/mine/src -isystem /home/swd/.conan/data/boost/1.82.0/_/_/package/f81afbcfa21cf6994cf0e45c1b11229c01c767a7/include -isystem /home/swd/.conan/data/openssl/1.1.1u/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include -isystem /home/swd/.conan/data/libarchive/3.6.2/_/_/package/d9fea6983af2a77bcbe3f0b088cea5aef9308bd7/include -isystem /home/swd/.conan/data/lz4/1.9.3/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include -isystem /home/swd/projs/ripple/mine/cur_build/proto_gen_grpc -isystem /home/swd/.conan/data/grpc/1.50.1/_/_/package/d156c58fd512defbc1155e665684d7875e800ba9/include -isystem /home/swd/.conan/data/abseil/20220623.0/_/_/package/e84b6d643e7f97d33bf72700134618fbae8bbbf6/include -isystem /home/swd/.conan/data/c-ares/1.19.0/_/_/package/ed86cef4487c6b9ce327a03d24ced8142000e8b9/include -isystem /home/swd/.conan/data/re2/20230301/_/_/package/e84b6d643e7f97d33bf72700134618fbae8bbbf6/include -isystem /home/swd/.conan/data/zlib/1.2.13/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include -isystem /home/swd/.conan/data/protobuf/3.21.9/_/_/package/681b3b1dffc7e4dc6f5551cdb6e1fe56bdda3e85/include -isystem /home/swd/projs/ripple/mine/cur_build/proto_gen -isystem /home/swd/projs/ripple/mine/cur_build/proto_gen/src/ripple/proto -isystem /home/swd/.conan/data/soci/4.0.3/_/_/package/dc82e3681e64ed36c447531c9e4883a5c616a774/include -isystem /home/swd/.conan/data/bzip2/1.0.8/_/_/package/5e357164f23f7c4e38ebe87433827878dbe1a74c/include -isystem /home/swd/.conan/data/libbacktrace/cci.20210118/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include -isystem /home/swd/.conan/data/sqlite3/3.42.0/_/_/package/ae0e146c4c82ac1e46c279d15c964c80fedbdf5f/include -isystem /home/swd/.conan/data/nudb/2.0.8/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include -isystem /home/swd/.conan/data/date/3.0.1/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include -m64 -stdlib=libstdc++ -Wall -Wdeprecated -Wextra -Wno-unused-parameter -g -std=c++20 -fPIE -frtti -Wnon-virtual-dtor -Wno-sign-compare -Wno-char-subscripts -Wno-format -Wno-unused-local-typedefs -fstack-protector -o CMakeFiles/rippled.dir/src/ripple/app/ledger/impl/LedgerReplay.cpp.o -c /home/swd/projs/ripple/mine/src/ripple/app/ledger/impl/LedgerReplay.cpp
Downloading separate debug info for /lib64/ld-linux-x86-64.so.2
[###                                                                                             ][ ###                                                                                            ]                                                                                                    Downloading separate debug info for system-supplied DSO at 0x7ffff7fc8000
[###                                                                                             ]                                                                                                    Downloading separate debug info for /usr/lib/libm.so.6
[###                                                                                             ]                                                                                                    Downloading separate debug info for /usr/lib/libc.so.6
[###                                                                                             ]                                                                                                    [Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, HandleUnkownTypeAttrAsAnnotateTypeAttr (State=..., CurType=..., PA=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaType.cpp:8299
#0  HandleUnkownTypeAttrAsAnnotateTypeAttr (State=..., CurType=..., PA=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaType.cpp:8299
        Idx = 0
        S = @0x5555a18ddbf0: {
          _vptr.Sema = 0x555561261828 <vtable for clang::Sema+16>,
          ExternalSource = {
            Obj = 0x0
          },
          OpenCLFeatures = {
            OptMap = {
              <llvm::StringMapImpl> = {
                TheTable = 0x555565132610,
                NumBuckets = 64,
                NumItems = 38,
                NumTombstones = 0,
                ItemSize = 32
              }, 
              <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
                <llvm::MallocAllocator> = {
                  <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}
          },
          CurFPFeatures = {
            Value = 249
          },
          LangOpts = @0x55556152eb00,
          PP = @0x5555a1bf36a0,
          Context = @0x5555a18d0ae0,
          Consumer = @0x555561544820,
          Diags = @0x5555615324b0,
          SourceMgr = @0x55556153b630,
          CollectStats = false,
          CodeCompleter = 0x0,
          CurContext = 0x5555a64f20d8,
          OriginalLexicalContext = 0x0,
          VAListTagName = {
            Ptr = 93826271132024
          },
          MSStructPragmaOn = false,
          MSPointerToMemberRepresentationMethod = clang::LangOptions::PPTMK_BestCase,
          CurrentSEHFinally = {
            <llvm::SmallVectorImpl<clang::Scope*>> = {
              <llvm::SmallVectorTemplateBase<clang::Scope*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Scope*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18ddc90,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Scope*, 2>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          ImplicitMSInheritanceAttrLoc = {
            ID = 0
          },
          TypoExprs = {
            <llvm::SmallVectorImpl<clang::TypoExpr*>> = {
              <llvm::SmallVectorTemplateBase<clang::TypoExpr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::TypoExpr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18ddcb8,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::TypoExpr*, 2>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          PragmaClangBSSSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangDataSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangRodataSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangRelroSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangTextSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          VtorDispStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18ddda0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023\000\000\000\000\000\000\000\001", '\000' <repeats 15 times>, "%`\236]UU\000\000\023\000\000\000\000\000\000\000\001", '\000' <repeats 14 times>
              }, <No data fields>},
            DefaultValue = clang::MSVtorDispMode::ForVBaseOverride,
            CurrentValue = clang::MSVtorDispMode::ForVBaseOverride,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          AlignPackStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18dde00,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot, 2>> = {
                InlineElts = '\000' <repeats 63 times>
              }, <No data fields>},
            DefaultValue = {
              PackAttr = false,
              AlignMode = clang::Sema::AlignPackInfo::Native,
              PackNumber = 255 '\377',
              XLStack = false
            },
            CurrentValue = {
              PackAttr = false,
              AlignMode = clang::Sema::AlignPackInfo::Native,
              PackNumber = 255 '\377',
              XLStack = false
            },
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          AlignPackIncludeStack = {
            <llvm::SmallVectorImpl<clang::Sema::AlignPackIncludeState>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::AlignPackIncludeState, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::AlignPackIncludeState, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18dde60,
                    Size = 0,
                    Capacity = 8
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::AlignPackIncludeState, 8>> = {
              InlineElts = '\000' <repeats 95 times>
            }, <No data fields>},
          DataSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18dded0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          BSSSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18ddf38,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          ConstSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18ddfa0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          CodeSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de008,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          StrictGuardStackCheckStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<bool>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<bool>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<bool>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de070,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<bool>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = false,
            CurrentValue = false,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          FpPragmaStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de0c8,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot, 2>> = {
                InlineElts = '\000' <repeats 63 times>
              }, <No data fields>},
            DefaultValue = {
              Options = {
                Value = 0
              },
              OverrideMask = 0
            },
            CurrentValue = {
              Options = {
                Value = 0
              },
              OverrideMask = 0
            },
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          NullabilityMap = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FileID, clang::FileNullability, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, clang::FileNullability> >, clang::FileID, clang::FileNullability, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, clang::FileNullability> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FileID, clang::FileNullability, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, clang::FileNullability> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Cache = {
              File = {
                ID = 0
              },
              Nullability = {
                PointerLoc = {
                  ID = 0
                },
                PointerEndLoc = {
                  ID = 0
                },
                PointerKind = 0 '\000',
                SawTypeNullability = false
              }
            }
          },
          CurInitSeg = 0x0,
          CurInitSegLoc = {
            ID = 0
          },
          FunctionToSectionMap = {
            <llvm::StringMapImpl> = {
              TheTable = 0x0,
              NumBuckets = 0,
              NumItems = 0,
              NumTombstones = 0,
              ItemSize = 32
            }, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},
          VisContext = 0x55557703a220,
          PragmaAttributeStack = {
            <llvm::SmallVectorImpl<clang::Sema::PragmaAttributeGroup>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::PragmaAttributeGroup, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaAttributeGroup, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de188,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::PragmaAttributeGroup, 2>> = {
              InlineElts = '\000' <repeats 287 times>
            }, <No data fields>},
          PragmaAttributeCurrentTargetDecl = 0x0,
          OptimizeOffPragmaLocation = {
            ID = 0
          },
          MSPragmaOptimizeIsOn = true,
          MSFunctionNoBuiltins = {
            <llvm::SetVector<llvm::StringRef, llvm::SmallVector<llvm::StringRef, 4>, llvm::SmallDenseSet<llvm::StringRef, 4, llvm::DenseMapInfo<llvm::StringRef, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<llvm::StringRef, llvm::SmallDenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >, llvm::DenseMapInfo<llvm::StringRef, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >, llvm::StringRef, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000\000\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000\000\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000\000\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<llvm::StringRef>> = {
                  <llvm::SmallVectorTemplateBase<llvm::StringRef, true>> = {
                    <llvm::SmallVectorTemplateCommon<llvm::StringRef, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18de310,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<llvm::StringRef, 4>> = {
                  InlineElts = '\000' <repeats 63 times>
                }, <No data fields>}
            }, <No data fields>},
          IsBuildingRecoveryCallExpr = false,
          Cleanup = {
            ExprNeedsCleanups = false,
            CleanupsHaveSideEffects = false
          },
          ExprCleanupObjects = {
            <llvm::SmallVectorImpl<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*> >> = {
              <llvm::SmallVectorTemplateBase<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*>, true>> = {
                <llvm::SmallVectorTemplateCommon<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de368,
                    Size = 0,
                    Capacity = 8
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*>, 8>> = {
              InlineElts = '\000' <repeats 63 times>
            }, <No data fields>},
          MaybeODRUseExprs = {
            set_ = {
              <llvm::SmallPtrSetImpl<clang::Expr*>> = {
                <llvm::SmallPtrSetImplBase> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, 
                  members of llvm::SmallPtrSetImplBase:
                  SmallArray = 0x5555a18de3c8,
                  CurArray = 0x5555a18de3c8,
                  CurArraySize = 4,
                  NumNonEmpty = 0,
                  NumTombstones = 0
                }, <No data fields>}, 
              members of llvm::SmallPtrSet<clang::Expr*, 4>:
              SmallStorage = {0x5555a64e7878, 0xfffffffffffffffe, 0x0, 0x0}
            },
            vector_ = {
              <llvm::SmallVectorImpl<clang::Expr*>> = {
                <llvm::SmallVectorTemplateBase<clang::Expr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Expr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de3f8,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Expr*, 4>> = {
                InlineElts = "xxN\246UU\000\000شM\246UU", '\000' <repeats 17 times>
              }, <No data fields>}
          },
          CachedFunctionScope = std::unique_ptr<clang::sema::FunctionScopeInfo> = {
            get() = 0x55559de6e1a0
          },
          FunctionScopes = {
            <llvm::SmallVectorImpl<clang::sema::FunctionScopeInfo*>> = {
              <llvm::SmallVectorTemplateBase<clang::sema::FunctionScopeInfo*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::sema::FunctionScopeInfo*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556e56ad90,
                    Size = 0,
                    Capacity = 9
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::sema::FunctionScopeInfo*, 4>> = {
              InlineElts = "\260\251\240\235UU\000\000\000\270\221\236UU\000\000\360\b\215\235UU\000\000\300u\222xUU\000"
            }, <No data fields>},
          FunctionScopesStart = 0,
          InventedParameterInfos = {
            <llvm::SmallVectorImpl<clang::InventedTemplateParameterInfo>> = {
              <llvm::SmallVectorTemplateBase<clang::InventedTemplateParameterInfo, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::InventedTemplateParameterInfo, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de468,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::InventedTemplateParameterInfo, 4>> = {
              InlineElts = "\000\000\000\000\000\000\000\000\200䍡UU\000\000\000\000\000\000\004", '\000' <repeats 202 times>
            }, <No data fields>},
          InventedParameterInfosStart = 0,
          ExtVectorDecls = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::TypedefNameDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::TypedefNameDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::TypedefNameDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de560,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::TypedefNameDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::TypedefNameDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::TypedefNameDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::TypedefNameDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de580,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::TypedefNameDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>}
          },
          FieldCollector = std::unique_ptr<clang::CXXFieldCollector> = {
            get() = 0x55559b969200
          },
          UnusedPrivateFields = {
            <llvm::SetVector<clang::NamedDecl*, llvm::SmallVector<clang::NamedDecl*, 16>, llvm::SmallDenseSet<clang::NamedDecl*, 16, llvm::DenseMapInfo<clang::NamedDecl*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::NamedDecl*, llvm::SmallDenseMap<clang::NamedDecl*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >, llvm::DenseMapInfo<clang::NamedDecl*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::NamedDecl*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >, clang::NamedDecl*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::NamedDecl*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::NamedDecl*>> = {
                  <llvm::SmallVectorTemplateBase<clang::NamedDecl*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::NamedDecl*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18de630,
                        Size = 0,
                        Capacity = 16
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::NamedDecl*, 16>> = {
                  InlineElts = '\000' <repeats 127 times>
                }, <No data fields>}
            }, <No data fields>},
          UnusedLocalTypedefNameCandidates = {
            <llvm::SetVector<clang::TypedefNameDecl const*, llvm::SmallVector<clang::TypedefNameDecl const*, 4>, llvm::SmallDenseSet<clang::TypedefNameDecl const*, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::TypedefNameDecl const*, llvm::SmallDenseMap<clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >, clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::TypedefNameDecl const*>> = {
                  <llvm::SmallVectorTemplateBase<clang::TypedefNameDecl const*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::TypedefNameDecl const*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18de6e8,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::TypedefNameDecl const*, 4>> = {
                  InlineElts = '\000' <repeats 31 times>
                }, <No data fields>}
            }, <No data fields>},
          DeleteExprs = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FieldDecl*, unsigned int, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, unsigned int> >, clang::FieldDecl*, unsigned int, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FieldDecl*, unsigned int, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          PureVirtualClassDiagSet = std::unique_ptr<llvm::SmallPtrSet<clang::CXXRecordDecl const*, 8>> = {
            get() = 0x0
          },
          ParsingInitForAutoVars = {
            <llvm::SmallPtrSetImpl<clang::Decl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18de760,
                CurArray = 0x5555a18de760,
                CurArraySize = 4,
                NumNonEmpty = 3,
                NumTombstones = 3
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::Decl const*, 4>:
            SmallStorage = {0xfffffffffffffffe, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x0}
          },
          TentativeDefinitions = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::VarDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::VarDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::VarDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de790,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::VarDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::VarDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::VarDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::VarDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de7b0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::VarDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>}
          },
          ExternalDeclarations = {
            <llvm::SmallVectorImpl<clang::VarDecl*>> = {
              <llvm::SmallVectorTemplateBase<clang::VarDecl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::VarDecl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de7d0,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::VarDecl*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          UnusedFileScopedDecls = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::DeclaratorDecl const*>> = {
                <llvm::SmallVectorTemplateBase<clang::DeclaratorDecl const*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::DeclaratorDecl const*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de800,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::DeclaratorDecl const*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::DeclaratorDecl const*>> = {
                <llvm::SmallVectorTemplateBase<clang::DeclaratorDecl const*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::DeclaratorDecl const*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x55556bff3700,
                      Size = 102,
                      Capacity = 191
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::DeclaratorDecl const*, 2>> = {
                InlineElts = "\260d\224\241UU\000\000\000\212\224\241UU\000"
              }, <No data fields>}
          },
          DelegatingCtorDecls = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::CXXConstructorDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::CXXConstructorDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::CXXConstructorDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de840,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::CXXConstructorDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::CXXConstructorDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::CXXConstructorDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::CXXConstructorDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x555576d1b790,
                      Size = 25,
                      Capacity = 47
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::CXXConstructorDecl*, 2>> = {
                InlineElts = "`\322\035\242UU\000\0000\234\343\242UU\000"
              }, <No data fields>}
          },
          DelayedOverridingExceptionSpecChecks = {
            <llvm::SmallVectorImpl<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de880,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*>, 2>> = {
              InlineElts = "h\350&\245UU\000\000h\253&\245UU\000\000\300\304\023\243UU\000\000\340Z\r\243UU\000"
            }, <No data fields>},
          DelayedEquivalentExceptionSpecChecks = {
            <llvm::SmallVectorImpl<std::pair<clang::FunctionDecl*, clang::FunctionDecl*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::FunctionDecl*, clang::FunctionDecl*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::FunctionDecl*, clang::FunctionDecl*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de8b0,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::FunctionDecl*, clang::FunctionDecl*>, 2>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          LateParsedTemplateMap = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FunctionDecl const*, unsigned int, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, unsigned int> >, clang::FunctionDecl const*, unsigned int, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FunctionDecl const*, unsigned int, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          LateTemplateParser = 0x0,
          LateTemplateParserCleanup = 0x0,
          OpaqueParser = 0x0,
          DelayedDiagnostics = {
            CurPool = 0x7fffffff8298
          },
          RebuildingImmediateInvocation = false,
          isConstantEvaluatedOverride = false,
          WeakUndeclaredIdentifiers = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >, clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          ExtnameUndeclaredIdentifiers = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, clang::AsmLabelAttr*, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, clang::AsmLabelAttr*> >, clang::IdentifierInfo*, clang::AsmLabelAttr*, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, clang::AsmLabelAttr*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo*, clang::AsmLabelAttr*, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, clang::AsmLabelAttr*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          WeakTopLevelDecl = {
            <llvm::SmallVectorImpl<clang::Decl*>> = {
              <llvm::SmallVectorTemplateBase<clang::Decl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Decl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de980,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Decl*, 2>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          IdResolver = {
            LangOpt = @0x55556152eb00,
            PP = @0x5555a1bf36a0,
            IdDeclInfos = 0x55556cc87d50
          },
          TUScope = 0x55556154e2c0,
          StdNamespace = {
            Ptr = 93826271209152
          },
          StdBadAlloc = {
            Ptr = 93826275870352
          },
          StdAlignValT = {
            Ptr = 93826275876624
          },
          StdExperimentalNamespaceCache = 0x0,
          StdInitializerList = 0x5555a2128f00,
          StdCoroutineTraitsCache = 0x0,
          CoroTraitsNamespaceCache = 0x0,
          CXXTypeInfoDecl = 0x5555a2986d18,
          MSVCGuidDecl = 0x0,
          StdSourceLocationImplDecl = 0x0,
          NSAPIObj = std::unique_ptr<clang::NSAPI> = {
            get() = 0x0
          },
          NSNumberDecl = 0x0,
          NSValueDecl = 0x0,
          NSNumberPointer = {
            Value = {
              Value = 0
            }
          },
          NSValuePointer = {
            Value = {
              Value = 0
            }
          },
          NSNumberLiteralMethods = {0x0 <repeats 15 times>},
          NSStringDecl = 0x0,
          NSStringPointer = {
            Value = {
              Value = 0
            }
          },
          StringWithUTF8StringMethod = 0x0,
          ValueWithBytesObjCTypeMethod = 0x0,
          NSArrayDecl = 0x0,
          ArrayWithObjectsMethod = 0x0,
          NSDictionaryDecl = 0x0,
          DictionaryWithObjectsMethod = 0x0,
          QIDNSCopying = {
            Value = {
              Value = 0
            }
          },
          RespondsToSelectorSel = {
            InfoPtr = 0
          },
          GlobalNewDeleteDeclared = true,
          ExprEvalContexts = {
            <llvm::SmallVectorImpl<clang::Sema::ExpressionEvaluationContextRecord>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::ExpressionEvaluationContextRecord, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::ExpressionEvaluationContextRecord, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a22b6f40,
                    Size = 1,
                    Capacity = 71
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::ExpressionEvaluationContextRecord, 8>> = {
              InlineElts = "\006", '\000' <repeats 15 times>, "8덡UU\000\0008덡UU\000\000\004", '\000' <repeats 47 times>, "h덡UU\000\000\000\000\000\000\004", '\000' <repeats 35 times>, "\230덡UU\000\000\000\000\000\000\002", '\000' <repeats 27 times>, "\300덡UU\000\000\000\000\000\000\b", '\000' <repeats 67 times>...
            }, <No data fields>},
          FailedImmediateInvocations = {
            <llvm::SmallPtrSetImpl<clang::ConstantExpr*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18dfe28,
                CurArray = 0x5555a18dfe28,
                CurArraySize = 4,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::ConstantExpr*, 4>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0}
          },
          SpecialMemberCache = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::Sema::SpecialMemberOverloadResultEntry>, clang::Sema::SpecialMemberOverloadResultEntry>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a51b6990,
                NumBuckets = 1024,
                NumNodes = 1412
              }, <No data fields>}, <No data fields>},
          FlagBitsCache = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::EnumDecl const*, llvm::APInt, llvm::DenseMapInfo<clang::EnumDecl const*, void>, llvm::detail::DenseMapPair<clang::EnumDecl const*, llvm::APInt> >, clang::EnumDecl const*, llvm::APInt, llvm::DenseMapInfo<clang::EnumDecl const*, void>, llvm::detail::DenseMapPair<clang::EnumDecl const*, llvm::APInt> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::EnumDecl const*, llvm::APInt, llvm::DenseMapInfo<clang::EnumDecl const*, void>, llvm::detail::DenseMapPair<clang::EnumDecl const*, llvm::APInt> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          TUKind = clang::TU_Complete,
          BumpAlloc = {
            <llvm::AllocatorBase<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {<No data fields>}, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            members of llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>:
            CurPtr = 0x5555a3a80530 "`V\377\377\377\177",
            End = 0x5555a3a82270 "\240i\032\242UU",
            Slabs = {
              <llvm::SmallVectorImpl<void*>> = {
                <llvm::SmallVectorTemplateBase<void*, true>> = {
                  <llvm::SmallVectorTemplateCommon<void*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x55556d49f1f0,
                      Size = 290,
                      Capacity = 319
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<void*, 4>> = {
                InlineElts = "0x\224\241UU\000\000\340ݚ\241UU\000\000 \377\233\241UU\000\000\360Ϝ\241UU\000"
              }, <No data fields>},
            CustomSizedSlabs = {
              <llvm::SmallVectorImpl<std::pair<void*, unsigned long> >> = {
                <llvm::SmallVectorTemplateBase<std::pair<void*, unsigned long>, true>> = {
                  <llvm::SmallVectorTemplateCommon<std::pair<void*, unsigned long>, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18dfec8,
                      Size = 0,
                      Capacity = 0
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<std::pair<void*, unsigned long>, 0>> = {<No data fields>}, <No data fields>},
            BytesAllocated = 2120352,
            RedZoneSize = 1
          },
          NumSFINAEErrors = 0,
          UnparsedDefaultArgInstantiations = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*>, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*> > >, clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*>, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*>, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*> > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          UnparsedDefaultArgLocs = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ParmVarDecl*, clang::SourceLocation, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, clang::SourceLocation> >, clang::ParmVarDecl*, clang::SourceLocation, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, clang::SourceLocation> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ParmVarDecl*, clang::SourceLocation, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, clang::SourceLocation> >:
            Buckets = 0x5555a53cdfb0,
            NumEntries = 1,
            NumTombstones = 156,
            NumBuckets = 256
          },
          UndefinedButUsed = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, unsigned int> >, clang::NamedDecl*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::NamedDecl*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, unsigned int> >:
              Buckets = 0x5555a3806080,
              NumEntries = 242,
              NumTombstones = 0,
              NumBuckets = 512
            },
            Vector = std::vector of length 242, capacity 256 = {{
                first = 0x5555a1e52168,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e5dbb8,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e65a78,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e70c38,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e77598,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e83988,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e8a608,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e9a718,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a2183df0,
                second = {
                  ID = 41929392
                }
              }, {
                first = 0x5555a2184e20,
                second = {
                  ID = 41929595
                }
              }, {
                first = 0x5555a2661138,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2610f20,
                second = {
                  ID = 42010290
                }
              }, {
                first = 0x5555a2663b38,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a1eaf7b0,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a2666730,
                second = {
                  ID = 42010433
                }
              }, {
                first = 0x5555a26bfaf8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a1eb6fb0,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a26d2130,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a26d9fa8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a26db3c0,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a273f688,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2740e60,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a2742bc8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a26dd5f0,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a278ee88,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2790660,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a27923c8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2745e20,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a27de6c8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a27dfea0,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a27e1c08,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2795600,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a1eaf490,
                second = {
                  ID = 41668709
                }
              }, {
                first = 0x5555a2611db8,
                second = {
                  ID = 42103689
                }
              }, {
                first = 0x5555a2ae8998,
                second = {
                  ID = 42391378
                }
              }, {
                first = 0x5555a2ae8b88,
                second = {
                  ID = 42391467
                }
              }, {
                first = 0x5555a2aeae88,
                second = {
                  ID = 42391542
                }
              }, {
                first = 0x5555a2aeb078,
                second = {
                  ID = 42391616
                }
              }, {
                first = 0x5555a2aea658,
                second = {
                  ID = 42391685
                }
              }, {
                first = 0x5555a2aea718,
                second = {
                  ID = 42391771
                }
              }, {
                first = 0x5555a2aea988,
                second = {
                  ID = 42391948
                }
              }, {
                first = 0x5555a2aeac78,
                second = {
                  ID = 42392068
                }
              }, {
                first = 0x5555a2aeb3f8,
                second = {
                  ID = 42392408
                }
              }, {
                first = 0x5555a2aeb6c8,
                second = {
                  ID = 42392541
                }
              }, {
                first = 0x5555a2aebaf8,
                second = {
                  ID = 42392691
                }
              }, {
                first = 0x5555a2aebef8,
                second = {
                  ID = 42392879
                }
              }, {
                first = 0x5555a2aec278,
                second = {
                  ID = 42393060
                }
              }, {
                first = 0x5555a2aec5f8,
                second = {
                  ID = 42393242
                }
              }, {
                first = 0x5555a2aec968,
                second = {
                  ID = 42393415
                }
              }, {
                first = 0x5555a2aeccd0,
                second = {
                  ID = 42393607
                }
              }, {
                first = 0x5555a2aecfd0,
                second = {
                  ID = 42393792
                }
              }, {
                first = 0x5555a2aed2c8,
                second = {
                  ID = 42393978
                }
              }, {
                first = 0x5555a2aed568,
                second = {
                  ID = 42394128
                }
              }, {
                first = 0x5555a2aed690,
                second = {
                  ID = 42394194
                }
              }, {
                first = 0x5555a2aed7a8,
                second = {
                  ID = 42394254
                }
              }, {
                first = 0x5555a2dc94d0,
                second = {
                  ID = 41830397
                }
              }, {
                first = 0x5555a2e25b30,
                second = {
                  ID = 42543461
                }
              }, {
                first = 0x5555a2e22408,
                second = {
                  ID = 42543607
                }
              }, {
                first = 0x5555a2e227e8,
                second = {
                  ID = 42543663
                }
              }, {
                first = 0x5555a2b39bc8,
                second = {
                  ID = 42543693
                }
              }, {
                first = 0x5555a2b39e10,
                second = {
                  ID = 42543840
                }
              }, {
                first = 0x5555a2b3b7a8,
                second = {
                  ID = 42543904
                }
              }, {
                first = 0x5555a2e2dc88,
                second = {
                  ID = 0
                }
              }, {
                first = 0x5555a2e2de68,
                second = {
                  ID = 0
                }
              }, {
                first = 0x5555a2ec4110,
                second = {
                  ID = 42590669
                }
              }, {
                first = 0x5555a2ec47c0,
                second = {
                  ID = 42590724
                }
              }, {
                first = 0x5555a37353b0,
                second = {
                  ID = 43208330
                }
              }, {
                first = 0x5555a3798ad8,
                second = {
                  ID = 43242857
                }
              }, {
                first = 0x5555a3794030,
                second = {
                  ID = 43243308
                }
              }, {
                first = 0x5555a3796678,
                second = {
                  ID = 43243507
                }
              }, {
                first = 0x5555a3798220,
                second = {
                  ID = 43244435
                }
              }, {
                first = 0x5555a3798810,
                second = {
                  ID = 43244564
                }
              }, {
                first = 0x5555a387f010,
                second = {
                  ID = 43310867
                }
              }, {
                first = 0x5555a38b20e0,
                second = {
                  ID = 43311784
                }
              }, {
                first = 0x5555a39a23d8,
                second = {
                  ID = 43343848
                }
              }, {
                first = 0x5555a39a2548,
                second = {
                  ID = 43344914
                }
              }, {
                first = 0x5555a3c02358,
                second = {
                  ID = 43269921
                }
              }, {
                first = 0x5555a3dfa268,
                second = {
                  ID = 43427665
                }
              }, {
                first = 0x5555a3dfa360,
                second = {
                  ID = 43427633
                }
              }, {
                first = 0x5555a3e00408,
                second = {
                  ID = 43428926
                }
              }, {
                first = 0x5555a3e00500,
                second = {
                  ID = 43428894
                }
              }, {
                first = 0x5555a3e06588,
                second = {
                  ID = 43430201
                }
              }, {
                first = 0x5555a3e06680,
                second = {
                  ID = 43430169
                }
              }, {
                first = 0x5555a3e106b8,
                second = {
                  ID = 43431474
                }
              }, {
                first = 0x5555a3e107b0,
                second = {
                  ID = 43431442
                }
              }, {
                first = 0x5555a3e39058,
                second = {
                  ID = 42092058
                }
              }, {
                first = 0x5555a2f78390,
                second = {
                  ID = 41806806
                }
              }, {
                first = 0x5555a2f796f8,
                second = {
                  ID = 41805217
                }
              }, {
                first = 0x5555a2f83318,
                second = {
                  ID = 41805949
                }
              }, {
                first = 0x5555a2fac238,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a2fadec0,
                second = {
                  ID = 43669872
                }
              }, {
                first = 0x5555a2fb0e68,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a447a088,
                second = {
                  ID = 41798924
                }
              }, {
                first = 0x5555a447ac98,
                second = {
                  ID = 41798968
                }
              }, {
                first = 0x5555a447f948,
                second = {
                  ID = 41798924
                }
              }, {
                first = 0x5555a44808f8,
                second = {
                  ID = 41798968
                }
              }, {
                first = 0x5555a4492208,
                second = {
                  ID = 41798968
                }
              }, {
                first = 0x5555a449fd90,
                second = {
                  ID = 41806806
                }
              }, {
                first = 0x5555a45af2a8,
                second = {
                  ID = 43735962
                }
              }, {
                first = 0x5555a45b2a18,
                second = {
                  ID = 43702947
                }
              }, {
                first = 0x5555a45b3670,
                second = {
                  ID = 43735977
                }
              }, {
                first = 0x5555a4609c20,
                second = {
                  ID = 43736041
                }
              }, {
                first = 0x5555a45af8d0,
                second = {
                  ID = 43736058
                }
              }, {
                first = 0x5555a46223d8,
                second = {
                  ID = 43736192
                }
              }, {
                first = 0x5555a462bb08,
                second = {
                  ID = 43702947
                }
              }, {
                first = 0x5555a462c790,
                second = {
                  ID = 43736207
                }
              }, {
                first = 0x5555a4652e70,
                second = {
                  ID = 43736271
                }
              }, {
                first = 0x5555a4622a00,
                second = {
                  ID = 43736288
                }
              }, {
                first = 0x5555a4654020,
                second = {
                  ID = 43736454
                }
              }, {
                first = 0x5555a46555b0,
                second = {
                  ID = 43736715
                }
              }, {
                first = 0x5555a4a08920,
                second = {
                  ID = 44223232
                }
              }, {
                first = 0x5555a4a09450,
                second = {
                  ID = 44223352
                }
              }, {
                first = 0x5555a4a09f40,
                second = {
                  ID = 44223493
                }
              }, {
                first = 0x5555a4ad6410,
                second = {
                  ID = 44305306
                }
              }, {
                first = 0x5555a4ad6ee0,
                second = {
                  ID = 44305471
                }
              }, {
                first = 0x5555a4ada6f0,
                second = {
                  ID = 44306500
                }
              }, {
                first = 0x5555a4adafe0,
                second = {
                  ID = 44306619
                }
              }, {
                first = 0x5555a4af5980,
                second = {
                  ID = 44312356
                }
              }, {
                first = 0x5555a4af6060,
                second = {
                  ID = 44312455
                }
              }, {
                first = 0x5555a4af7230,
                second = {
                  ID = 44312790
                }
              }, {
                first = 0x5555a4af7b30,
                second = {
                  ID = 44312921
                }
              }, {
                first = 0x5555a4af8e10,
                second = {
                  ID = 44313301
                }
              }, {
                first = 0x5555a4af96a0,
                second = {
                  ID = 44313429
                }
              }, {
                first = 0x5555a4bd4c08,
                second = {
                  ID = 44375466
                }
              }, {
                first = 0x5555a4bd0988,
                second = {
                  ID = 44404529
                }
              }, {
                first = 0x5555a4bd0e20,
                second = {
                  ID = 44404647
                }
              }, {
                first = 0x5555a4bd2550,
                second = {
                  ID = 44407015
                }
              }, {
                first = 0x5555a4bd26c8,
                second = {
                  ID = 44407247
                }
              }, {
                first = 0x5555a4bd38a8,
                second = {
                  ID = 44407505
                }
              }, {
                first = 0x5555a4bd3d50,
                second = {
                  ID = 44407629
                }
              }, {
                first = 0x5555a4bd73d8,
                second = {
                  ID = 44410581
                }
              }, {
                first = 0x5555a4bd7880,
                second = {
                  ID = 44410702
                }
              }, {
                first = 0x5555a4bd9470,
                second = {
                  ID = 44413975
                }
              }, {
                first = 0x5555a4bd95e8,
                second = {
                  ID = 44414213
                }
              }, {
                first = 0x5555a4bda6c8,
                second = {
                  ID = 44414475
                }
              }, {
                first = 0x5555a4bdba00,
                second = {
                  ID = 44414601
                }
              }, {
                first = 0x5555a4be2508,
                second = {
                  ID = 44422640
                }
              }, {
                first = 0x5555a4be29b0,
                second = {
                  ID = 44422775
                }
              }, {
                first = 0x5555a4bc8098,
                second = {
                  ID = 44424013
                }
              }, {
                first = 0x5555a4bf1588,
                second = {
                  ID = 44432885
                }
              }, {
                first = 0x5555a4bf1e10,
                second = {
                  ID = 44433036
                }
              }, {
                first = 0x5555a4bcb468,
                second = {
                  ID = 44434013
                }
              }, {
                first = 0x5555a4beb6e8,
                second = {
                  ID = 44433992
                }
              }, {
                first = 0x5555a4beb858,
                second = {
                  ID = 44434136
                }
              }, {
                first = 0x5555a4bcc458,
                second = {
                  ID = 44436122
                }
              }, {
                first = 0x5555a4bebb38,
                second = {
                  ID = 44437398
                }
              }, {
                first = 0x5555a4bed918,
                second = {
                  ID = 44438289
                }
              }, {
                first = 0x5555a4beddc0,
                second = {
                  ID = 44438430
                }
              }, {
                first = 0x5555a4bf4548,
                second = {
                  ID = 44443617
                }
              }, {
                first = 0x5555a4bf57b8,
                second = {
                  ID = 44444294
                }
              }, {
                first = 0x5555a4bf6040,
                second = {
                  ID = 44444443
                }
              }, {
                first = 0x5555a4bf4628,
                second = {
                  ID = 44445086
                }
              }, {
                first = 0x5555a4bcb6f8,
                second = {
                  ID = 44445539
                }
              }, {
                first = 0x5555a4bcd1b8,
                second = {
                  ID = 44447291
                }
              }, {
                first = 0x5555a4bf91f8,
                second = {
                  ID = 44448844
                }
              }, {
                first = 0x5555a4bf9a80,
                second = {
                  ID = 44449003
                }
              }, {
                first = 0x5555a4bf81b8,
                second = {
                  ID = 44449556
                }
              }, {
                first = 0x5555a4bcdf18,
                second = {
                  ID = 44451113
                }
              }, {
                first = 0x5555a58e9cc8,
                second = {
                  ID = 45775897
                }
              }, {
                first = 0x5555a58ea7f8,
                second = {
                  ID = 45776071
                }
              }, {
                first = 0x5555a58eb298,
                second = {
                  ID = 45776242
                }
              }, {
                first = 0x5555a58ebcd8,
                second = {
                  ID = 45776410
                }
              }, {
                first = 0x5555a58ec7a8,
                second = {
                  ID = 45776581
                }
              }, {
                first = 0x5555a58ed2d8,
                second = {
                  ID = 45776755
                }
              }, {
                first = 0x5555a58edd78,
                second = {
                  ID = 45776926
                }
              }, {
                first = 0x5555a58ee7b8,
                second = {
                  ID = 45777094
                }
              }, {
                first = 0x5555a58ef1f8,
                second = {
                  ID = 45777265
                }
              }, {
                first = 0x5555a58efc38,
                second = {
                  ID = 45777439
                }
              }, {
                first = 0x5555a58f0678,
                second = {
                  ID = 45777610
                }
              }, {
                first = 0x5555a58f10b8,
                second = {
                  ID = 45777778
                }
              }, {
                first = 0x5555a58f1b88,
                second = {
                  ID = 45777949
                }
              }, {
                first = 0x5555a58f26b8,
                second = {
                  ID = 45778123
                }
              }, {
                first = 0x5555a58f3158,
                second = {
                  ID = 45778294
                }
              }, {
                first = 0x5555a58f3b98,
                second = {
                  ID = 45778462
                }
              }, {
                first = 0x5555a58f45d8,
                second = {
                  ID = 45778633
                }
              }, {
                first = 0x5555a58f5018,
                second = {
                  ID = 45778807
                }
              }, {
                first = 0x5555a58f5a58,
                second = {
                  ID = 45778978
                }
              }, {
                first = 0x5555a58f6498,
                second = {
                  ID = 45779146
                }
              }, {
                first = 0x5555a58f6ed8,
                second = {
                  ID = 45779317
                }
              }, {
                first = 0x5555a58f7918,
                second = {
                  ID = 45779491
                }
              }, {
                first = 0x5555a58f8358,
                second = {
                  ID = 45779662
                }
              }, {
                first = 0x5555a58f8d98,
                second = {
                  ID = 45779830
                }
              }, {
                first = 0x5555a58f97d8,
                second = {
                  ID = 45780001
                }
              }, {
                first = 0x5555a58fa218,
                second = {
                  ID = 45780175
                }
              }, {
                first = 0x5555a58fac58,
                second = {
                  ID = 45780346
                }
              }, {
                first = 0x5555a58fb698,
                second = {
                  ID = 45780514
                }
              }, {
                first = 0x5555a58fc408,
                second = {
                  ID = 45780670
                }
              }, {
                first = 0x5555a58fd1a8,
                second = {
                  ID = 45780834
                }
              }, {
                first = 0x5555a58fde30,
                second = {
                  ID = 45780995
                }
              }, {
                first = 0x5555a58fea60,
                second = {
                  ID = 45781153
                }
              }, {
                first = 0x5555a58ff7a8,
                second = {
                  ID = 45781314
                }
              }, {
                first = 0x5555a5900548,
                second = {
                  ID = 45781478
                }
              }, {
                first = 0x5555a59011d0,
                second = {
                  ID = 45781639
                }
              }, {
                first = 0x5555a5901e00,
                second = {
                  ID = 45781797
                }
              }, {
                first = 0x5555a5902a30,
                second = {
                  ID = 45781958
                }
              }, {
                first = 0x5555a5903660,
                second = {
                  ID = 45782122
                }
              }, {
                first = 0x5555a5904290,
                second = {
                  ID = 45782283
                }
              }, {
                first = 0x5555a5904ec0,
                second = {
                  ID = 45782441
                }
              }, {
                first = 0x5555a5905c08,
                second = {
                  ID = 45782602
                }
              }, {
                first = 0x5555a59069a8,
                second = {
                  ID = 45782766
                }
              }...}
          },
          MethodPool = {
            Methods = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList>, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList> > >, clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList>, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList> > >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList>, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList> > >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            }
          },
          ReferencedSelectors = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::Selector, unsigned int, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, unsigned int> >, clang::Selector, unsigned int, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::Selector, unsigned int, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          ImplicitlyRetainedSelfLocs = {
            <llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::BlockDecl const*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::SourceLocation, clang::BlockDecl const*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::SourceLocation, clang::BlockDecl const*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18dff98,
                    Size = 0,
                    Capacity = 1
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::SourceLocation, clang::BlockDecl const*>, 1>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          SpecialMembersBeingDeclared = {
            <llvm::SmallPtrSetImpl<llvm::PointerIntPair<clang::CXXRecordDecl*, 3, clang::Sema::CXXSpecialMember, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*>, llvm::PointerIntPairInfo<clang::CXXRecordDecl*, 3, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*> > > >> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18dffc8,
                CurArray = 0x5555a18dffc8,
                CurArraySize = 4,
                NumNonEmpty = 4,
                NumTombstones = 4
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<llvm::PointerIntPair<clang::CXXRecordDecl*, 3, clang::Sema::CXXSpecialMember, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*>, llvm::PointerIntPairInfo<clang::CXXRecordDecl*, 3, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*> > >, 4>:
            SmallStorage = {0xfffffffffffffffe, 0xfffffffffffffffe, 0xfffffffffffffffe, 0xfffffffffffffffe}
          },
          TypoCorrectedFunctionDefinitions = {
            <llvm::SmallPtrSetImpl<clang::NamedDecl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e0008,
                CurArray = 0x5555a18e0008,
                CurArraySize = 4,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::NamedDecl const*, 4>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0}
          },
          CurrentParameterCopyTypes = {
            <llvm::SmallVectorImpl<clang::QualType>> = {
              <llvm::SmallVectorTemplateBase<clang::QualType, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::QualType, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e0038,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::QualType, 4>> = {
              InlineElts = "\3200N\246UU", '\000' <repeats 25 times>
            }, <No data fields>},
          WarnedStackExhausted = false,
          RefsMinusAssignments = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, int> >, clang::VarDecl const*, int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::VarDecl const*, int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, int> >:
            Buckets = 0x5555a5d61a10,
            NumEntries = 2199,
            NumTombstones = 1168,
            NumBuckets = 4096
          },
          DeclareRISCVVBuiltins = false,
          RVIntrinsicManager = std::unique_ptr<clang::sema::RISCVIntrinsicManager> = {
            get() = 0x0
          },
          CachedDarwinSDKInfo = std::optional<std::unique_ptr<clang::DarwinSDKInfo>> [no contained value],
          WarnedDarwinSDKInfoMissing = false,
          IsLastErrorImmediate = true,
          DeferDiags = false,
          DeclsToCheckForDeferredDiags = {
            <llvm::SetVector<clang::Decl*, llvm::SmallVector<clang::Decl*, 4>, llvm::SmallDenseSet<clang::Decl*, 4, llvm::DenseMapInfo<clang::Decl*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::Decl*, llvm::SmallDenseMap<clang::Decl*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >, llvm::DenseMapInfo<clang::Decl*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::Decl*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >, clang::Decl*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::Decl*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::Decl*>> = {
                  <llvm::SmallVectorTemplateBase<clang::Decl*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::Decl*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18e00d8,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::Decl*, 4>> = {
                  InlineElts = '\000' <repeats 31 times>
                }, <No data fields>}
            }, <No data fields>},
          ModuleScopes = {
            <llvm::SmallVectorImpl<clang::Sema::ModuleScope>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::ModuleScope, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::ModuleScope, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e0108,
                    Size = 0,
                    Capacity = 16
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::ModuleScope, 16>> = {
              InlineElts = '\000' <repeats 895 times>
            }, <No data fields>},
          GlobalModuleFragment = 0x0,
          DirectModuleImports = {
            <llvm::SmallPtrSetImpl<clang::Module*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e04b0,
                CurArray = 0x5555a18e04b0,
                CurArraySize = 8,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::Module*, 8>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
          },
          DeferredExportedNamespaces = {
            <llvm::SmallPtrSetImpl<clang::NamespaceDecl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e0510,
                CurArray = 0x5555a18e0510,
                CurArraySize = 8,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::NamespaceDecl const*, 8>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
          },
          PendingInlineFuncDecls = {
            <llvm::SmallPtrSetImpl<clang::FunctionDecl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e0570,
                CurArray = 0x5555a18e0570,
                CurArraySize = 8,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::FunctionDecl const*, 8>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
          },
          VisibleModules = {
            ImportLocs = std::vector of length 0, capacity 0,
            Generation = 0
          },
          UsableModuleUnitsCache = {
            <llvm::detail::DenseSetImpl<clang::Module const*, llvm::DenseMap<clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >, llvm::DenseMapInfo<clang::Module const*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >, clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          ShadowingDecls = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl const*, clang::NamedDecl const*, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, clang::NamedDecl const*> >, clang::NamedDecl const*, clang::NamedDecl const*, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, clang::NamedDecl const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl const*, clang::NamedDecl const*, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, clang::NamedDecl const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          DelayedTypos = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::TypoExpr*, unsigned int, llvm::DenseMapInfo<clang::TypoExpr*, void>, llvm::detail::DenseMapPair<clang::TypoExpr*, unsigned int> >, clang::TypoExpr*, unsigned int, llvm::DenseMapInfo<clang::TypoExpr*, void>, llvm::detail::DenseMapPair<clang::TypoExpr*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::TypoExpr*, unsigned int, llvm::DenseMapInfo<clang::TypoExpr*, void>, llvm::detail::DenseMapPair<clang::TypoExpr*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          KnownNamespaces = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::NamespaceDecl*, unsigned int, llvm::DenseMapInfo<clang::NamespaceDecl*, void>, llvm::detail::DenseMapPair<clang::NamespaceDecl*, unsigned int> >, clang::NamespaceDecl*, unsigned int, llvm::DenseMapInfo<clang::NamespaceDecl*, void>, llvm::detail::DenseMapPair<clang::NamespaceDecl*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::NamespaceDecl*, unsigned int, llvm::DenseMapInfo<clang::NamespaceDecl*, void>, llvm::detail::DenseMapPair<clang::NamespaceDecl*, unsigned int> >:
              Buckets = 0x55559f10de10,
              NumEntries = 76,
              NumTombstones = 0,
              NumBuckets = 128
            },
            Vector = std::vector of length 76, capacity 128 = {{
                first = 0x5555a190e6c0,
                second = false
              }, {
                first = 0x5555a190ef80,
                second = false
              }, {
                first = 0x5555a19a8270,
                second = false
              }, {
                first = 0x5555a1cbfde8,
                second = false
              }, {
                first = 0x5555a1cc3e80,
                second = false
              }, {
                first = 0x5555a1d21738,
                second = false
              }, {
                first = 0x5555a1d217b0,
                second = false
              }, {
                first = 0x5555a1d341c8,
                second = false
              }, {
                first = 0x5555a1d556a0,
                second = false
              }, {
                first = 0x5555a1d92d90,
                second = false
              }, {
                first = 0x5555a1d9f608,
                second = false
              }, {
                first = 0x5555a1da9d70,
                second = false
              }, {
                first = 0x5555a1e1e198,
                second = false
              }, {
                first = 0x5555a1e292f8,
                second = false
              }, {
                first = 0x5555a1efa160,
                second = false
              }, {
                first = 0x5555a205afe0,
                second = false
              }, {
                first = 0x5555a205b658,
                second = false
              }, {
                first = 0x5555a2187080,
                second = false
              }, {
                first = 0x5555a27e32f0,
                second = false
              }, {
                first = 0x5555a2845230,
                second = false
              }, {
                first = 0x5555a296f880,
                second = false
              }, {
                first = 0x5555a29a18f8,
                second = false
              }, {
                first = 0x5555a2aa3848,
                second = false
              }, {
                first = 0x5555a2bd64f0,
                second = false
              }, {
                first = 0x5555a2e14998,
                second = false
              }, {
                first = 0x5555a2e2b690,
                second = false
              }, {
                first = 0x5555a2e99720,
                second = false
              }, {
                first = 0x5555a31ca100,
                second = false
              }, {
                first = 0x5555a32486e8,
                second = false
              }, {
                first = 0x5555a34bfdf8,
                second = false
              }, {
                first = 0x5555a34bfe70,
                second = false
              }, {
                first = 0x5555a34c44d0,
                second = false
              }, {
                first = 0x5555a35a9ed0,
                second = false
              }, {
                first = 0x5555a35c1128,
                second = false
              }, {
                first = 0x5555a35c3640,
                second = false
              }, {
                first = 0x5555a35c37a8,
                second = false
              }, {
                first = 0x5555a35db130,
                second = false
              }, {
                first = 0x5555a2f4c390,
                second = false
              }, {
                first = 0x5555a4b8b1c8,
                second = false
              }, {
                first = 0x5555a4b8b240,
                second = false
              }, {
                first = 0x5555a5190668,
                second = false
              }, {
                first = 0x5555a5190aa0,
                second = false
              }, {
                first = 0x5555a5191f38,
                second = false
              }, {
                first = 0x5555a5191fb0,
                second = false
              }, {
                first = 0x5555a5192118,
                second = false
              }, {
                first = 0x5555a5192398,
                second = false
              }, {
                first = 0x5555a51a38e8,
                second = false
              }, {
                first = 0x5555a51a3f00,
                second = false
              }, {
                first = 0x5555a51a4390,
                second = false
              }, {
                first = 0x5555a5218a58,
                second = false
              }, {
                first = 0x5555a523a488,
                second = false
              }, {
                first = 0x5555a523e930,
                second = false
              }, {
                first = 0x5555a52765e8,
                second = false
              }, {
                first = 0x5555a5285c50,
                second = false
              }, {
                first = 0x5555a528f100,
                second = false
              }, {
                first = 0x5555a545ca90,
                second = false
              }, {
                first = 0x5555a545cec8,
                second = false
              }, {
                first = 0x5555a54d03b8,
                second = false
              }, {
                first = 0x5555a5530e90,
                second = false
              }, {
                first = 0x5555a5601ea8,
                second = false
              }, {
                first = 0x5555a56e7800,
                second = false
              }, {
                first = 0x5555a56e8a70,
                second = false
              }, {
                first = 0x5555a56eb9b8,
                second = false
              }, {
                first = 0x5555a56eef40,
                second = false
              }, {
                first = 0x5555a5708950,
                second = false
              }, {
                first = 0x5555a575ec38,
                second = false
              }, {
                first = 0x5555a5813ea8,
                second = false
              }, {
                first = 0x5555a5813f20,
                second = false
              }, {
                first = 0x5555a5816990,
                second = false
              }, {
                first = 0x5555a5817250,
                second = false
              }, {
                first = 0x5555a581f7a8,
                second = false
              }, {
                first = 0x5555a5821a28,
                second = false
              }, {
                first = 0x5555a582dd38,
                second = false
              }, {
                first = 0x5555a5c36e80,
                second = false
              }, {
                first = 0x5555a6339c10,
                second = false
              }, {
                first = 0x5555a640d9d8,
                second = false
              }}
          },
          LoadedExternalKnownNamespaces = false,
          FullyCheckedComparisonCategories = {
            X = 864691128455135241
          },
          CXXThisTypeOverride = {
            Value = {
              Value = 0
            }
          },
          SubsumptionCache = {
            <llvm::DenseMapBase<llvm::DenseMap<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool, llvm::DenseMapInfo<std::pair<clang::NamedDecl*, clang::NamedDecl*>, void>, llvm::detail::DenseMapPair<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool> >, std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool, llvm::DenseMapInfo<std::pair<clang::NamedDecl*, clang::NamedDecl*>, void>, llvm::detail::DenseMapPair<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool, llvm::DenseMapInfo<std::pair<clang::NamedDecl*, clang::NamedDecl*>, void>, llvm::detail::DenseMapPair<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool> >:
            Buckets = 0x55559f2756b0,
            NumEntries = 5,
            NumTombstones = 0,
            NumBuckets = 64
          },
          NormalizationCache = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, clang::NormalizedConstraint*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NormalizedConstraint*> >, clang::NamedDecl*, clang::NormalizedConstraint*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NormalizedConstraint*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl*, clang::NormalizedConstraint*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NormalizedConstraint*> >:
            Buckets = 0x55559a227cb0,
            NumEntries = 14,
            NumTombstones = 0,
            NumBuckets = 64
          },
          SatisfactionCache = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::ConstraintSatisfaction, clang::ASTContext const&>, clang::ConstraintSatisfaction>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a2d92ec0,
                NumBuckets = 1024,
                NumNodes = 1458
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::ConstraintSatisfaction, clang::ASTContext const&>:
            Context = @0x5555a18d0ae0
          },
          SatisfactionStack = {
            <llvm::SmallVectorImpl<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID>, false>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55559dfe8060,
                    Size = 0,
                    Capacity = 21
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID>, 10>> = {
              InlineElts = "\350I%\242UU\000\000\350\006\216\241UU\000\000\000\000\000\000 \000\000\000\241\000\000\000\035\000\000\000\310dߡUU\000\000\001\000\000\0000o\232\241UU\000\000\001\000\000\000\200\330NnUU\000\000\001\000\000\000`\317NnUU\000\000\001\000\000\000@\316NnUU\000\000\001\000\000\000\000\206\227\241UU", '\000' <repeats 54 times>, "\310dߡUU\000\000\200\a\216\241UU\000\000\000\000\000\000 \000\000\000\241\000\000\000\035\000\000\000\200FߡUU\000\000\001\000\000\000\300t\227\241UU\000\000"...
            }, <No data fields>},
          VTableUses = {
            <llvm::SmallVectorImpl<std::pair<clang::CXXRecordDecl*, clang::SourceLocation> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::CXXRecordDecl*, clang::SourceLocation>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::CXXRecordDecl*, clang::SourceLocation>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a29dd570,
                    Size = 158,
                    Capacity = 271
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::CXXRecordDecl*, clang::SourceLocation>, 16>> = {
              InlineElts = "\200\366סUU\000\000\234\213z\002\000\000\000\000\220\006ءUU\000\000a\215z\002\000\000\000\000\300\023ءUU\000\000|\216z\002\000\000\000\000ء\357\241UU\000\000n1|\002\000\000\000\000\370\370\226\242UU\000\000O\v\204\002\000\000\000\000\b%\230\242UU\000\000n.\204\002\000\000\000\000\030U\230\242UU\000\000\2214\204\002\000\000\000\000x_\230\242UU\000\00065\204\002\000\000\000\000(ᘢUU\000\000`J\204\002\000\000\000\000\360똢UU\000\000$K\204\002\000\000\000\000\260\366\230\242UU\000\000\326K\204\002\000\000\000\000\240\002\231\242UU\000\000\306L\204\002\000\000\000\000`\r\231\242UU\000\000uM\204\002\000\000\000\000"...
            }, <No data fields>},
          VTablesUsed = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CXXRecordDecl*, bool, llvm::DenseMapInfo<clang::CXXRecordDecl*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl*, bool> >, clang::CXXRecordDecl*, bool, llvm::DenseMapInfo<clang::CXXRecordDecl*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl*, bool> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CXXRecordDecl*, bool, llvm::DenseMapInfo<clang::CXXRecordDecl*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl*, bool> >:
            Buckets = 0x5555a2ab9410,
            NumEntries = 158,
            NumTombstones = 0,
            NumBuckets = 256
          },
          AccessCheckingSFINAE = false,
          CodeSynthesisContexts = {
            <llvm::SmallVectorImpl<clang::Sema::CodeSynthesisContext>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::CodeSynthesisContext, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::CodeSynthesisContext, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556e500ef0,
                    Size = 0,
                    Capacity = 67
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::CodeSynthesisContext, 16>> = {
              InlineElts = "\000\000\000\000\001\177\000\000\225Ā\002\377\177\000\000\300\377(\242UU\000\000\000\000\000\000\000\000\000\000\300<\377\377\377\177\000\000\002\000\000\000\377\177\000\000@G\377\377\377\177\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\177\000\000\225Ā\002UU\000\000\350I%\242UU\000\000\000\000\000\000\000\000\000\000\260\006%\242UU\000\000\002\000\000\000UU\000\000\000\000\000\000\000\000\000\000\225Ā\002\225Ā\002\017\000\000\000\000\000\000\000\226\210\200\002\377\177\000\000\350I%\242UU", '\000' <repeats 22 times>, "UU\000\000p1\377\377\377\177\000\000\226\210\200\002\226\210\200\002\016\000\000\000\000\177\000\000\226\210\200\002"...
            }, <No data fields>},
          InstantiatingSpecializations = {
            <llvm::detail::DenseSetImpl<std::pair<clang::Decl*, unsigned int>, llvm::DenseMap<std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >, std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >:
                Buckets = 0x55559ee22680,
                NumEntries = 0,
                NumTombstones = 50,
                NumBuckets = 64
              }
            }, <No data fields>},
          InstantiatedNonDependentTypes = {
            <llvm::detail::DenseSetImpl<clang::QualType, llvm::DenseMap<clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >, llvm::DenseMapInfo<clang::QualType, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >, clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          CodeSynthesisContextLookupModules = {
            <llvm::SmallVectorImpl<clang::Module*>> = {
              <llvm::SmallVectorTemplateBase<clang::Module*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Module*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1240,
                    Size = 0,
                    Capacity = 16
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Module*, 16>> = {
              InlineElts = '\000' <repeats 127 times>
            }, <No data fields>},
          LookupModulesCache = {
            <llvm::detail::DenseSetImpl<clang::Module*, llvm::DenseMap<clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >, llvm::DenseMapInfo<clang::Module*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >, clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          VisibleNamespaceCache = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >, clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          InNonInstantiationSFINAEContext = false,
          NonInstantiationEntries = 0,
          LastEmittedCodeSynthesisContextDepth = 0,
          TemplateInstCallbacks = std::vector of length 0, capacity 0,
          ArgumentPackSubstitutionIndex = -1,
          SuppressedDiagnostics = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1>, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1> > >, clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1>, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1>, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1> > >:
            Buckets = 0x55559b53d020,
            NumEntries = 13,
            NumTombstones = 0,
            NumBuckets = 64
          },
          CurrentInstantiationScope = 0x0,
          DisableTypoCorrection = false,
          TyposCorrected = 0,
          TypoCorrectionFailures = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> > > >, clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> > > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          AnalysisWarnings = {
            S = @0x5555a18ddbf0,
            DefaultPolicy = {
              enableCheckFallThrough = 1,
              enableCheckUnreachable = 0,
              enableThreadSafetyAnalysis = 0,
              enableConsumedAnalysis = 0
            },
            IPData = std::unique_ptr<clang::sema::AnalysisBasedWarnings::InterProceduralData> = {
              get() = 0x5555773dcbc0
            },
            VisitedFD = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag> >, clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            NumFunctionsAnalyzed = 0,
            NumFunctionsWithBadCFGs = 0,
            NumCFGBlocks = 0,
            MaxCFGBlocksPerFunction = 0,
            NumUninitAnalysisFunctions = 0,
            NumUninitAnalysisVariables = 0,
            MaxUninitAnalysisVariablesPerFunction = 0,
            NumUninitAnalysisBlockVisits = 0,
            MaxUninitAnalysisBlockVisitsPerFunction = 0
          },
          ThreadSafetyDeclCache = 0x0,
          PendingInstantiations = std::deque with 249 elements = {{
              first = 0x5555a2183df0,
              second = {
                ID = 41929392
              }
            }, {
              first = 0x5555a2184e20,
              second = {
                ID = 41929595
              }
            }, {
              first = 0x5555a2652980,
              second = {
                ID = 42080622
              }
            }, {
              first = 0x5555a26538d0,
              second = {
                ID = 42080817
              }
            }, {
              first = 0x5555a2654980,
              second = {
                ID = 42081007
              }
            }, {
              first = 0x5555a2655a30,
              second = {
                ID = 42081195
              }
            }, {
              first = 0x5555a2656b60,
              second = {
                ID = 42081393
              }
            }, {
              first = 0x5555a2657990,
              second = {
                ID = 42081560
              }
            }, {
              first = 0x5555a2658790,
              second = {
                ID = 42081715
              }
            }, {
              first = 0x5555a2659590,
              second = {
                ID = 42081876
              }
            }, {
              first = 0x5555a2610f20,
              second = {
                ID = 42010290
              }
            }, {
              first = 0x5555a1eaf7b0,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a2665b58,
              second = {
                ID = 42082253
              }
            }, {
              first = 0x5555a266c1c8,
              second = {
                ID = 42082893
              }
            }, {
              first = 0x5555a26706a8,
              second = {
                ID = 42083525
              }
            }, {
              first = 0x5555a2672ef8,
              second = {
                ID = 42084017
              }
            }, {
              first = 0x5555a26b62e0,
              second = {
                ID = 42084708
              }
            }, {
              first = 0x5555a26b7220,
              second = {
                ID = 42084904
              }
            }, {
              first = 0x5555a26b82d0,
              second = {
                ID = 42085095
              }
            }, {
              first = 0x5555a26b9380,
              second = {
                ID = 42085284
              }
            }, {
              first = 0x5555a26ba430,
              second = {
                ID = 42085483
              }
            }, {
              first = 0x5555a26bb260,
              second = {
                ID = 42085651
              }
            }, {
              first = 0x5555a26bc090,
              second = {
                ID = 42085807
              }
            }, {
              first = 0x5555a26bce90,
              second = {
                ID = 42085969
              }
            }, {
              first = 0x5555a26be1b8,
              second = {
                ID = 42086131
              }
            }, {
              first = 0x5555a1eb6fb0,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a26d2130,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a26db3c0,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a2740e60,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a26dd5f0,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a2790660,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a2745e20,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a27dfea0,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a2795600,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a1eaf490,
              second = {
                ID = 41668709
              }
            }, {
              first = 0x5555a2611db8,
              second = {
                ID = 42103689
              }
            }, {
              first = 0x5555a2a62188,
              second = {
                ID = 42328357
              }
            }, {
              first = 0x5555a2a63988,
              second = {
                ID = 42328769
              }
            }, {
              first = 0x5555a2a7b4f8,
              second = {
                ID = 42337312
              }
            }, {
              first = 0x5555a2a7ba98,
              second = {
                ID = 42337516
              }
            }, {
              first = 0x5555a2ae8998,
              second = {
                ID = 42391378
              }
            }, {
              first = 0x5555a2ae8b88,
              second = {
                ID = 42391467
              }
            }, {
              first = 0x5555a2aeae88,
              second = {
                ID = 42391542
              }
            }, {
              first = 0x5555a2aeb078,
              second = {
                ID = 42391616
              }
            }, {
              first = 0x5555a2aea658,
              second = {
                ID = 42391685
              }
            }, {
              first = 0x5555a2aea718,
              second = {
                ID = 42391771
              }
            }, {
              first = 0x5555a2aea988,
              second = {
                ID = 42391948
              }
            }, {
              first = 0x5555a2aeac78,
              second = {
                ID = 42392068
              }
            }, {
              first = 0x5555a2aeb3f8,
              second = {
                ID = 42392408
              }
            }, {
              first = 0x5555a2aeb6c8,
              second = {
                ID = 42392541
              }
            }, {
              first = 0x5555a2aebaf8,
              second = {
                ID = 42392691
              }
            }, {
              first = 0x5555a2aebef8,
              second = {
                ID = 42392879
              }
            }, {
              first = 0x5555a2aec278,
              second = {
                ID = 42393060
              }
            }, {
              first = 0x5555a2aec5f8,
              second = {
                ID = 42393242
              }
            }, {
              first = 0x5555a2aec968,
              second = {
                ID = 42393415
              }
            }, {
              first = 0x5555a2aeccd0,
              second = {
                ID = 42393607
              }
            }, {
              first = 0x5555a2aecfd0,
              second = {
                ID = 42393792
              }
            }, {
              first = 0x5555a2aed2c8,
              second = {
                ID = 42393978
              }
            }, {
              first = 0x5555a2aed568,
              second = {
                ID = 42394128
              }
            }, {
              first = 0x5555a2aed690,
              second = {
                ID = 42394194
              }
            }, {
              first = 0x5555a2aed7a8,
              second = {
                ID = 42394254
              }
            }, {
              first = 0x5555a2dc94d0,
              second = {
                ID = 41830397
              }
            }, {
              first = 0x5555a2e22408,
              second = {
                ID = 42543607
              }
            }, {
              first = 0x5555a2e227e8,
              second = {
                ID = 42543663
              }
            }, {
              first = 0x5555a2b39bc8,
              second = {
                ID = 42543693
              }
            }, {
              first = 0x5555a2b39e10,
              second = {
                ID = 42543840
              }
            }, {
              first = 0x5555a2b3b7a8,
              second = {
                ID = 42543904
              }
            }, {
              first = 0x5555a2ec4110,
              second = {
                ID = 42590669
              }
            }, {
              first = 0x5555a2ec47c0,
              second = {
                ID = 42590724
              }
            }, {
              first = 0x5555a37353b0,
              second = {
                ID = 43208330
              }
            }, {
              first = 0x5555a3798ad8,
              second = {
                ID = 43242857
              }
            }, {
              first = 0x5555a3794030,
              second = {
                ID = 43243308
              }
            }, {
              first = 0x5555a3796678,
              second = {
                ID = 43243507
              }
            }, {
              first = 0x5555a3798220,
              second = {
                ID = 43244435
              }
            }, {
              first = 0x5555a3798810,
              second = {
                ID = 43244564
              }
            }, {
              first = 0x5555a38715e0,
              second = {
                ID = 43309899
              }
            }, {
              first = 0x5555a387f010,
              second = {
                ID = 43310867
              }
            }, {
              first = 0x5555a38b20e0,
              second = {
                ID = 43311784
              }
            }, {
              first = 0x5555a3969790,
              second = {
                ID = 43340462
              }
            }, {
              first = 0x5555a3972908,
              second = {
                ID = 43340651
              }
            }, {
              first = 0x5555a39a8348,
              second = {
                ID = 43344201
              }
            }, {
              first = 0x5555a39aaf48,
              second = {
                ID = 43344392
              }
            }, {
              first = 0x5555a39cc1b0,
              second = {
                ID = 43349966
              }
            }, {
              first = 0x5555a39cf338,
              second = {
                ID = 43350162
              }
            }, {
              first = 0x5555a39e9448,
              second = {
                ID = 43354983
              }
            }, {
              first = 0x5555a39ec8a8,
              second = {
                ID = 43355178
              }
            }, {
              first = 0x5555a3a12a18,
              second = {
                ID = 43359562
              }
            }, {
              first = 0x5555a3a15e18,
              second = {
                ID = 43359762
              }
            }, {
              first = 0x5555a3c02358,
              second = {
                ID = 43269921
              }
            }, {
              first = 0x5555a3bef230,
              second = {
                ID = 43289974
              }
            }, {
              first = 0x5555a3dfa268,
              second = {
                ID = 43427665
              }
            }, {
              first = 0x5555a3dfa360,
              second = {
                ID = 43427633
              }
            }, {
              first = 0x5555a3e00408,
              second = {
                ID = 43428926
              }
            }, {
              first = 0x5555a3e00500,
              second = {
                ID = 43428894
              }
            }, {
              first = 0x5555a3e06588,
              second = {
                ID = 43430201
              }
            }, {
              first = 0x5555a3e06680,
              second = {
                ID = 43430169
              }
            }, {
              first = 0x5555a3e106b8,
              second = {
                ID = 43431474
              }
            }, {
              first = 0x5555a3e107b0,
              second = {
                ID = 43431442
              }
            }, {
              first = 0x5555a4057bf8,
              second = {
                ID = 43521362
              }
            }, {
              first = 0x5555a2f587d8,
              second = {
                ID = 43660767
              }
            }, {
              first = 0x5555a45af2a8,
              second = {
                ID = 43735962
              }
            }, {
              first = 0x5555a45b3670,
              second = {
                ID = 43735977
              }
            }, {
              first = 0x5555a45af8d0,
              second = {
                ID = 43736058
              }
            }, {
              first = 0x5555a46223d8,
              second = {
                ID = 43736192
              }
            }, {
              first = 0x5555a462c790,
              second = {
                ID = 43736207
              }
            }, {
              first = 0x5555a4622a00,
              second = {
                ID = 43736288
              }
            }, {
              first = 0x5555a4654020,
              second = {
                ID = 43736454
              }
            }, {
              first = 0x5555a46555b0,
              second = {
                ID = 43736715
              }
            }, {
              first = 0x5555a478c800,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a478c800,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a47baf50,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a47baf50,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a4a08920,
              second = {
                ID = 44223232
              }
            }, {
              first = 0x5555a4a09450,
              second = {
                ID = 44223352
              }
            }, {
              first = 0x5555a4a09f40,
              second = {
                ID = 44223493
              }
            }, {
              first = 0x5555a4ad6410,
              second = {
                ID = 44305306
              }
            }, {
              first = 0x5555a4ad6ee0,
              second = {
                ID = 44305471
              }
            }, {
              first = 0x5555a4ad85d0,
              second = {
                ID = 44305918
              }
            }, {
              first = 0x5555a4ad9280,
              second = {
                ID = 44306085
              }
            }, {
              first = 0x5555a4ada6f0,
              second = {
                ID = 44306500
              }
            }, {
              first = 0x5555a4adafe0,
              second = {
                ID = 44306619
              }
            }, {
              first = 0x5555a4adcfa0,
              second = {
                ID = 44306996
              }
            }, {
              first = 0x5555a4add690,
              second = {
                ID = 44307109
              }
            }, {
              first = 0x5555a4ade6c0,
              second = {
                ID = 44307452
              }
            }, {
              first = 0x5555a4aded80,
              second = {
                ID = 44307565
              }
            }, {
              first = 0x5555a4adff20,
              second = {
                ID = 44307921
              }
            }, {
              first = 0x5555a4ae07e0,
              second = {
                ID = 44308060
              }
            }, {
              first = 0x5555a4ae2940,
              second = {
                ID = 44308475
              }
            }, {
              first = 0x5555a4ae3200,
              second = {
                ID = 44308612
              }
            }, {
              first = 0x5555a4ae5360,
              second = {
                ID = 44309028
              }
            }, {
              first = 0x5555a4ae5c20,
              second = {
                ID = 44309165
              }
            }, {
              first = 0x5555a4ae7d80,
              second = {
                ID = 44309581
              }
            }, {
              first = 0x5555a4ae8640,
              second = {
                ID = 44309718
              }
            }, {
              first = 0x5555a4aea7a0,
              second = {
                ID = 44310133
              }
            }, {
              first = 0x5555a4aeb060,
              second = {
                ID = 44310270
              }
            }, {
              first = 0x5555a4aed1c0,
              second = {
                ID = 44310684
              }
            }, {
              first = 0x5555a4aeda80,
              second = {
                ID = 44310815
              }
            }, {
              first = 0x5555a4aefbe0,
              second = {
                ID = 44311215
              }
            }, {
              first = 0x5555a4af04a0,
              second = {
                ID = 44311346
              }
            }, {
              first = 0x5555a4af27d0,
              second = {
                ID = 44311759
              }
            }, {
              first = 0x5555a4af3280,
              second = {
                ID = 44311916
              }
            }, {
              first = 0x5555a4af5980,
              second = {
                ID = 44312356
              }
            }, {
              first = 0x5555a4af6060,
              second = {
                ID = 44312455
              }
            }, {
              first = 0x5555a4af7230,
              second = {
                ID = 44312790
              }
            }, {
              first = 0x5555a4af7b30,
              second = {
                ID = 44312921
              }
            }, {
              first = 0x5555a4af8e10,
              second = {
                ID = 44313301
              }
            }, {
              first = 0x5555a4af96a0,
              second = {
                ID = 44313429
              }
            }, {
              first = 0x5555a4afa910,
              second = {
                ID = 44313802
              }
            }, {
              first = 0x5555a4afb1a0,
              second = {
                ID = 44313937
              }
            }, {
              first = 0x5555a4afc260,
              second = {
                ID = 44314309
              }
            }, {
              first = 0x5555a4afc920,
              second = {
                ID = 44314420
              }
            }, {
              first = 0x5555a4afda90,
              second = {
                ID = 44314776
              }
            }, {
              first = 0x5555a4afe320,
              second = {
                ID = 44314908
              }
            }, {
              first = 0x5555a4aff730,
              second = {
                ID = 44315314
              }
            }, {
              first = 0x5555a4b00190,
              second = {
                ID = 44315483
              }
            }, {
              first = 0x5555a4b014e0,
              second = {
                ID = 44315914
              }
            }, {
              first = 0x5555a4b01d70,
              second = {
                ID = 44316048
              }
            }, {
              first = 0x5555a4b03710,
              second = {
                ID = 44316554
              }
            }, {
              first = 0x5555a4b04640,
              second = {
                ID = 44316738
              }
            }, {
              first = 0x5555a4b07df0,
              second = {
                ID = 44317869
              }
            }, {
              first = 0x5555a4b088b0,
              second = {
                ID = 44318033
              }
            }, {
              first = 0x5555a4b0b590,
              second = {
                ID = 44318523
              }
            }, {
              first = 0x5555a4b0c2d0,
              second = {
                ID = 44318701
              }
            }, {
              first = 0x5555a4c6d338,
              second = {
                ID = 44422350
              }
            }, {
              first = 0x5555a4c70088,
              second = {
                ID = 44422505
              }
            }, {
              first = 0x5555a4cfea88,
              second = {
                ID = 44432563
              }
            }, {
              first = 0x5555a4d03968,
              second = {
                ID = 44432734
              }
            }, {
              first = 0x5555a4d00568,
              second = {
                ID = 44437987
              }
            }, {
              first = 0x5555a4d053e8,
              second = {
                ID = 44438148
              }
            }, {
              first = 0x5555a4d4dcc8,
              second = {
                ID = 44443976
              }
            }, {
              first = 0x5555a4d51338,
              second = {
                ID = 44444145
              }
            }, {
              first = 0x5555a4dac768,
              second = {
                ID = 44448506
              }
            }, {
              first = 0x5555a4dafdc8,
              second = {
                ID = 44448685
              }
            }, {
              first = 0x5555a518c000,
              second = {
                ID = 44557664
              }
            }, {
              first = 0x5555a518d0e8,
              second = {
                ID = 44558038
              }
            }, {
              first = 0x5555a5292178,
              second = {
                ID = 44689734
              }
            }, {
              first = 0x5555a58e9cc8,
              second = {
                ID = 45775897
              }
            }, {
              first = 0x5555a58ea7f8,
              second = {
                ID = 45776071
              }
            }, {
              first = 0x5555a58eb298,
              second = {
                ID = 45776242
              }
            }, {
              first = 0x5555a58ebcd8,
              second = {
                ID = 45776410
              }
            }, {
              first = 0x5555a58ec7a8,
              second = {
                ID = 45776581
              }
            }, {
              first = 0x5555a58ed2d8,
              second = {
                ID = 45776755
              }
            }, {
              first = 0x5555a58edd78,
              second = {
                ID = 45776926
              }
            }, {
              first = 0x5555a58ee7b8,
              second = {
                ID = 45777094
              }
            }, {
              first = 0x5555a58ef1f8,
              second = {
                ID = 45777265
              }
            }, {
              first = 0x5555a58efc38,
              second = {
                ID = 45777439
              }
            }, {
              first = 0x5555a58f0678,
              second = {
                ID = 45777610
              }
            }, {
              first = 0x5555a58f10b8,
              second = {
                ID = 45777778
              }
            }, {
              first = 0x5555a58f1b88,
              second = {
                ID = 45777949
              }
            }, {
              first = 0x5555a58f26b8,
              second = {
                ID = 45778123
              }
            }, {
              first = 0x5555a58f3158,
              second = {
                ID = 45778294
              }
            }, {
              first = 0x5555a58f3b98,
              second = {
                ID = 45778462
              }
            }, {
              first = 0x5555a58f45d8,
              second = {
                ID = 45778633
              }
            }, {
              first = 0x5555a58f5018,
              second = {
                ID = 45778807
              }
            }, {
              first = 0x5555a58f5a58,
              second = {
                ID = 45778978
              }
            }, {
              first = 0x5555a58f6498,
              second = {
                ID = 45779146
              }
            }, {
              first = 0x5555a58f6ed8,
              second = {
                ID = 45779317
              }
            }, {
              first = 0x5555a58f7918,
              second = {
                ID = 45779491
              }
            }, {
              first = 0x5555a58f8358,
              second = {
                ID = 45779662
              }
            }, {
              first = 0x5555a58f8d98,
              second = {
                ID = 45779830
              }
            }...},
          LateParsedInstantiations = {
            <llvm::SmallVectorImpl<std::pair<clang::ValueDecl*, clang::SourceLocation> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::ValueDecl*, clang::SourceLocation>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::ValueDecl*, clang::SourceLocation>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1420,
                    Size = 0,
                    Capacity = 1
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::ValueDecl*, clang::SourceLocation>, 1>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          PendingLocalImplicitInstantiations = std::deque with 0 elements,
          VarDataSharingAttributesStack = 0x5555a18e1830,
          DeclareTargetNesting = {
            <llvm::SmallVectorImpl<clang::Sema::DeclareTargetContextInfo>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::DeclareTargetContextInfo, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::DeclareTargetContextInfo, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1498,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::DeclareTargetContextInfo, 4>> = {
              InlineElts = '\000' <repeats 223 times>
            }, <No data fields>},
          OMPDeclareVariantScopes = {
            <llvm::SmallVectorImpl<clang::Sema::OMPDeclareVariantScope>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::OMPDeclareVariantScope, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::OMPDeclareVariantScope, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1588,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::OMPDeclareVariantScope, 4>> = {
              InlineElts = '\000' <repeats 159 times>
            }, <No data fields>},
          OMPAssumeScoped = {
            <llvm::SmallVectorImpl<clang::AssumptionAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::AssumptionAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::AssumptionAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1638,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::AssumptionAttr*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          OMPAssumeGlobal = {
            <llvm::SmallVectorImpl<clang::AssumptionAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::AssumptionAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::AssumptionAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1668,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::AssumptionAttr*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          ForceCUDAHostDeviceDepth = 0,
          DeviceDeferredDiags = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > >, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > > > >, clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > >, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > >, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > > > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          LocsWithCUDACallDiags = {
            <llvm::detail::DenseSetImpl<clang::Sema::FunctionDeclAndLoc, llvm::DenseMap<clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >, clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          DeviceKnownEmittedFns = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc> >, clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          TypeTagForDatatypeMagicValues = std::unique_ptr<llvm::DenseMap<std::pair<clang::IdentifierInfo const*, unsigned long>, clang::Sema::TypeTagData, llvm::DenseMapInfo<std::pair<clang::IdentifierInfo const*, unsigned long>, void>, llvm::detail::DenseMapPair<std::pair<clang::IdentifierInfo const*, unsigned long>, clang::Sema::TypeTagData> >> = {
            get() = 0x0
          },
          CurScope = 0x55556d734890,
          Ident_super = 0x0,
          Ident___float128 = 0x0,
          Ident__Nonnull = 0x0,
          Ident__Nullable = 0x0,
          Ident__Nullable_result = 0x0,
          Ident__Null_unspecified = 0x0,
          Ident_NSError = 0x0,
          SemaPPCallbackHandler = 0x555561a6bde0,
          CFError = 0x0,
          DelayedDllExportClasses = {
            <llvm::SmallVectorImpl<clang::CXXRecordDecl*>> = {
              <llvm::SmallVectorTemplateBase<clang::CXXRecordDecl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::CXXRecordDecl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1740,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::CXXRecordDecl*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          DelayedDllExportMemberFunctions = {
            <llvm::SmallVectorImpl<clang::CXXMethodDecl*>> = {
              <llvm::SmallVectorTemplateBase<clang::CXXMethodDecl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::CXXMethodDecl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1770,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::CXXMethodDecl*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          ParsingClassDepth = 2,
          MisalignedMembers = {
            <llvm::SmallVectorImpl<clang::Sema::MisalignedMember>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::MisalignedMember, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::MisalignedMember, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e17a8,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::MisalignedMember, 4>> = {
              InlineElts = '\000' <repeats 127 times>
            }, <No data fields>}
        }
        Str = {
          Data = 0x5555a3a82b28 "__access__",
          Length = 10
        }
        Args = {
          <llvm::SmallVectorImpl<clang::Expr*>> = {
            <llvm::SmallVectorTemplateBase<clang::Expr*, true>> = {
              <llvm::SmallVectorTemplateCommon<clang::Expr*, void>> = {
                <llvm::SmallVectorBase<unsigned int>> = {
                  BeginX = 0x7fffffff6330,
                  Size = 0,
                  Capacity = 4
                }, <No data fields>}, 
            }, <No data fields>}, 
          <llvm::SmallVectorStorage<clang::Expr*, 4>> = {
            InlineElts = "Pc\377\377\377\177\000\000\nM\242XUU\000\000\224\256\360^UU\000\000\b\370\222\241UU\000"
          }, <No data fields>}
        __PRETTY_FUNCTION__ = "void HandleUnkownTypeAttrAsAnnotateTypeAttr({anonymous}::TypeProcessingState&, clang::QualType&, const clang::ParsedAttr&)"
        AnnotateTypeAttr = 0x7fffffff6310
#1  0x0000555559ed322d in processTypeAttrs (state=..., type=..., TAL=TAL_DeclName, attrs=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaType.cpp:8413
        attr = @0x5555a192f808: {
          <clang::AttributeCommonInfo> = {
            AttrName = 0x5555a3a82b38,
            ScopeName = 0x5555a1e2cdc0,
            AttrRange = {
              B = {
                ID = 46445057
              },
              E = {
                ID = 46445094
              }
            },
            ScopeLoc = {
              ID = 46445057
            },
            AttrKind = 354,
            SyntaxUsed = 1,
            SpellingIndex = 15
          }, 
          <llvm::TrailingObjects<clang::ParsedAttr, llvm::PointerUnion<clang::Expr*, clang::IdentifierLoc*>, clang::detail::AvailabilityData, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>> = {
            <llvm::trailing_objects_internal::TrailingObjectsImpl<8, clang::ParsedAttr, llvm::TrailingObjects<clang::ParsedAttr, llvm::PointerUnion<clang::Expr*, clang::IdentifierLoc*>, clang::detail::AvailabilityData, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>, clang::ParsedAttr, llvm::PointerUnion<clang::Expr*, clang::IdentifierLoc*>, clang::detail::AvailabilityData, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>> = {
              <llvm::trailing_objects_internal::TrailingObjectsImpl<8, clang::ParsedAttr, llvm::TrailingObjects<clang::ParsedAttr, llvm::PointerUnion<clang::Expr*, clang::IdentifierLoc*>, clang::detail::AvailabilityData, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>, llvm::PointerUnion<clang::Expr*, clang::IdentifierLoc*>, clang::detail::AvailabilityData, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>> = {
                <llvm::trailing_objects_internal::TrailingObjectsImpl<8, clang::ParsedAttr, llvm::TrailingObjects<clang::ParsedAttr, llvm::PointerUnion<clang::Expr*, clang::IdentifierLoc*>, clang::detail::AvailabilityData, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>, clang::detail::AvailabilityData, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>> = {
                  <llvm::trailing_objects_internal::TrailingObjectsImpl<8, clang::ParsedAttr, llvm::TrailingObjects<clang::ParsedAttr, llvm::PointerUnion<clang::Expr*, clang::IdentifierLoc*>, clang::detail::AvailabilityData, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>> = {
                    <llvm::trailing_objects_internal::TrailingObjectsImpl<8, clang::ParsedAttr, llvm::TrailingObjects<clang::ParsedAttr, llvm::PointerUnion<clang::Expr*, clang::IdentifierLoc*>, clang::detail::AvailabilityData, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>> = {
                      <llvm::trailing_objects_internal::TrailingObjectsImpl<8, clang::ParsedAttr, llvm::TrailingObjects<clang::ParsedAttr, llvm::PointerUnion<clang::Expr*, clang::IdentifierLoc*>, clang::detail::AvailabilityData, clang::detail::TypeTagForDatatypeData, clang::OpaquePtr<clang::QualType>, clang::detail::PropertyData>, clang::detail::PropertyData>> = {
                        <llvm::trailing_objects_internal::TrailingObjectsBase> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, 
          members of clang::ParsedAttr:
          MacroII = 0x0,
          MacroExpansionLoc = {
            ID = 0
          },
          EllipsisLoc = {
            ID = 0
          },
          NumArgs = 2,
          Invalid = 0,
          UsedAsTypeAttr = 0,
          IsAvailability = 0,
          IsTypeTagForDatatype = 0,
          IsProperty = 0,
          HasParsedType = 0,
          HasProcessingCache = 0,
          ProcessingCache = 0,
          IsPragmaClangAttribute = 0,
          UnavailableLoc = {
            ID = 0
          },
          MessageExpr = 0x0,
          Info = @0x55556135a900
        }
        __for_range = @0x7fffffff64d0: {
          Range = {
            B = {
              ID = 0
            },
            E = {
              ID = 0
            }
          },
          AttrList = {
            <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff64e8,
                    Size = 1,
                    Capacity = 6
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
              InlineElts = "\b\370\222\241UU\000\000\020e\377\377\377\177\000\000\340d\377\377\377\177\000\000\000h\377\377\377\177\000\000\260g\377\377\377\177\000\0000e\377\377\377\177\000"
            }, <No data fields>}
        }
        __for_begin = {
          <llvm::iterator_adaptor_base<clang::ParsedAttributesView::iterator, clang::ParsedAttr**, std::random_access_iterator_tag, clang::ParsedAttr, long, clang::ParsedAttr*, clang::ParsedAttr&>> = {
            <llvm::iterator_facade_base<clang::ParsedAttributesView::iterator, std::random_access_iterator_tag, clang::ParsedAttr, long, clang::ParsedAttr*, clang::ParsedAttr&>> = {<No data fields>}, 
            members of llvm::iterator_adaptor_base<clang::ParsedAttributesView::iterator, clang::ParsedAttr**, std::random_access_iterator_tag, clang::ParsedAttr, long, clang::ParsedAttr*, clang::ParsedAttr&>:
            I = 0x7fffffff64e8
          }, <No data fields>}
        __for_end = {
          <llvm::iterator_adaptor_base<clang::ParsedAttributesView::iterator, clang::ParsedAttr**, std::random_access_iterator_tag, clang::ParsedAttr, long, clang::ParsedAttr*, clang::ParsedAttr&>> = {
            <llvm::iterator_facade_base<clang::ParsedAttributesView::iterator, std::random_access_iterator_tag, clang::ParsedAttr, long, clang::ParsedAttr*, clang::ParsedAttr&>> = {<No data fields>}, 
            members of llvm::iterator_adaptor_base<clang::ParsedAttributesView::iterator, clang::ParsedAttr**, std::random_access_iterator_tag, clang::ParsedAttr, long, clang::ParsedAttr*, clang::ParsedAttr&>:
            I = 0x7fffffff64f0
          }, <No data fields>}
        AttrsCopy = {
          Range = {
            B = {
              ID = 0
            },
            E = {
              ID = 0
            }
          },
          AttrList = {
            <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff64e8,
                    Size = 1,
                    Capacity = 6
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
              InlineElts = "\b\370\222\241UU\000\000\020e\377\377\377\177\000\000\340d\377\377\377\177\000\000\000h\377\377\377\177\000\000\260g\377\377\377\177\000\0000e\377\377\377\177\000"
            }, <No data fields>}
        }
#2  0x0000555559ec608b in GetFullTypeForDeclarator (state=..., declSpecType=..., TInfo=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaType.cpp:5810
        T = {
          Value = {
            Value = 93826350785760
          }
        }
        D = @0x7fffffff79c0: {
          DS = @0x7fffffff7700,
          SS = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            Builder = {
              Representation = 0x0,
              Buffer = 0x0,
              BufferSize = 0,
              BufferCapacity = 0
            }
          },
          Name = {
            Kind = clang::UnqualifiedIdKind::IK_ConstructorName,
            {
              Identifier = 0x5555a64f2130,
              OperatorFunctionId = {
                Operator = 2790203696,
                SymbolLocations = {{
                    ID = 21845
                  }, {
                    ID = 1444098631
                  }, {
                    ID = 21845
                  }}
              },
              ConversionFunctionId = {
                Ptr = 0x5555a64f2130
              },
              ConstructorName = {
                Ptr = 0x5555a64f2130
              },
              DestructorName = {
                Ptr = 0x5555a64f2130
              },
              TemplateName = {
                Ptr = 0x5555a64f2130
              },
              TemplateId = 0x5555a64f2130
            },
            StartLocation = {
              ID = 46445109
            },
            EndLocation = {
              ID = 46445109
            }
          },
          Range = {
            B = {
              ID = 46445100
            },
            E = {
              ID = 46445147
            }
          },
          Context = clang::DeclaratorContext::Member,
          BindingGroup = {
            LSquareLoc = {
              ID = 0
            },
            RSquareLoc = {
              ID = 0
            },
            Bindings = 0x0,
            NumBindings = 0,
            DeleteBindings = 0
          },
          DeclTypeInfo = {
            <llvm::SmallVectorImpl<clang::DeclaratorChunk>> = {
              <llvm::SmallVectorTemplateBase<clang::DeclaratorChunk, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::DeclaratorChunk, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff7a40,
                    Size = 1,
                    Capacity = 8
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::DeclaratorChunk, 8>> = {
              InlineElts = "\003\000\000\000E\262\304\002[\262\304\002", '\000' <repeats 12 times>, "hz\377\377\377\177\000\000\000\000\000\000\006\000\000\000\000+\250\243UU\000\000\220z\377\377\377\177\000\000\232E\266XUU\000\000@\201\245\241UU\000\000 {\377\377\377\177\000\000\320z\377\377\377\177\000\000\t O\246E\262\304\002\000\000\000\000[\262\304\002\001", '\000' <repeats 23 times>, "\210\200\377\377\377\177", '\000' <repeats 38 times>, "(7\261}\300Ms\242UU\000\000\020|\377\377\377\177\000\000 {\377\377\377\177\000\000"...
            }, <No data fields>},
          InvalidType = 0,
          GroupingParens = 0,
          FunctionDefinition = 1,
          Redeclaration = 0,
          Extension = 0,
          ObjCIvar = 0,
          ObjCWeakProperty = 0,
          InlineStorageUsed = 1,
          HasInitializer = 0,
          Attrs = {
            <clang::ParsedAttributesView> = {
              Range = {
                B = {
                  ID = 0
                },
                E = {
                  ID = 0
                }
              },
              AttrList = {
                <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                  <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x7fffffff7fe0,
                        Size = 0,
                        Capacity = 6
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                  InlineElts = "S\200\377\377\377\177\000\000X\200\377\377\377\177\000\000X\025\223\244UU\000\000\000\262UVUU\000\000\360*\250\243UU\000\000\000\230\031\373(7\261}"
                }, <No data fields>}
            }, 
            members of clang::ParsedAttributes:
            pool = {
              Factory = @0x55559f6c2238,
              Attrs = {
                <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                  <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x7fffffff8028,
                        Size = 0,
                        Capacity = 6
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                  InlineElts = "\350\254UVUU\000\000\260Q\366\363\377\177\000\000\017\000\000\000\000\000\000\000\260\200\377\377\377\177\000\000\3008\277\241UU\000\000\200\200\377\000\3019\000"
                }, <No data fields>}
            }
          },
          DeclarationAttrs = @0x7fffffff7300,
          AsmLabel = 0x0,
          TrailingRequiresClause = 0x0,
          TemplateParameterLists = {
            Data = 0x0,
            Length = 0
          },
          InventedTemplateParameterList = 0x0,
          {
            InlineParams = {{
                Ident = 0x0,
                IdentLoc = {
                  ID = 46445147
                },
                Param = 0x5555a64f2448,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x0
                }
              }, {
                Ident = 0x5555a1bf38c0,
                IdentLoc = {
                  ID = 0
                },
                Param = 0x5555a64f21c0,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff80f0
                }
              }, {
                Ident = 0x555556135c9b <llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> >::updatePointer(long, void*)+28>,
                IdentLoc = {
                  ID = 0
                },
                Param = 0x5555a64f21c0,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7ffff3f651b0
                }
              }, {
                Ident = 0x0,
                IdentLoc = {
                  ID = 4294934832
                },
                Param = 0x555556131c1c <llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >::setPointerAndInt(void*, int) &+54>,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x5555a18d0ae2
                }
              }, {
                Ident = 0xffff8130,
                IdentLoc = {
                  ID = 2790203840
                },
                Param = 0x7fffffff8180,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff8150
                }
              }, {
                Ident = 0x7fffffff81e8,
                IdentLoc = {
                  ID = 2790203840
                },
                Param = 0x7fffffff81e8,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff8160
                }
              }, {
                Ident = 0x5555561292b5 <llvm::pointer_union_detail::PointerUnionMembers<llvm::PointerUnion<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >, 1, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>::PointerUnionMembers(llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >)+35>,
                IdentLoc = {
                  ID = 2790203840
                },
                Param = 0x25a64f2098,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff8180
                }
              }, {
                Ident = 0x25a64f2098,
                IdentLoc = {
                  ID = 4294934928
                },
                Param = 0x5555560d1cc6 <clang::CXXRecordDecl::classof(clang::Decl const*)+31>,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff81a0
                }
              }, {
                Ident = 0x5555a64f2098,
                IdentLoc = {
                  ID = 4294934960
                },
                Param = 0x55555613535b <llvm::isa_impl<clang::CXXRecordDecl, clang::TagDecl, void>::doit(clang::TagDecl const&)+24>,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff81c0
                }
              }, {
                Ident = 0x5555a64f2098,
                IdentLoc = {
                  ID = 4294934992
                },
                Param = 0x555556130b6d <llvm::isa_impl_cl<clang::CXXRecordDecl, clang::TagDecl const*>::doit(clang::TagDecl const*)+71>,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff81e0
                }
              }, {
                Ident = 0x5555a64f2098,
                IdentLoc = {
                  ID = 4294935024
                },
                Param = 0x5555561281af <llvm::isa_impl_wrap<clang::CXXRecordDecl, clang::TagDecl const*, clang::TagDecl const*>::doit(clang::TagDecl const* const&)+27>,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff8210
                }
              }, {
                Ident = 0x7fffffff8210,
                IdentLoc = {
                  ID = 4294935072
                },
                Param = 0x7fffffff82a7,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff8230
                }
              }, {
                Ident = 0x5555565f1e18 <std::pair<void const**, bool>::pair<void const**&, bool, true>(void const**&, bool&&)+54>,
                IdentLoc = {
                  ID = 2790203544
                },
                Param = 0x7fffffff82a7,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff82a8
                }
              }, {
                Ident = 0x5555a64f21c1,
                IdentLoc = {
                  ID = 4294935120
                },
                Param = 0x55555613591f <llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> > > >::getInt() const+27>,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff82a7
                }
              }, {
                Ident = 0x5555a64f2220,
                IdentLoc = {
                  ID = 4294935152
                },
                Param = 0x555556131807 <llvm::CastInfoPointerUnionImpl<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >::isPossible<clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >(llvm::PointerUnion<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >&)+24>,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff8280
                }
              }, {
                Ident = 0x5555a64f2220,
                IdentLoc = {
                  ID = 4294935184
                },
                Param = 0x5555561317ed <llvm::CastInfo<clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>, llvm::PointerUnion<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >, void>::isPossible(llvm::PointerUnion<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >&)+24>,
                DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                  get() = 0x7fffffff82f0
                }
              }},
            InlineBindings = {{
                Name = 0x0,
                NameLoc = {
                  ID = 46445147
                }
              }, {
                Name = 0x5555a64f2448,
                NameLoc = {
                  ID = 0
                }
              }, {
                Name = 0x5555a1bf38c0,
                NameLoc = {
                  ID = 0
                }
              }, {
                Name = 0x5555a64f21c0,
                NameLoc = {
                  ID = 4294934768
                }
              }, {
                Name = 0x555556135c9b <llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> >::updatePointer(long, void*)+28>,
                NameLoc = {
                  ID = 0
                }
              }, {
                Name = 0x5555a64f21c0,
                NameLoc = {
                  ID = 4093006256
                }
              }, {
                Name = 0x0,
                NameLoc = {
                  ID = 4294934832
                }
              }, {
                Name = 0x555556131c1c <llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >::setPointerAndInt(void*, int) &+54>,
                NameLoc = {
                  ID = 2710375138
                }
              }, {
                Name = 0xffff8130,
                NameLoc = {
                  ID = 2790203840
                }
              }, {
                Name = 0x7fffffff8180,
                NameLoc = {
                  ID = 4294934864
                }
              }, {
                Name = 0x7fffffff81e8,
                NameLoc = {
                  ID = 2790203840
                }
              }, {
                Name = 0x7fffffff81e8,
                NameLoc = {
                  ID = 4294934880
                }
              }, {
                Name = 0x5555561292b5 <llvm::pointer_union_detail::PointerUnionMembers<llvm::PointerUnion<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >, 1, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>::PointerUnionMembers(llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >)+35>,
                NameLoc = {
                  ID = 2790203840
                }
              }, {
                Name = 0x25a64f2098,
                NameLoc = {
                  ID = 4294934912
                }
              }, {
                Name = 0x25a64f2098,
                NameLoc = {
                  ID = 4294934928
                }
              }, {
                Name = 0x5555560d1cc6 <clang::CXXRecordDecl::classof(clang::Decl const*)+31>,
                NameLoc = {
                  ID = 4294934944
                }
              }}
          },
          CommaLoc = {
            ID = 0
          },
          EllipsisLoc = {
            ID = 0
          }
        }
        S = @0x5555a18ddbf0: {
          _vptr.Sema = 0x555561261828 <vtable for clang::Sema+16>,
          ExternalSource = {
            Obj = 0x0
          },
          OpenCLFeatures = {
            OptMap = {
              <llvm::StringMapImpl> = {
                TheTable = 0x555565132610,
                NumBuckets = 64,
                NumItems = 38,
                NumTombstones = 0,
                ItemSize = 32
              }, 
              <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
                <llvm::MallocAllocator> = {
                  <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}
          },
          CurFPFeatures = {
            Value = 249
          },
          LangOpts = @0x55556152eb00,
          PP = @0x5555a1bf36a0,
          Context = @0x5555a18d0ae0,
          Consumer = @0x555561544820,
          Diags = @0x5555615324b0,
          SourceMgr = @0x55556153b630,
          CollectStats = false,
          CodeCompleter = 0x0,
          CurContext = 0x5555a64f20d8,
          OriginalLexicalContext = 0x0,
          VAListTagName = {
            Ptr = 93826271132024
          },
          MSStructPragmaOn = false,
          MSPointerToMemberRepresentationMethod = clang::LangOptions::PPTMK_BestCase,
          CurrentSEHFinally = {
            <llvm::SmallVectorImpl<clang::Scope*>> = {
              <llvm::SmallVectorTemplateBase<clang::Scope*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Scope*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18ddc90,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Scope*, 2>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          ImplicitMSInheritanceAttrLoc = {
            ID = 0
          },
          TypoExprs = {
            <llvm::SmallVectorImpl<clang::TypoExpr*>> = {
              <llvm::SmallVectorTemplateBase<clang::TypoExpr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::TypoExpr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18ddcb8,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::TypoExpr*, 2>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          PragmaClangBSSSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangDataSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangRodataSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangRelroSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangTextSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          VtorDispStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18ddda0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023\000\000\000\000\000\000\000\001", '\000' <repeats 15 times>, "%`\236]UU\000\000\023\000\000\000\000\000\000\000\001", '\000' <repeats 14 times>
              }, <No data fields>},
            DefaultValue = clang::MSVtorDispMode::ForVBaseOverride,
            CurrentValue = clang::MSVtorDispMode::ForVBaseOverride,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          AlignPackStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18dde00,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot, 2>> = {
                InlineElts = '\000' <repeats 63 times>
              }, <No data fields>},
            DefaultValue = {
              PackAttr = false,
              AlignMode = clang::Sema::AlignPackInfo::Native,
              PackNumber = 255 '\377',
              XLStack = false
            },
            CurrentValue = {
              PackAttr = false,
              AlignMode = clang::Sema::AlignPackInfo::Native,
              PackNumber = 255 '\377',
              XLStack = false
            },
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          AlignPackIncludeStack = {
            <llvm::SmallVectorImpl<clang::Sema::AlignPackIncludeState>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::AlignPackIncludeState, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::AlignPackIncludeState, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18dde60,
                    Size = 0,
                    Capacity = 8
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::AlignPackIncludeState, 8>> = {
              InlineElts = '\000' <repeats 95 times>
            }, <No data fields>},
          DataSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18dded0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          BSSSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18ddf38,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          ConstSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18ddfa0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          CodeSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de008,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          StrictGuardStackCheckStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<bool>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<bool>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<bool>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de070,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<bool>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = false,
            CurrentValue = false,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          FpPragmaStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de0c8,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot, 2>> = {
                InlineElts = '\000' <repeats 63 times>
              }, <No data fields>},
            DefaultValue = {
              Options = {
                Value = 0
              },
              OverrideMask = 0
            },
            CurrentValue = {
              Options = {
                Value = 0
              },
              OverrideMask = 0
            },
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          NullabilityMap = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FileID, clang::FileNullability, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, clang::FileNullability> >, clang::FileID, clang::FileNullability, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, clang::FileNullability> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FileID, clang::FileNullability, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, clang::FileNullability> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Cache = {
              File = {
                ID = 0
              },
              Nullability = {
                PointerLoc = {
                  ID = 0
                },
                PointerEndLoc = {
                  ID = 0
                },
                PointerKind = 0 '\000',
                SawTypeNullability = false
              }
            }
          },
          CurInitSeg = 0x0,
          CurInitSegLoc = {
            ID = 0
          },
          FunctionToSectionMap = {
            <llvm::StringMapImpl> = {
              TheTable = 0x0,
              NumBuckets = 0,
              NumItems = 0,
              NumTombstones = 0,
              ItemSize = 32
            }, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},
          VisContext = 0x55557703a220,
          PragmaAttributeStack = {
            <llvm::SmallVectorImpl<clang::Sema::PragmaAttributeGroup>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::PragmaAttributeGroup, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaAttributeGroup, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de188,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::PragmaAttributeGroup, 2>> = {
              InlineElts = '\000' <repeats 287 times>
            }, <No data fields>},
          PragmaAttributeCurrentTargetDecl = 0x0,
          OptimizeOffPragmaLocation = {
            ID = 0
          },
          MSPragmaOptimizeIsOn = true,
          MSFunctionNoBuiltins = {
            <llvm::SetVector<llvm::StringRef, llvm::SmallVector<llvm::StringRef, 4>, llvm::SmallDenseSet<llvm::StringRef, 4, llvm::DenseMapInfo<llvm::StringRef, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<llvm::StringRef, llvm::SmallDenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >, llvm::DenseMapInfo<llvm::StringRef, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >, llvm::StringRef, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000\000\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000\000\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000\000\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<llvm::StringRef>> = {
                  <llvm::SmallVectorTemplateBase<llvm::StringRef, true>> = {
                    <llvm::SmallVectorTemplateCommon<llvm::StringRef, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18de310,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<llvm::StringRef, 4>> = {
                  InlineElts = '\000' <repeats 63 times>
                }, <No data fields>}
            }, <No data fields>},
          IsBuildingRecoveryCallExpr = false,
          Cleanup = {
            ExprNeedsCleanups = false,
            CleanupsHaveSideEffects = false
          },
          ExprCleanupObjects = {
            <llvm::SmallVectorImpl<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*> >> = {
              <llvm::SmallVectorTemplateBase<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*>, true>> = {
                <llvm::SmallVectorTemplateCommon<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de368,
                    Size = 0,
                    Capacity = 8
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*>, 8>> = {
              InlineElts = '\000' <repeats 63 times>
            }, <No data fields>},
          MaybeODRUseExprs = {
            set_ = {
              <llvm::SmallPtrSetImpl<clang::Expr*>> = {
                <llvm::SmallPtrSetImplBase> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, 
                  members of llvm::SmallPtrSetImplBase:
                  SmallArray = 0x5555a18de3c8,
                  CurArray = 0x5555a18de3c8,
                  CurArraySize = 4,
                  NumNonEmpty = 0,
                  NumTombstones = 0
                }, <No data fields>}, 
              members of llvm::SmallPtrSet<clang::Expr*, 4>:
              SmallStorage = {0x5555a64e7878, 0xfffffffffffffffe, 0x0, 0x0}
            },
            vector_ = {
              <llvm::SmallVectorImpl<clang::Expr*>> = {
                <llvm::SmallVectorTemplateBase<clang::Expr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Expr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de3f8,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Expr*, 4>> = {
                InlineElts = "xxN\246UU\000\000شM\246UU", '\000' <repeats 17 times>
              }, <No data fields>}
          },
          CachedFunctionScope = std::unique_ptr<clang::sema::FunctionScopeInfo> = {
            get() = 0x55559de6e1a0
          },
          FunctionScopes = {
            <llvm::SmallVectorImpl<clang::sema::FunctionScopeInfo*>> = {
              <llvm::SmallVectorTemplateBase<clang::sema::FunctionScopeInfo*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::sema::FunctionScopeInfo*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556e56ad90,
                    Size = 0,
                    Capacity = 9
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::sema::FunctionScopeInfo*, 4>> = {
              InlineElts = "\260\251\240\235UU\000\000\000\270\221\236UU\000\000\360\b\215\235UU\000\000\300u\222xUU\000"
            }, <No data fields>},
          FunctionScopesStart = 0,
          InventedParameterInfos = {
            <llvm::SmallVectorImpl<clang::InventedTemplateParameterInfo>> = {
              <llvm::SmallVectorTemplateBase<clang::InventedTemplateParameterInfo, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::InventedTemplateParameterInfo, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de468,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::InventedTemplateParameterInfo, 4>> = {
              InlineElts = "\000\000\000\000\000\000\000\000\200䍡UU\000\000\000\000\000\000\004", '\000' <repeats 202 times>
            }, <No data fields>},
          InventedParameterInfosStart = 0,
          ExtVectorDecls = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::TypedefNameDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::TypedefNameDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::TypedefNameDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de560,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::TypedefNameDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::TypedefNameDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::TypedefNameDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::TypedefNameDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de580,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::TypedefNameDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>}
          },
          FieldCollector = std::unique_ptr<clang::CXXFieldCollector> = {
            get() = 0x55559b969200
          },
          UnusedPrivateFields = {
            <llvm::SetVector<clang::NamedDecl*, llvm::SmallVector<clang::NamedDecl*, 16>, llvm::SmallDenseSet<clang::NamedDecl*, 16, llvm::DenseMapInfo<clang::NamedDecl*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::NamedDecl*, llvm::SmallDenseMap<clang::NamedDecl*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >, llvm::DenseMapInfo<clang::NamedDecl*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::NamedDecl*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >, clang::NamedDecl*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::NamedDecl*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::NamedDecl*>> = {
                  <llvm::SmallVectorTemplateBase<clang::NamedDecl*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::NamedDecl*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18de630,
                        Size = 0,
                        Capacity = 16
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::NamedDecl*, 16>> = {
                  InlineElts = '\000' <repeats 127 times>
                }, <No data fields>}
            }, <No data fields>},
          UnusedLocalTypedefNameCandidates = {
            <llvm::SetVector<clang::TypedefNameDecl const*, llvm::SmallVector<clang::TypedefNameDecl const*, 4>, llvm::SmallDenseSet<clang::TypedefNameDecl const*, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::TypedefNameDecl const*, llvm::SmallDenseMap<clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >, clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::TypedefNameDecl const*>> = {
                  <llvm::SmallVectorTemplateBase<clang::TypedefNameDecl const*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::TypedefNameDecl const*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18de6e8,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::TypedefNameDecl const*, 4>> = {
                  InlineElts = '\000' <repeats 31 times>
                }, <No data fields>}
            }, <No data fields>},
          DeleteExprs = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FieldDecl*, unsigned int, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, unsigned int> >, clang::FieldDecl*, unsigned int, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FieldDecl*, unsigned int, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          PureVirtualClassDiagSet = std::unique_ptr<llvm::SmallPtrSet<clang::CXXRecordDecl const*, 8>> = {
            get() = 0x0
          },
          ParsingInitForAutoVars = {
            <llvm::SmallPtrSetImpl<clang::Decl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18de760,
                CurArray = 0x5555a18de760,
                CurArraySize = 4,
                NumNonEmpty = 3,
                NumTombstones = 3
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::Decl const*, 4>:
            SmallStorage = {0xfffffffffffffffe, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x0}
          },
          TentativeDefinitions = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::VarDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::VarDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::VarDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de790,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::VarDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::VarDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::VarDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::VarDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de7b0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::VarDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>}
          },
          ExternalDeclarations = {
            <llvm::SmallVectorImpl<clang::VarDecl*>> = {
              <llvm::SmallVectorTemplateBase<clang::VarDecl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::VarDecl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de7d0,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::VarDecl*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          UnusedFileScopedDecls = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::DeclaratorDecl const*>> = {
                <llvm::SmallVectorTemplateBase<clang::DeclaratorDecl const*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::DeclaratorDecl const*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de800,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::DeclaratorDecl const*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::DeclaratorDecl const*>> = {
                <llvm::SmallVectorTemplateBase<clang::DeclaratorDecl const*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::DeclaratorDecl const*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x55556bff3700,
                      Size = 102,
                      Capacity = 191
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::DeclaratorDecl const*, 2>> = {
                InlineElts = "\260d\224\241UU\000\000\000\212\224\241UU\000"
              }, <No data fields>}
          },
          DelegatingCtorDecls = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::CXXConstructorDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::CXXConstructorDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::CXXConstructorDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de840,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::CXXConstructorDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::CXXConstructorDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::CXXConstructorDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::CXXConstructorDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x555576d1b790,
                      Size = 25,
                      Capacity = 47
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::CXXConstructorDecl*, 2>> = {
                InlineElts = "`\322\035\242UU\000\0000\234\343\242UU\000"
              }, <No data fields>}
          },
          DelayedOverridingExceptionSpecChecks = {
            <llvm::SmallVectorImpl<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de880,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*>, 2>> = {
              InlineElts = "h\350&\245UU\000\000h\253&\245UU\000\000\300\304\023\243UU\000\000\340Z\r\243UU\000"
            }, <No data fields>},
          DelayedEquivalentExceptionSpecChecks = {
            <llvm::SmallVectorImpl<std::pair<clang::FunctionDecl*, clang::FunctionDecl*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::FunctionDecl*, clang::FunctionDecl*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::FunctionDecl*, clang::FunctionDecl*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de8b0,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::FunctionDecl*, clang::FunctionDecl*>, 2>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          LateParsedTemplateMap = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FunctionDecl const*, unsigned int, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, unsigned int> >, clang::FunctionDecl const*, unsigned int, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FunctionDecl const*, unsigned int, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          LateTemplateParser = 0x0,
          LateTemplateParserCleanup = 0x0,
          OpaqueParser = 0x0,
          DelayedDiagnostics = {
            CurPool = 0x7fffffff8298
          },
          RebuildingImmediateInvocation = false,
          isConstantEvaluatedOverride = false,
          WeakUndeclaredIdentifiers = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >, clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          ExtnameUndeclaredIdentifiers = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, clang::AsmLabelAttr*, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, clang::AsmLabelAttr*> >, clang::IdentifierInfo*, clang::AsmLabelAttr*, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, clang::AsmLabelAttr*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo*, clang::AsmLabelAttr*, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, clang::AsmLabelAttr*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          WeakTopLevelDecl = {
            <llvm::SmallVectorImpl<clang::Decl*>> = {
              <llvm::SmallVectorTemplateBase<clang::Decl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Decl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de980,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Decl*, 2>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          IdResolver = {
            LangOpt = @0x55556152eb00,
            PP = @0x5555a1bf36a0,
            IdDeclInfos = 0x55556cc87d50
          },
          TUScope = 0x55556154e2c0,
          StdNamespace = {
            Ptr = 93826271209152
          },
          StdBadAlloc = {
            Ptr = 93826275870352
          },
          StdAlignValT = {
            Ptr = 93826275876624
          },
          StdExperimentalNamespaceCache = 0x0,
          StdInitializerList = 0x5555a2128f00,
          StdCoroutineTraitsCache = 0x0,
          CoroTraitsNamespaceCache = 0x0,
          CXXTypeInfoDecl = 0x5555a2986d18,
          MSVCGuidDecl = 0x0,
          StdSourceLocationImplDecl = 0x0,
          NSAPIObj = std::unique_ptr<clang::NSAPI> = {
            get() = 0x0
          },
          NSNumberDecl = 0x0,
          NSValueDecl = 0x0,
          NSNumberPointer = {
            Value = {
              Value = 0
            }
          },
          NSValuePointer = {
            Value = {
              Value = 0
            }
          },
          NSNumberLiteralMethods = {0x0 <repeats 15 times>},
          NSStringDecl = 0x0,
          NSStringPointer = {
            Value = {
              Value = 0
            }
          },
          StringWithUTF8StringMethod = 0x0,
          ValueWithBytesObjCTypeMethod = 0x0,
          NSArrayDecl = 0x0,
          ArrayWithObjectsMethod = 0x0,
          NSDictionaryDecl = 0x0,
          DictionaryWithObjectsMethod = 0x0,
          QIDNSCopying = {
            Value = {
              Value = 0
            }
          },
          RespondsToSelectorSel = {
            InfoPtr = 0
          },
          GlobalNewDeleteDeclared = true,
          ExprEvalContexts = {
            <llvm::SmallVectorImpl<clang::Sema::ExpressionEvaluationContextRecord>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::ExpressionEvaluationContextRecord, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::ExpressionEvaluationContextRecord, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a22b6f40,
                    Size = 1,
                    Capacity = 71
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::ExpressionEvaluationContextRecord, 8>> = {
              InlineElts = "\006", '\000' <repeats 15 times>, "8덡UU\000\0008덡UU\000\000\004", '\000' <repeats 47 times>, "h덡UU\000\000\000\000\000\000\004", '\000' <repeats 35 times>, "\230덡UU\000\000\000\000\000\000\002", '\000' <repeats 27 times>, "\300덡UU\000\000\000\000\000\000\b", '\000' <repeats 67 times>...
            }, <No data fields>},
          FailedImmediateInvocations = {
            <llvm::SmallPtrSetImpl<clang::ConstantExpr*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18dfe28,
                CurArray = 0x5555a18dfe28,
                CurArraySize = 4,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::ConstantExpr*, 4>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0}
          },
          SpecialMemberCache = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::Sema::SpecialMemberOverloadResultEntry>, clang::Sema::SpecialMemberOverloadResultEntry>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a51b6990,
                NumBuckets = 1024,
                NumNodes = 1412
              }, <No data fields>}, <No data fields>},
          FlagBitsCache = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::EnumDecl const*, llvm::APInt, llvm::DenseMapInfo<clang::EnumDecl const*, void>, llvm::detail::DenseMapPair<clang::EnumDecl const*, llvm::APInt> >, clang::EnumDecl const*, llvm::APInt, llvm::DenseMapInfo<clang::EnumDecl const*, void>, llvm::detail::DenseMapPair<clang::EnumDecl const*, llvm::APInt> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::EnumDecl const*, llvm::APInt, llvm::DenseMapInfo<clang::EnumDecl const*, void>, llvm::detail::DenseMapPair<clang::EnumDecl const*, llvm::APInt> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          TUKind = clang::TU_Complete,
          BumpAlloc = {
            <llvm::AllocatorBase<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {<No data fields>}, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            members of llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>:
            CurPtr = 0x5555a3a80530 "`V\377\377\377\177",
            End = 0x5555a3a82270 "\240i\032\242UU",
            Slabs = {
              <llvm::SmallVectorImpl<void*>> = {
                <llvm::SmallVectorTemplateBase<void*, true>> = {
                  <llvm::SmallVectorTemplateCommon<void*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x55556d49f1f0,
                      Size = 290,
                      Capacity = 319
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<void*, 4>> = {
                InlineElts = "0x\224\241UU\000\000\340ݚ\241UU\000\000 \377\233\241UU\000\000\360Ϝ\241UU\000"
              }, <No data fields>},
            CustomSizedSlabs = {
              <llvm::SmallVectorImpl<std::pair<void*, unsigned long> >> = {
                <llvm::SmallVectorTemplateBase<std::pair<void*, unsigned long>, true>> = {
                  <llvm::SmallVectorTemplateCommon<std::pair<void*, unsigned long>, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18dfec8,
                      Size = 0,
                      Capacity = 0
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<std::pair<void*, unsigned long>, 0>> = {<No data fields>}, <No data fields>},
            BytesAllocated = 2120352,
            RedZoneSize = 1
          },
          NumSFINAEErrors = 0,
          UnparsedDefaultArgInstantiations = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*>, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*> > >, clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*>, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*>, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*> > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          UnparsedDefaultArgLocs = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ParmVarDecl*, clang::SourceLocation, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, clang::SourceLocation> >, clang::ParmVarDecl*, clang::SourceLocation, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, clang::SourceLocation> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ParmVarDecl*, clang::SourceLocation, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, clang::SourceLocation> >:
            Buckets = 0x5555a53cdfb0,
            NumEntries = 1,
            NumTombstones = 156,
            NumBuckets = 256
          },
          UndefinedButUsed = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, unsigned int> >, clang::NamedDecl*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::NamedDecl*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, unsigned int> >:
              Buckets = 0x5555a3806080,
              NumEntries = 242,
              NumTombstones = 0,
              NumBuckets = 512
            },
            Vector = std::vector of length 242, capacity 256 = {{
                first = 0x5555a1e52168,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e5dbb8,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e65a78,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e70c38,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e77598,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e83988,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e8a608,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e9a718,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a2183df0,
                second = {
                  ID = 41929392
                }
              }, {
                first = 0x5555a2184e20,
                second = {
                  ID = 41929595
                }
              }, {
                first = 0x5555a2661138,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2610f20,
                second = {
                  ID = 42010290
                }
              }, {
                first = 0x5555a2663b38,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a1eaf7b0,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a2666730,
                second = {
                  ID = 42010433
                }
              }, {
                first = 0x5555a26bfaf8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a1eb6fb0,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a26d2130,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a26d9fa8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a26db3c0,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a273f688,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2740e60,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a2742bc8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a26dd5f0,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a278ee88,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2790660,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a27923c8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2745e20,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a27de6c8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a27dfea0,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a27e1c08,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2795600,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a1eaf490,
                second = {
                  ID = 41668709
                }
              }, {
                first = 0x5555a2611db8,
                second = {
                  ID = 42103689
                }
              }, {
                first = 0x5555a2ae8998,
                second = {
                  ID = 42391378
                }
              }, {
                first = 0x5555a2ae8b88,
                second = {
                  ID = 42391467
                }
              }, {
                first = 0x5555a2aeae88,
                second = {
                  ID = 42391542
                }
              }, {
                first = 0x5555a2aeb078,
                second = {
                  ID = 42391616
                }
              }, {
                first = 0x5555a2aea658,
                second = {
                  ID = 42391685
                }
              }, {
                first = 0x5555a2aea718,
                second = {
                  ID = 42391771
                }
              }, {
                first = 0x5555a2aea988,
                second = {
                  ID = 42391948
                }
              }, {
                first = 0x5555a2aeac78,
                second = {
                  ID = 42392068
                }
              }, {
                first = 0x5555a2aeb3f8,
                second = {
                  ID = 42392408
                }
              }, {
                first = 0x5555a2aeb6c8,
                second = {
                  ID = 42392541
                }
              }, {
                first = 0x5555a2aebaf8,
                second = {
                  ID = 42392691
                }
              }, {
                first = 0x5555a2aebef8,
                second = {
                  ID = 42392879
                }
              }, {
                first = 0x5555a2aec278,
                second = {
                  ID = 42393060
                }
              }, {
                first = 0x5555a2aec5f8,
                second = {
                  ID = 42393242
                }
              }, {
                first = 0x5555a2aec968,
                second = {
                  ID = 42393415
                }
              }, {
                first = 0x5555a2aeccd0,
                second = {
                  ID = 42393607
                }
              }, {
                first = 0x5555a2aecfd0,
                second = {
                  ID = 42393792
                }
              }, {
                first = 0x5555a2aed2c8,
                second = {
                  ID = 42393978
                }
              }, {
                first = 0x5555a2aed568,
                second = {
                  ID = 42394128
                }
              }, {
                first = 0x5555a2aed690,
                second = {
                  ID = 42394194
                }
              }, {
                first = 0x5555a2aed7a8,
                second = {
                  ID = 42394254
                }
              }, {
                first = 0x5555a2dc94d0,
                second = {
                  ID = 41830397
                }
              }, {
                first = 0x5555a2e25b30,
                second = {
                  ID = 42543461
                }
              }, {
                first = 0x5555a2e22408,
                second = {
                  ID = 42543607
                }
              }, {
                first = 0x5555a2e227e8,
                second = {
                  ID = 42543663
                }
              }, {
                first = 0x5555a2b39bc8,
                second = {
                  ID = 42543693
                }
              }, {
                first = 0x5555a2b39e10,
                second = {
                  ID = 42543840
                }
              }, {
                first = 0x5555a2b3b7a8,
                second = {
                  ID = 42543904
                }
              }, {
                first = 0x5555a2e2dc88,
                second = {
                  ID = 0
                }
              }, {
                first = 0x5555a2e2de68,
                second = {
                  ID = 0
                }
              }, {
                first = 0x5555a2ec4110,
                second = {
                  ID = 42590669
                }
              }, {
                first = 0x5555a2ec47c0,
                second = {
                  ID = 42590724
                }
              }, {
                first = 0x5555a37353b0,
                second = {
                  ID = 43208330
                }
              }, {
                first = 0x5555a3798ad8,
                second = {
                  ID = 43242857
                }
              }, {
                first = 0x5555a3794030,
                second = {
                  ID = 43243308
                }
              }, {
                first = 0x5555a3796678,
                second = {
                  ID = 43243507
                }
              }, {
                first = 0x5555a3798220,
                second = {
                  ID = 43244435
                }
              }, {
                first = 0x5555a3798810,
                second = {
                  ID = 43244564
                }
              }, {
                first = 0x5555a387f010,
                second = {
                  ID = 43310867
                }
              }, {
                first = 0x5555a38b20e0,
                second = {
                  ID = 43311784
                }
              }, {
                first = 0x5555a39a23d8,
                second = {
                  ID = 43343848
                }
              }, {
                first = 0x5555a39a2548,
                second = {
                  ID = 43344914
                }
              }, {
                first = 0x5555a3c02358,
                second = {
                  ID = 43269921
                }
              }, {
                first = 0x5555a3dfa268,
                second = {
                  ID = 43427665
                }
              }, {
                first = 0x5555a3dfa360,
                second = {
                  ID = 43427633
                }
              }, {
                first = 0x5555a3e00408,
                second = {
                  ID = 43428926
                }
              }, {
                first = 0x5555a3e00500,
                second = {
                  ID = 43428894
                }
              }, {
                first = 0x5555a3e06588,
                second = {
                  ID = 43430201
                }
              }, {
                first = 0x5555a3e06680,
                second = {
                  ID = 43430169
                }
              }, {
                first = 0x5555a3e106b8,
                second = {
                  ID = 43431474
                }
              }, {
                first = 0x5555a3e107b0,
                second = {
                  ID = 43431442
                }
              }, {
                first = 0x5555a3e39058,
                second = {
                  ID = 42092058
                }
              }, {
                first = 0x5555a2f78390,
                second = {
                  ID = 41806806
                }
              }, {
                first = 0x5555a2f796f8,
                second = {
                  ID = 41805217
                }
              }, {
                first = 0x5555a2f83318,
                second = {
                  ID = 41805949
                }
              }, {
                first = 0x5555a2fac238,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a2fadec0,
                second = {
                  ID = 43669872
                }
              }, {
                first = 0x5555a2fb0e68,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a447a088,
                second = {
                  ID = 41798924
                }
              }, {
                first = 0x5555a447ac98,
                second = {
                  ID = 41798968
                }
              }, {
                first = 0x5555a447f948,
                second = {
                  ID = 41798924
                }
              }, {
                first = 0x5555a44808f8,
                second = {
                  ID = 41798968
                }
              }, {
                first = 0x5555a4492208,
                second = {
                  ID = 41798968
                }
              }, {
                first = 0x5555a449fd90,
                second = {
                  ID = 41806806
                }
              }, {
                first = 0x5555a45af2a8,
                second = {
                  ID = 43735962
                }
              }, {
                first = 0x5555a45b2a18,
                second = {
                  ID = 43702947
                }
              }, {
                first = 0x5555a45b3670,
                second = {
                  ID = 43735977
                }
              }, {
                first = 0x5555a4609c20,
                second = {
                  ID = 43736041
                }
              }, {
                first = 0x5555a45af8d0,
                second = {
                  ID = 43736058
                }
              }, {
                first = 0x5555a46223d8,
                second = {
                  ID = 43736192
                }
              }, {
                first = 0x5555a462bb08,
                second = {
                  ID = 43702947
                }
              }, {
                first = 0x5555a462c790,
                second = {
                  ID = 43736207
                }
              }, {
                first = 0x5555a4652e70,
                second = {
                  ID = 43736271
                }
              }, {
                first = 0x5555a4622a00,
                second = {
                  ID = 43736288
                }
              }, {
                first = 0x5555a4654020,
                second = {
                  ID = 43736454
                }
              }, {
                first = 0x5555a46555b0,
                second = {
                  ID = 43736715
                }
              }, {
                first = 0x5555a4a08920,
                second = {
                  ID = 44223232
                }
              }, {
                first = 0x5555a4a09450,
                second = {
                  ID = 44223352
                }
              }, {
                first = 0x5555a4a09f40,
                second = {
                  ID = 44223493
                }
              }, {
                first = 0x5555a4ad6410,
                second = {
                  ID = 44305306
                }
              }, {
                first = 0x5555a4ad6ee0,
                second = {
                  ID = 44305471
                }
              }, {
                first = 0x5555a4ada6f0,
                second = {
                  ID = 44306500
                }
              }, {
                first = 0x5555a4adafe0,
                second = {
                  ID = 44306619
                }
              }, {
                first = 0x5555a4af5980,
                second = {
                  ID = 44312356
                }
              }, {
                first = 0x5555a4af6060,
                second = {
                  ID = 44312455
                }
              }, {
                first = 0x5555a4af7230,
                second = {
                  ID = 44312790
                }
              }, {
                first = 0x5555a4af7b30,
                second = {
                  ID = 44312921
                }
              }, {
                first = 0x5555a4af8e10,
                second = {
                  ID = 44313301
                }
              }, {
                first = 0x5555a4af96a0,
                second = {
                  ID = 44313429
                }
              }, {
                first = 0x5555a4bd4c08,
                second = {
                  ID = 44375466
                }
              }, {
                first = 0x5555a4bd0988,
                second = {
                  ID = 44404529
                }
              }, {
                first = 0x5555a4bd0e20,
                second = {
                  ID = 44404647
                }
              }, {
                first = 0x5555a4bd2550,
                second = {
                  ID = 44407015
                }
              }, {
                first = 0x5555a4bd26c8,
                second = {
                  ID = 44407247
                }
              }, {
                first = 0x5555a4bd38a8,
                second = {
                  ID = 44407505
                }
              }, {
                first = 0x5555a4bd3d50,
                second = {
                  ID = 44407629
                }
              }, {
                first = 0x5555a4bd73d8,
                second = {
                  ID = 44410581
                }
              }, {
                first = 0x5555a4bd7880,
                second = {
                  ID = 44410702
                }
              }, {
                first = 0x5555a4bd9470,
                second = {
                  ID = 44413975
                }
              }, {
                first = 0x5555a4bd95e8,
                second = {
                  ID = 44414213
                }
              }, {
                first = 0x5555a4bda6c8,
                second = {
                  ID = 44414475
                }
              }, {
                first = 0x5555a4bdba00,
                second = {
                  ID = 44414601
                }
              }, {
                first = 0x5555a4be2508,
                second = {
                  ID = 44422640
                }
              }, {
                first = 0x5555a4be29b0,
                second = {
                  ID = 44422775
                }
              }, {
                first = 0x5555a4bc8098,
                second = {
                  ID = 44424013
                }
              }, {
                first = 0x5555a4bf1588,
                second = {
                  ID = 44432885
                }
              }, {
                first = 0x5555a4bf1e10,
                second = {
                  ID = 44433036
                }
              }, {
                first = 0x5555a4bcb468,
                second = {
                  ID = 44434013
                }
              }, {
                first = 0x5555a4beb6e8,
                second = {
                  ID = 44433992
                }
              }, {
                first = 0x5555a4beb858,
                second = {
                  ID = 44434136
                }
              }, {
                first = 0x5555a4bcc458,
                second = {
                  ID = 44436122
                }
              }, {
                first = 0x5555a4bebb38,
                second = {
                  ID = 44437398
                }
              }, {
                first = 0x5555a4bed918,
                second = {
                  ID = 44438289
                }
              }, {
                first = 0x5555a4beddc0,
                second = {
                  ID = 44438430
                }
              }, {
                first = 0x5555a4bf4548,
                second = {
                  ID = 44443617
                }
              }, {
                first = 0x5555a4bf57b8,
                second = {
                  ID = 44444294
                }
              }, {
                first = 0x5555a4bf6040,
                second = {
                  ID = 44444443
                }
              }, {
                first = 0x5555a4bf4628,
                second = {
                  ID = 44445086
                }
              }, {
                first = 0x5555a4bcb6f8,
                second = {
                  ID = 44445539
                }
              }, {
                first = 0x5555a4bcd1b8,
                second = {
                  ID = 44447291
                }
              }, {
                first = 0x5555a4bf91f8,
                second = {
                  ID = 44448844
                }
              }, {
                first = 0x5555a4bf9a80,
                second = {
                  ID = 44449003
                }
              }, {
                first = 0x5555a4bf81b8,
                second = {
                  ID = 44449556
                }
              }, {
                first = 0x5555a4bcdf18,
                second = {
                  ID = 44451113
                }
              }, {
                first = 0x5555a58e9cc8,
                second = {
                  ID = 45775897
                }
              }, {
                first = 0x5555a58ea7f8,
                second = {
                  ID = 45776071
                }
              }, {
                first = 0x5555a58eb298,
                second = {
                  ID = 45776242
                }
              }, {
                first = 0x5555a58ebcd8,
                second = {
                  ID = 45776410
                }
              }, {
                first = 0x5555a58ec7a8,
                second = {
                  ID = 45776581
                }
              }, {
                first = 0x5555a58ed2d8,
                second = {
                  ID = 45776755
                }
              }, {
                first = 0x5555a58edd78,
                second = {
                  ID = 45776926
                }
              }, {
                first = 0x5555a58ee7b8,
                second = {
                  ID = 45777094
                }
              }, {
                first = 0x5555a58ef1f8,
                second = {
                  ID = 45777265
                }
              }, {
                first = 0x5555a58efc38,
                second = {
                  ID = 45777439
                }
              }, {
                first = 0x5555a58f0678,
                second = {
                  ID = 45777610
                }
              }, {
                first = 0x5555a58f10b8,
                second = {
                  ID = 45777778
                }
              }, {
                first = 0x5555a58f1b88,
                second = {
                  ID = 45777949
                }
              }, {
                first = 0x5555a58f26b8,
                second = {
                  ID = 45778123
                }
              }, {
                first = 0x5555a58f3158,
                second = {
                  ID = 45778294
                }
              }, {
                first = 0x5555a58f3b98,
                second = {
                  ID = 45778462
                }
              }, {
                first = 0x5555a58f45d8,
                second = {
                  ID = 45778633
                }
              }, {
                first = 0x5555a58f5018,
                second = {
                  ID = 45778807
                }
              }, {
                first = 0x5555a58f5a58,
                second = {
                  ID = 45778978
                }
              }, {
                first = 0x5555a58f6498,
                second = {
                  ID = 45779146
                }
              }, {
                first = 0x5555a58f6ed8,
                second = {
                  ID = 45779317
                }
              }, {
                first = 0x5555a58f7918,
                second = {
                  ID = 45779491
                }
              }, {
                first = 0x5555a58f8358,
                second = {
                  ID = 45779662
                }
              }, {
                first = 0x5555a58f8d98,
                second = {
                  ID = 45779830
                }
              }, {
                first = 0x5555a58f97d8,
                second = {
                  ID = 45780001
                }
              }, {
                first = 0x5555a58fa218,
                second = {
                  ID = 45780175
                }
              }, {
                first = 0x5555a58fac58,
                second = {
                  ID = 45780346
                }
              }, {
                first = 0x5555a58fb698,
                second = {
                  ID = 45780514
                }
              }, {
                first = 0x5555a58fc408,
                second = {
                  ID = 45780670
                }
              }, {
                first = 0x5555a58fd1a8,
                second = {
                  ID = 45780834
                }
              }, {
                first = 0x5555a58fde30,
                second = {
                  ID = 45780995
                }
              }, {
                first = 0x5555a58fea60,
                second = {
                  ID = 45781153
                }
              }, {
                first = 0x5555a58ff7a8,
                second = {
                  ID = 45781314
                }
              }, {
                first = 0x5555a5900548,
                second = {
                  ID = 45781478
                }
              }, {
                first = 0x5555a59011d0,
                second = {
                  ID = 45781639
                }
              }, {
                first = 0x5555a5901e00,
                second = {
                  ID = 45781797
                }
              }, {
                first = 0x5555a5902a30,
                second = {
                  ID = 45781958
                }
              }, {
                first = 0x5555a5903660,
                second = {
                  ID = 45782122
                }
              }, {
                first = 0x5555a5904290,
                second = {
                  ID = 45782283
                }
              }, {
                first = 0x5555a5904ec0,
                second = {
                  ID = 45782441
                }
              }, {
                first = 0x5555a5905c08,
                second = {
                  ID = 45782602
                }
              }, {
                first = 0x5555a59069a8,
                second = {
                  ID = 45782766
                }
              }...}
          },
          MethodPool = {
            Methods = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList>, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList> > >, clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList>, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList> > >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList>, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList> > >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            }
          },
          ReferencedSelectors = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::Selector, unsigned int, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, unsigned int> >, clang::Selector, unsigned int, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::Selector, unsigned int, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          ImplicitlyRetainedSelfLocs = {
            <llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::BlockDecl const*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::SourceLocation, clang::BlockDecl const*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::SourceLocation, clang::BlockDecl const*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18dff98,
                    Size = 0,
                    Capacity = 1
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::SourceLocation, clang::BlockDecl const*>, 1>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          SpecialMembersBeingDeclared = {
            <llvm::SmallPtrSetImpl<llvm::PointerIntPair<clang::CXXRecordDecl*, 3, clang::Sema::CXXSpecialMember, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*>, llvm::PointerIntPairInfo<clang::CXXRecordDecl*, 3, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*> > > >> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18dffc8,
                CurArray = 0x5555a18dffc8,
                CurArraySize = 4,
                NumNonEmpty = 4,
                NumTombstones = 4
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<llvm::PointerIntPair<clang::CXXRecordDecl*, 3, clang::Sema::CXXSpecialMember, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*>, llvm::PointerIntPairInfo<clang::CXXRecordDecl*, 3, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*> > >, 4>:
            SmallStorage = {0xfffffffffffffffe, 0xfffffffffffffffe, 0xfffffffffffffffe, 0xfffffffffffffffe}
          },
          TypoCorrectedFunctionDefinitions = {
            <llvm::SmallPtrSetImpl<clang::NamedDecl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e0008,
                CurArray = 0x5555a18e0008,
                CurArraySize = 4,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::NamedDecl const*, 4>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0}
          },
          CurrentParameterCopyTypes = {
            <llvm::SmallVectorImpl<clang::QualType>> = {
              <llvm::SmallVectorTemplateBase<clang::QualType, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::QualType, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e0038,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::QualType, 4>> = {
              InlineElts = "\3200N\246UU", '\000' <repeats 25 times>
            }, <No data fields>},
          WarnedStackExhausted = false,
          RefsMinusAssignments = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, int> >, clang::VarDecl const*, int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::VarDecl const*, int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, int> >:
            Buckets = 0x5555a5d61a10,
            NumEntries = 2199,
            NumTombstones = 1168,
            NumBuckets = 4096
          },
          DeclareRISCVVBuiltins = false,
          RVIntrinsicManager = std::unique_ptr<clang::sema::RISCVIntrinsicManager> = {
            get() = 0x0
          },
          CachedDarwinSDKInfo = std::optional<std::unique_ptr<clang::DarwinSDKInfo>> [no contained value],
          WarnedDarwinSDKInfoMissing = false,
          IsLastErrorImmediate = true,
          DeferDiags = false,
          DeclsToCheckForDeferredDiags = {
            <llvm::SetVector<clang::Decl*, llvm::SmallVector<clang::Decl*, 4>, llvm::SmallDenseSet<clang::Decl*, 4, llvm::DenseMapInfo<clang::Decl*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::Decl*, llvm::SmallDenseMap<clang::Decl*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >, llvm::DenseMapInfo<clang::Decl*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::Decl*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >, clang::Decl*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::Decl*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::Decl*>> = {
                  <llvm::SmallVectorTemplateBase<clang::Decl*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::Decl*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18e00d8,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::Decl*, 4>> = {
                  InlineElts = '\000' <repeats 31 times>
                }, <No data fields>}
            }, <No data fields>},
          ModuleScopes = {
            <llvm::SmallVectorImpl<clang::Sema::ModuleScope>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::ModuleScope, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::ModuleScope, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e0108,
                    Size = 0,
                    Capacity = 16
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::ModuleScope, 16>> = {
              InlineElts = '\000' <repeats 895 times>
            }, <No data fields>},
          GlobalModuleFragment = 0x0,
          DirectModuleImports = {
            <llvm::SmallPtrSetImpl<clang::Module*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e04b0,
                CurArray = 0x5555a18e04b0,
                CurArraySize = 8,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::Module*, 8>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
          },
          DeferredExportedNamespaces = {
            <llvm::SmallPtrSetImpl<clang::NamespaceDecl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e0510,
                CurArray = 0x5555a18e0510,
                CurArraySize = 8,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::NamespaceDecl const*, 8>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
          },
          PendingInlineFuncDecls = {
            <llvm::SmallPtrSetImpl<clang::FunctionDecl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e0570,
                CurArray = 0x5555a18e0570,
                CurArraySize = 8,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::FunctionDecl const*, 8>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
          },
          VisibleModules = {
            ImportLocs = std::vector of length 0, capacity 0,
            Generation = 0
          },
          UsableModuleUnitsCache = {
            <llvm::detail::DenseSetImpl<clang::Module const*, llvm::DenseMap<clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >, llvm::DenseMapInfo<clang::Module const*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >, clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          ShadowingDecls = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl const*, clang::NamedDecl const*, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, clang::NamedDecl const*> >, clang::NamedDecl const*, clang::NamedDecl const*, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, clang::NamedDecl const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl const*, clang::NamedDecl const*, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, clang::NamedDecl const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          DelayedTypos = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::TypoExpr*, unsigned int, llvm::DenseMapInfo<clang::TypoExpr*, void>, llvm::detail::DenseMapPair<clang::TypoExpr*, unsigned int> >, clang::TypoExpr*, unsigned int, llvm::DenseMapInfo<clang::TypoExpr*, void>, llvm::detail::DenseMapPair<clang::TypoExpr*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::TypoExpr*, unsigned int, llvm::DenseMapInfo<clang::TypoExpr*, void>, llvm::detail::DenseMapPair<clang::TypoExpr*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          KnownNamespaces = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::NamespaceDecl*, unsigned int, llvm::DenseMapInfo<clang::NamespaceDecl*, void>, llvm::detail::DenseMapPair<clang::NamespaceDecl*, unsigned int> >, clang::NamespaceDecl*, unsigned int, llvm::DenseMapInfo<clang::NamespaceDecl*, void>, llvm::detail::DenseMapPair<clang::NamespaceDecl*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::NamespaceDecl*, unsigned int, llvm::DenseMapInfo<clang::NamespaceDecl*, void>, llvm::detail::DenseMapPair<clang::NamespaceDecl*, unsigned int> >:
              Buckets = 0x55559f10de10,
              NumEntries = 76,
              NumTombstones = 0,
              NumBuckets = 128
            },
            Vector = std::vector of length 76, capacity 128 = {{
                first = 0x5555a190e6c0,
                second = false
              }, {
                first = 0x5555a190ef80,
                second = false
              }, {
                first = 0x5555a19a8270,
                second = false
              }, {
                first = 0x5555a1cbfde8,
                second = false
              }, {
                first = 0x5555a1cc3e80,
                second = false
              }, {
                first = 0x5555a1d21738,
                second = false
              }, {
                first = 0x5555a1d217b0,
                second = false
              }, {
                first = 0x5555a1d341c8,
                second = false
              }, {
                first = 0x5555a1d556a0,
                second = false
              }, {
                first = 0x5555a1d92d90,
                second = false
              }, {
                first = 0x5555a1d9f608,
                second = false
              }, {
                first = 0x5555a1da9d70,
                second = false
              }, {
                first = 0x5555a1e1e198,
                second = false
              }, {
                first = 0x5555a1e292f8,
                second = false
              }, {
                first = 0x5555a1efa160,
                second = false
              }, {
                first = 0x5555a205afe0,
                second = false
              }, {
                first = 0x5555a205b658,
                second = false
              }, {
                first = 0x5555a2187080,
                second = false
              }, {
                first = 0x5555a27e32f0,
                second = false
              }, {
                first = 0x5555a2845230,
                second = false
              }, {
                first = 0x5555a296f880,
                second = false
              }, {
                first = 0x5555a29a18f8,
                second = false
              }, {
                first = 0x5555a2aa3848,
                second = false
              }, {
                first = 0x5555a2bd64f0,
                second = false
              }, {
                first = 0x5555a2e14998,
                second = false
              }, {
                first = 0x5555a2e2b690,
                second = false
              }, {
                first = 0x5555a2e99720,
                second = false
              }, {
                first = 0x5555a31ca100,
                second = false
              }, {
                first = 0x5555a32486e8,
                second = false
              }, {
                first = 0x5555a34bfdf8,
                second = false
              }, {
                first = 0x5555a34bfe70,
                second = false
              }, {
                first = 0x5555a34c44d0,
                second = false
              }, {
                first = 0x5555a35a9ed0,
                second = false
              }, {
                first = 0x5555a35c1128,
                second = false
              }, {
                first = 0x5555a35c3640,
                second = false
              }, {
                first = 0x5555a35c37a8,
                second = false
              }, {
                first = 0x5555a35db130,
                second = false
              }, {
                first = 0x5555a2f4c390,
                second = false
              }, {
                first = 0x5555a4b8b1c8,
                second = false
              }, {
                first = 0x5555a4b8b240,
                second = false
              }, {
                first = 0x5555a5190668,
                second = false
              }, {
                first = 0x5555a5190aa0,
                second = false
              }, {
                first = 0x5555a5191f38,
                second = false
              }, {
                first = 0x5555a5191fb0,
                second = false
              }, {
                first = 0x5555a5192118,
                second = false
              }, {
                first = 0x5555a5192398,
                second = false
              }, {
                first = 0x5555a51a38e8,
                second = false
              }, {
                first = 0x5555a51a3f00,
                second = false
              }, {
                first = 0x5555a51a4390,
                second = false
              }, {
                first = 0x5555a5218a58,
                second = false
              }, {
                first = 0x5555a523a488,
                second = false
              }, {
                first = 0x5555a523e930,
                second = false
              }, {
                first = 0x5555a52765e8,
                second = false
              }, {
                first = 0x5555a5285c50,
                second = false
              }, {
                first = 0x5555a528f100,
                second = false
              }, {
                first = 0x5555a545ca90,
                second = false
              }, {
                first = 0x5555a545cec8,
                second = false
              }, {
                first = 0x5555a54d03b8,
                second = false
              }, {
                first = 0x5555a5530e90,
                second = false
              }, {
                first = 0x5555a5601ea8,
                second = false
              }, {
                first = 0x5555a56e7800,
                second = false
              }, {
                first = 0x5555a56e8a70,
                second = false
              }, {
                first = 0x5555a56eb9b8,
                second = false
              }, {
                first = 0x5555a56eef40,
                second = false
              }, {
                first = 0x5555a5708950,
                second = false
              }, {
                first = 0x5555a575ec38,
                second = false
              }, {
                first = 0x5555a5813ea8,
                second = false
              }, {
                first = 0x5555a5813f20,
                second = false
              }, {
                first = 0x5555a5816990,
                second = false
              }, {
                first = 0x5555a5817250,
                second = false
              }, {
                first = 0x5555a581f7a8,
                second = false
              }, {
                first = 0x5555a5821a28,
                second = false
              }, {
                first = 0x5555a582dd38,
                second = false
              }, {
                first = 0x5555a5c36e80,
                second = false
              }, {
                first = 0x5555a6339c10,
                second = false
              }, {
                first = 0x5555a640d9d8,
                second = false
              }}
          },
          LoadedExternalKnownNamespaces = false,
          FullyCheckedComparisonCategories = {
            X = 864691128455135241
          },
          CXXThisTypeOverride = {
            Value = {
              Value = 0
            }
          },
          SubsumptionCache = {
            <llvm::DenseMapBase<llvm::DenseMap<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool, llvm::DenseMapInfo<std::pair<clang::NamedDecl*, clang::NamedDecl*>, void>, llvm::detail::DenseMapPair<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool> >, std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool, llvm::DenseMapInfo<std::pair<clang::NamedDecl*, clang::NamedDecl*>, void>, llvm::detail::DenseMapPair<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool, llvm::DenseMapInfo<std::pair<clang::NamedDecl*, clang::NamedDecl*>, void>, llvm::detail::DenseMapPair<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool> >:
            Buckets = 0x55559f2756b0,
            NumEntries = 5,
            NumTombstones = 0,
            NumBuckets = 64
          },
          NormalizationCache = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, clang::NormalizedConstraint*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NormalizedConstraint*> >, clang::NamedDecl*, clang::NormalizedConstraint*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NormalizedConstraint*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl*, clang::NormalizedConstraint*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NormalizedConstraint*> >:
            Buckets = 0x55559a227cb0,
            NumEntries = 14,
            NumTombstones = 0,
            NumBuckets = 64
          },
          SatisfactionCache = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::ConstraintSatisfaction, clang::ASTContext const&>, clang::ConstraintSatisfaction>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a2d92ec0,
                NumBuckets = 1024,
                NumNodes = 1458
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::ConstraintSatisfaction, clang::ASTContext const&>:
            Context = @0x5555a18d0ae0
          },
          SatisfactionStack = {
            <llvm::SmallVectorImpl<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID>, false>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55559dfe8060,
                    Size = 0,
                    Capacity = 21
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID>, 10>> = {
              InlineElts = "\350I%\242UU\000\000\350\006\216\241UU\000\000\000\000\000\000 \000\000\000\241\000\000\000\035\000\000\000\310dߡUU\000\000\001\000\000\0000o\232\241UU\000\000\001\000\000\000\200\330NnUU\000\000\001\000\000\000`\317NnUU\000\000\001\000\000\000@\316NnUU\000\000\001\000\000\000\000\206\227\241UU", '\000' <repeats 54 times>, "\310dߡUU\000\000\200\a\216\241UU\000\000\000\000\000\000 \000\000\000\241\000\000\000\035\000\000\000\200FߡUU\000\000\001\000\000\000\300t\227\241UU\000\000"...
            }, <No data fields>},
          VTableUses = {
            <llvm::SmallVectorImpl<std::pair<clang::CXXRecordDecl*, clang::SourceLocation> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::CXXRecordDecl*, clang::SourceLocation>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::CXXRecordDecl*, clang::SourceLocation>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a29dd570,
                    Size = 158,
                    Capacity = 271
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::CXXRecordDecl*, clang::SourceLocation>, 16>> = {
              InlineElts = "\200\366סUU\000\000\234\213z\002\000\000\000\000\220\006ءUU\000\000a\215z\002\000\000\000\000\300\023ءUU\000\000|\216z\002\000\000\000\000ء\357\241UU\000\000n1|\002\000\000\000\000\370\370\226\242UU\000\000O\v\204\002\000\000\000\000\b%\230\242UU\000\000n.\204\002\000\000\000\000\030U\230\242UU\000\000\2214\204\002\000\000\000\000x_\230\242UU\000\00065\204\002\000\000\000\000(ᘢUU\000\000`J\204\002\000\000\000\000\360똢UU\000\000$K\204\002\000\000\000\000\260\366\230\242UU\000\000\326K\204\002\000\000\000\000\240\002\231\242UU\000\000\306L\204\002\000\000\000\000`\r\231\242UU\000\000uM\204\002\000\000\000\000"...
            }, <No data fields>},
          VTablesUsed = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CXXRecordDecl*, bool, llvm::DenseMapInfo<clang::CXXRecordDecl*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl*, bool> >, clang::CXXRecordDecl*, bool, llvm::DenseMapInfo<clang::CXXRecordDecl*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl*, bool> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CXXRecordDecl*, bool, llvm::DenseMapInfo<clang::CXXRecordDecl*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl*, bool> >:
            Buckets = 0x5555a2ab9410,
            NumEntries = 158,
            NumTombstones = 0,
            NumBuckets = 256
          },
          AccessCheckingSFINAE = false,
          CodeSynthesisContexts = {
            <llvm::SmallVectorImpl<clang::Sema::CodeSynthesisContext>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::CodeSynthesisContext, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::CodeSynthesisContext, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556e500ef0,
                    Size = 0,
                    Capacity = 67
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::CodeSynthesisContext, 16>> = {
              InlineElts = "\000\000\000\000\001\177\000\000\225Ā\002\377\177\000\000\300\377(\242UU\000\000\000\000\000\000\000\000\000\000\300<\377\377\377\177\000\000\002\000\000\000\377\177\000\000@G\377\377\377\177\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\177\000\000\225Ā\002UU\000\000\350I%\242UU\000\000\000\000\000\000\000\000\000\000\260\006%\242UU\000\000\002\000\000\000UU\000\000\000\000\000\000\000\000\000\000\225Ā\002\225Ā\002\017\000\000\000\000\000\000\000\226\210\200\002\377\177\000\000\350I%\242UU", '\000' <repeats 22 times>, "UU\000\000p1\377\377\377\177\000\000\226\210\200\002\226\210\200\002\016\000\000\000\000\177\000\000\226\210\200\002"...
            }, <No data fields>},
          InstantiatingSpecializations = {
            <llvm::detail::DenseSetImpl<std::pair<clang::Decl*, unsigned int>, llvm::DenseMap<std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >, std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >:
                Buckets = 0x55559ee22680,
                NumEntries = 0,
                NumTombstones = 50,
                NumBuckets = 64
              }
            }, <No data fields>},
          InstantiatedNonDependentTypes = {
            <llvm::detail::DenseSetImpl<clang::QualType, llvm::DenseMap<clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >, llvm::DenseMapInfo<clang::QualType, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >, clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          CodeSynthesisContextLookupModules = {
            <llvm::SmallVectorImpl<clang::Module*>> = {
              <llvm::SmallVectorTemplateBase<clang::Module*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Module*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1240,
                    Size = 0,
                    Capacity = 16
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Module*, 16>> = {
              InlineElts = '\000' <repeats 127 times>
            }, <No data fields>},
          LookupModulesCache = {
            <llvm::detail::DenseSetImpl<clang::Module*, llvm::DenseMap<clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >, llvm::DenseMapInfo<clang::Module*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >, clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          VisibleNamespaceCache = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >, clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          InNonInstantiationSFINAEContext = false,
          NonInstantiationEntries = 0,
          LastEmittedCodeSynthesisContextDepth = 0,
          TemplateInstCallbacks = std::vector of length 0, capacity 0,
          ArgumentPackSubstitutionIndex = -1,
          SuppressedDiagnostics = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1>, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1> > >, clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1>, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1>, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1> > >:
            Buckets = 0x55559b53d020,
            NumEntries = 13,
            NumTombstones = 0,
            NumBuckets = 64
          },
          CurrentInstantiationScope = 0x0,
          DisableTypoCorrection = false,
          TyposCorrected = 0,
          TypoCorrectionFailures = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> > > >, clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> > > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          AnalysisWarnings = {
            S = @0x5555a18ddbf0,
            DefaultPolicy = {
              enableCheckFallThrough = 1,
              enableCheckUnreachable = 0,
              enableThreadSafetyAnalysis = 0,
              enableConsumedAnalysis = 0
            },
            IPData = std::unique_ptr<clang::sema::AnalysisBasedWarnings::InterProceduralData> = {
              get() = 0x5555773dcbc0
            },
            VisitedFD = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag> >, clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            NumFunctionsAnalyzed = 0,
            NumFunctionsWithBadCFGs = 0,
            NumCFGBlocks = 0,
            MaxCFGBlocksPerFunction = 0,
            NumUninitAnalysisFunctions = 0,
            NumUninitAnalysisVariables = 0,
            MaxUninitAnalysisVariablesPerFunction = 0,
            NumUninitAnalysisBlockVisits = 0,
            MaxUninitAnalysisBlockVisitsPerFunction = 0
          },
          ThreadSafetyDeclCache = 0x0,
          PendingInstantiations = std::deque with 249 elements = {{
              first = 0x5555a2183df0,
              second = {
                ID = 41929392
              }
            }, {
              first = 0x5555a2184e20,
              second = {
                ID = 41929595
              }
            }, {
              first = 0x5555a2652980,
              second = {
                ID = 42080622
              }
            }, {
              first = 0x5555a26538d0,
              second = {
                ID = 42080817
              }
            }, {
              first = 0x5555a2654980,
              second = {
                ID = 42081007
              }
            }, {
              first = 0x5555a2655a30,
              second = {
                ID = 42081195
              }
            }, {
              first = 0x5555a2656b60,
              second = {
                ID = 42081393
              }
            }, {
              first = 0x5555a2657990,
              second = {
                ID = 42081560
              }
            }, {
              first = 0x5555a2658790,
              second = {
                ID = 42081715
              }
            }, {
              first = 0x5555a2659590,
              second = {
                ID = 42081876
              }
            }, {
              first = 0x5555a2610f20,
              second = {
                ID = 42010290
              }
            }, {
              first = 0x5555a1eaf7b0,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a2665b58,
              second = {
                ID = 42082253
              }
            }, {
              first = 0x5555a266c1c8,
              second = {
                ID = 42082893
              }
            }, {
              first = 0x5555a26706a8,
              second = {
                ID = 42083525
              }
            }, {
              first = 0x5555a2672ef8,
              second = {
                ID = 42084017
              }
            }, {
              first = 0x5555a26b62e0,
              second = {
                ID = 42084708
              }
            }, {
              first = 0x5555a26b7220,
              second = {
                ID = 42084904
              }
            }, {
              first = 0x5555a26b82d0,
              second = {
                ID = 42085095
              }
            }, {
              first = 0x5555a26b9380,
              second = {
                ID = 42085284
              }
            }, {
              first = 0x5555a26ba430,
              second = {
                ID = 42085483
              }
            }, {
              first = 0x5555a26bb260,
              second = {
                ID = 42085651
              }
            }, {
              first = 0x5555a26bc090,
              second = {
                ID = 42085807
              }
            }, {
              first = 0x5555a26bce90,
              second = {
                ID = 42085969
              }
            }, {
              first = 0x5555a26be1b8,
              second = {
                ID = 42086131
              }
            }, {
              first = 0x5555a1eb6fb0,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a26d2130,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a26db3c0,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a2740e60,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a26dd5f0,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a2790660,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a2745e20,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a27dfea0,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a2795600,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a1eaf490,
              second = {
                ID = 41668709
              }
            }, {
              first = 0x5555a2611db8,
              second = {
                ID = 42103689
              }
            }, {
              first = 0x5555a2a62188,
              second = {
                ID = 42328357
              }
            }, {
              first = 0x5555a2a63988,
              second = {
                ID = 42328769
              }
            }, {
              first = 0x5555a2a7b4f8,
              second = {
                ID = 42337312
              }
            }, {
              first = 0x5555a2a7ba98,
              second = {
                ID = 42337516
              }
            }, {
              first = 0x5555a2ae8998,
              second = {
                ID = 42391378
              }
            }, {
              first = 0x5555a2ae8b88,
              second = {
                ID = 42391467
              }
            }, {
              first = 0x5555a2aeae88,
              second = {
                ID = 42391542
              }
            }, {
              first = 0x5555a2aeb078,
              second = {
                ID = 42391616
              }
            }, {
              first = 0x5555a2aea658,
              second = {
                ID = 42391685
              }
            }, {
              first = 0x5555a2aea718,
              second = {
                ID = 42391771
              }
            }, {
              first = 0x5555a2aea988,
              second = {
                ID = 42391948
              }
            }, {
              first = 0x5555a2aeac78,
              second = {
                ID = 42392068
              }
            }, {
              first = 0x5555a2aeb3f8,
              second = {
                ID = 42392408
              }
            }, {
              first = 0x5555a2aeb6c8,
              second = {
                ID = 42392541
              }
            }, {
              first = 0x5555a2aebaf8,
              second = {
                ID = 42392691
              }
            }, {
              first = 0x5555a2aebef8,
              second = {
                ID = 42392879
              }
            }, {
              first = 0x5555a2aec278,
              second = {
                ID = 42393060
              }
            }, {
              first = 0x5555a2aec5f8,
              second = {
                ID = 42393242
              }
            }, {
              first = 0x5555a2aec968,
              second = {
                ID = 42393415
              }
            }, {
              first = 0x5555a2aeccd0,
              second = {
                ID = 42393607
              }
            }, {
              first = 0x5555a2aecfd0,
              second = {
                ID = 42393792
              }
            }, {
              first = 0x5555a2aed2c8,
              second = {
                ID = 42393978
              }
            }, {
              first = 0x5555a2aed568,
              second = {
                ID = 42394128
              }
            }, {
              first = 0x5555a2aed690,
              second = {
                ID = 42394194
              }
            }, {
              first = 0x5555a2aed7a8,
              second = {
                ID = 42394254
              }
            }, {
              first = 0x5555a2dc94d0,
              second = {
                ID = 41830397
              }
            }, {
              first = 0x5555a2e22408,
              second = {
                ID = 42543607
              }
            }, {
              first = 0x5555a2e227e8,
              second = {
                ID = 42543663
              }
            }, {
              first = 0x5555a2b39bc8,
              second = {
                ID = 42543693
              }
            }, {
              first = 0x5555a2b39e10,
              second = {
                ID = 42543840
              }
            }, {
              first = 0x5555a2b3b7a8,
              second = {
                ID = 42543904
              }
            }, {
              first = 0x5555a2ec4110,
              second = {
                ID = 42590669
              }
            }, {
              first = 0x5555a2ec47c0,
              second = {
                ID = 42590724
              }
            }, {
              first = 0x5555a37353b0,
              second = {
                ID = 43208330
              }
            }, {
              first = 0x5555a3798ad8,
              second = {
                ID = 43242857
              }
            }, {
              first = 0x5555a3794030,
              second = {
                ID = 43243308
              }
            }, {
              first = 0x5555a3796678,
              second = {
                ID = 43243507
              }
            }, {
              first = 0x5555a3798220,
              second = {
                ID = 43244435
              }
            }, {
              first = 0x5555a3798810,
              second = {
                ID = 43244564
              }
            }, {
              first = 0x5555a38715e0,
              second = {
                ID = 43309899
              }
            }, {
              first = 0x5555a387f010,
              second = {
                ID = 43310867
              }
            }, {
              first = 0x5555a38b20e0,
              second = {
                ID = 43311784
              }
            }, {
              first = 0x5555a3969790,
              second = {
                ID = 43340462
              }
            }, {
              first = 0x5555a3972908,
              second = {
                ID = 43340651
              }
            }, {
              first = 0x5555a39a8348,
              second = {
                ID = 43344201
              }
            }, {
              first = 0x5555a39aaf48,
              second = {
                ID = 43344392
              }
            }, {
              first = 0x5555a39cc1b0,
              second = {
                ID = 43349966
              }
            }, {
              first = 0x5555a39cf338,
              second = {
                ID = 43350162
              }
            }, {
              first = 0x5555a39e9448,
              second = {
                ID = 43354983
              }
            }, {
              first = 0x5555a39ec8a8,
              second = {
                ID = 43355178
              }
            }, {
              first = 0x5555a3a12a18,
              second = {
                ID = 43359562
              }
            }, {
              first = 0x5555a3a15e18,
              second = {
                ID = 43359762
              }
            }, {
              first = 0x5555a3c02358,
              second = {
                ID = 43269921
              }
            }, {
              first = 0x5555a3bef230,
              second = {
                ID = 43289974
              }
            }, {
              first = 0x5555a3dfa268,
              second = {
                ID = 43427665
              }
            }, {
              first = 0x5555a3dfa360,
              second = {
                ID = 43427633
              }
            }, {
              first = 0x5555a3e00408,
              second = {
                ID = 43428926
              }
            }, {
              first = 0x5555a3e00500,
              second = {
                ID = 43428894
              }
            }, {
              first = 0x5555a3e06588,
              second = {
                ID = 43430201
              }
            }, {
              first = 0x5555a3e06680,
              second = {
                ID = 43430169
              }
            }, {
              first = 0x5555a3e106b8,
              second = {
                ID = 43431474
              }
            }, {
              first = 0x5555a3e107b0,
              second = {
                ID = 43431442
              }
            }, {
              first = 0x5555a4057bf8,
              second = {
                ID = 43521362
              }
            }, {
              first = 0x5555a2f587d8,
              second = {
                ID = 43660767
              }
            }, {
              first = 0x5555a45af2a8,
              second = {
                ID = 43735962
              }
            }, {
              first = 0x5555a45b3670,
              second = {
                ID = 43735977
              }
            }, {
              first = 0x5555a45af8d0,
              second = {
                ID = 43736058
              }
            }, {
              first = 0x5555a46223d8,
              second = {
                ID = 43736192
              }
            }, {
              first = 0x5555a462c790,
              second = {
                ID = 43736207
              }
            }, {
              first = 0x5555a4622a00,
              second = {
                ID = 43736288
              }
            }, {
              first = 0x5555a4654020,
              second = {
                ID = 43736454
              }
            }, {
              first = 0x5555a46555b0,
              second = {
                ID = 43736715
              }
            }, {
              first = 0x5555a478c800,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a478c800,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a47baf50,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a47baf50,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a4a08920,
              second = {
                ID = 44223232
              }
            }, {
              first = 0x5555a4a09450,
              second = {
                ID = 44223352
              }
            }, {
              first = 0x5555a4a09f40,
              second = {
                ID = 44223493
              }
            }, {
              first = 0x5555a4ad6410,
              second = {
                ID = 44305306
              }
            }, {
              first = 0x5555a4ad6ee0,
              second = {
                ID = 44305471
              }
            }, {
              first = 0x5555a4ad85d0,
              second = {
                ID = 44305918
              }
            }, {
              first = 0x5555a4ad9280,
              second = {
                ID = 44306085
              }
            }, {
              first = 0x5555a4ada6f0,
              second = {
                ID = 44306500
              }
            }, {
              first = 0x5555a4adafe0,
              second = {
                ID = 44306619
              }
            }, {
              first = 0x5555a4adcfa0,
              second = {
                ID = 44306996
              }
            }, {
              first = 0x5555a4add690,
              second = {
                ID = 44307109
              }
            }, {
              first = 0x5555a4ade6c0,
              second = {
                ID = 44307452
              }
            }, {
              first = 0x5555a4aded80,
              second = {
                ID = 44307565
              }
            }, {
              first = 0x5555a4adff20,
              second = {
                ID = 44307921
              }
            }, {
              first = 0x5555a4ae07e0,
              second = {
                ID = 44308060
              }
            }, {
              first = 0x5555a4ae2940,
              second = {
                ID = 44308475
              }
            }, {
              first = 0x5555a4ae3200,
              second = {
                ID = 44308612
              }
            }, {
              first = 0x5555a4ae5360,
              second = {
                ID = 44309028
              }
            }, {
              first = 0x5555a4ae5c20,
              second = {
                ID = 44309165
              }
            }, {
              first = 0x5555a4ae7d80,
              second = {
                ID = 44309581
              }
            }, {
              first = 0x5555a4ae8640,
              second = {
                ID = 44309718
              }
            }, {
              first = 0x5555a4aea7a0,
              second = {
                ID = 44310133
              }
            }, {
              first = 0x5555a4aeb060,
              second = {
                ID = 44310270
              }
            }, {
              first = 0x5555a4aed1c0,
              second = {
                ID = 44310684
              }
            }, {
              first = 0x5555a4aeda80,
              second = {
                ID = 44310815
              }
            }, {
              first = 0x5555a4aefbe0,
              second = {
                ID = 44311215
              }
            }, {
              first = 0x5555a4af04a0,
              second = {
                ID = 44311346
              }
            }, {
              first = 0x5555a4af27d0,
              second = {
                ID = 44311759
              }
            }, {
              first = 0x5555a4af3280,
              second = {
                ID = 44311916
              }
            }, {
              first = 0x5555a4af5980,
              second = {
                ID = 44312356
              }
            }, {
              first = 0x5555a4af6060,
              second = {
                ID = 44312455
              }
            }, {
              first = 0x5555a4af7230,
              second = {
                ID = 44312790
              }
            }, {
              first = 0x5555a4af7b30,
              second = {
                ID = 44312921
              }
            }, {
              first = 0x5555a4af8e10,
              second = {
                ID = 44313301
              }
            }, {
              first = 0x5555a4af96a0,
              second = {
                ID = 44313429
              }
            }, {
              first = 0x5555a4afa910,
              second = {
                ID = 44313802
              }
            }, {
              first = 0x5555a4afb1a0,
              second = {
                ID = 44313937
              }
            }, {
              first = 0x5555a4afc260,
              second = {
                ID = 44314309
              }
            }, {
              first = 0x5555a4afc920,
              second = {
                ID = 44314420
              }
            }, {
              first = 0x5555a4afda90,
              second = {
                ID = 44314776
              }
            }, {
              first = 0x5555a4afe320,
              second = {
                ID = 44314908
              }
            }, {
              first = 0x5555a4aff730,
              second = {
                ID = 44315314
              }
            }, {
              first = 0x5555a4b00190,
              second = {
                ID = 44315483
              }
            }, {
              first = 0x5555a4b014e0,
              second = {
                ID = 44315914
              }
            }, {
              first = 0x5555a4b01d70,
              second = {
                ID = 44316048
              }
            }, {
              first = 0x5555a4b03710,
              second = {
                ID = 44316554
              }
            }, {
              first = 0x5555a4b04640,
              second = {
                ID = 44316738
              }
            }, {
              first = 0x5555a4b07df0,
              second = {
                ID = 44317869
              }
            }, {
              first = 0x5555a4b088b0,
              second = {
                ID = 44318033
              }
            }, {
              first = 0x5555a4b0b590,
              second = {
                ID = 44318523
              }
            }, {
              first = 0x5555a4b0c2d0,
              second = {
                ID = 44318701
              }
            }, {
              first = 0x5555a4c6d338,
              second = {
                ID = 44422350
              }
            }, {
              first = 0x5555a4c70088,
              second = {
                ID = 44422505
              }
            }, {
              first = 0x5555a4cfea88,
              second = {
                ID = 44432563
              }
            }, {
              first = 0x5555a4d03968,
              second = {
                ID = 44432734
              }
            }, {
              first = 0x5555a4d00568,
              second = {
                ID = 44437987
              }
            }, {
              first = 0x5555a4d053e8,
              second = {
                ID = 44438148
              }
            }, {
              first = 0x5555a4d4dcc8,
              second = {
                ID = 44443976
              }
            }, {
              first = 0x5555a4d51338,
              second = {
                ID = 44444145
              }
            }, {
              first = 0x5555a4dac768,
              second = {
                ID = 44448506
              }
            }, {
              first = 0x5555a4dafdc8,
              second = {
                ID = 44448685
              }
            }, {
              first = 0x5555a518c000,
              second = {
                ID = 44557664
              }
            }, {
              first = 0x5555a518d0e8,
              second = {
                ID = 44558038
              }
            }, {
              first = 0x5555a5292178,
              second = {
                ID = 44689734
              }
            }, {
              first = 0x5555a58e9cc8,
              second = {
                ID = 45775897
              }
            }, {
              first = 0x5555a58ea7f8,
              second = {
                ID = 45776071
              }
            }, {
              first = 0x5555a58eb298,
              second = {
                ID = 45776242
              }
            }, {
              first = 0x5555a58ebcd8,
              second = {
                ID = 45776410
              }
            }, {
              first = 0x5555a58ec7a8,
              second = {
                ID = 45776581
              }
            }, {
              first = 0x5555a58ed2d8,
              second = {
                ID = 45776755
              }
            }, {
              first = 0x5555a58edd78,
              second = {
                ID = 45776926
              }
            }, {
              first = 0x5555a58ee7b8,
              second = {
                ID = 45777094
              }
            }, {
              first = 0x5555a58ef1f8,
              second = {
                ID = 45777265
              }
            }, {
              first = 0x5555a58efc38,
              second = {
                ID = 45777439
              }
            }, {
              first = 0x5555a58f0678,
              second = {
                ID = 45777610
              }
            }, {
              first = 0x5555a58f10b8,
              second = {
                ID = 45777778
              }
            }, {
              first = 0x5555a58f1b88,
              second = {
                ID = 45777949
              }
            }, {
              first = 0x5555a58f26b8,
              second = {
                ID = 45778123
              }
            }, {
              first = 0x5555a58f3158,
              second = {
                ID = 45778294
              }
            }, {
              first = 0x5555a58f3b98,
              second = {
                ID = 45778462
              }
            }, {
              first = 0x5555a58f45d8,
              second = {
                ID = 45778633
              }
            }, {
              first = 0x5555a58f5018,
              second = {
                ID = 45778807
              }
            }, {
              first = 0x5555a58f5a58,
              second = {
                ID = 45778978
              }
            }, {
              first = 0x5555a58f6498,
              second = {
                ID = 45779146
              }
            }, {
              first = 0x5555a58f6ed8,
              second = {
                ID = 45779317
              }
            }, {
              first = 0x5555a58f7918,
              second = {
                ID = 45779491
              }
            }, {
              first = 0x5555a58f8358,
              second = {
                ID = 45779662
              }
            }, {
              first = 0x5555a58f8d98,
              second = {
                ID = 45779830
              }
            }...},
          LateParsedInstantiations = {
            <llvm::SmallVectorImpl<std::pair<clang::ValueDecl*, clang::SourceLocation> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::ValueDecl*, clang::SourceLocation>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::ValueDecl*, clang::SourceLocation>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1420,
                    Size = 0,
                    Capacity = 1
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::ValueDecl*, clang::SourceLocation>, 1>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          PendingLocalImplicitInstantiations = std::deque with 0 elements,
          VarDataSharingAttributesStack = 0x5555a18e1830,
          DeclareTargetNesting = {
            <llvm::SmallVectorImpl<clang::Sema::DeclareTargetContextInfo>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::DeclareTargetContextInfo, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::DeclareTargetContextInfo, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1498,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::DeclareTargetContextInfo, 4>> = {
              InlineElts = '\000' <repeats 223 times>
            }, <No data fields>},
          OMPDeclareVariantScopes = {
            <llvm::SmallVectorImpl<clang::Sema::OMPDeclareVariantScope>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::OMPDeclareVariantScope, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::OMPDeclareVariantScope, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1588,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::OMPDeclareVariantScope, 4>> = {
              InlineElts = '\000' <repeats 159 times>
            }, <No data fields>},
          OMPAssumeScoped = {
            <llvm::SmallVectorImpl<clang::AssumptionAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::AssumptionAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::AssumptionAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1638,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::AssumptionAttr*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          OMPAssumeGlobal = {
            <llvm::SmallVectorImpl<clang::AssumptionAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::AssumptionAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::AssumptionAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1668,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::AssumptionAttr*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          ForceCUDAHostDeviceDepth = 0,
          DeviceDeferredDiags = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > >, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > > > >, clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > >, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > >, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > > > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          LocsWithCUDACallDiags = {
            <llvm::detail::DenseSetImpl<clang::Sema::FunctionDeclAndLoc, llvm::DenseMap<clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >, clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          DeviceKnownEmittedFns = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc> >, clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          TypeTagForDatatypeMagicValues = std::unique_ptr<llvm::DenseMap<std::pair<clang::IdentifierInfo const*, unsigned long>, clang::Sema::TypeTagData, llvm::DenseMapInfo<std::pair<clang::IdentifierInfo const*, unsigned long>, void>, llvm::detail::DenseMapPair<std::pair<clang::IdentifierInfo const*, unsigned long>, clang::Sema::TypeTagData> >> = {
            get() = 0x0
          },
          CurScope = 0x55556d734890,
          Ident_super = 0x0,
          Ident___float128 = 0x0,
          Ident__Nonnull = 0x0,
          Ident__Nullable = 0x0,
          Ident__Nullable_result = 0x0,
          Ident__Null_unspecified = 0x0,
          Ident_NSError = 0x0,
          SemaPPCallbackHandler = 0x555561a6bde0,
          CFError = 0x0,
          DelayedDllExportClasses = {
            <llvm::SmallVectorImpl<clang::CXXRecordDecl*>> = {
              <llvm::SmallVectorTemplateBase<clang::CXXRecordDecl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::CXXRecordDecl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1740,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::CXXRecordDecl*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          DelayedDllExportMemberFunctions = {
            <llvm::SmallVectorImpl<clang::CXXMethodDecl*>> = {
              <llvm::SmallVectorTemplateBase<clang::CXXMethodDecl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::CXXMethodDecl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1770,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::CXXMethodDecl*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          ParsingClassDepth = 2,
          MisalignedMembers = {
            <llvm::SmallVectorImpl<clang::Sema::MisalignedMember>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::MisalignedMember, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::MisalignedMember, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e17a8,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::MisalignedMember, 4>> = {
              InlineElts = '\000' <repeats 127 times>
            }, <No data fields>}
        }
        Context = @0x5555a18d0ae0: {
          <llvm::RefCountedBase<clang::ASTContext>> = {
            RefCount = 1
          }, 
          members of clang::ASTContext:
          Types = {
            <llvm::SmallVectorImpl<clang::Type*>> = {
              <llvm::SmallVectorTemplateBase<clang::Type*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Type*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a41b45d0,
                    Size = 244850,
                    Capacity = 262143
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Type*, 0>> = {<No data fields>}, <No data fields>},
          ExtQualNodes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ExtQuals>, clang::ExtQuals>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555564c0cbd0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          ComplexTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ComplexType>, clang::ComplexType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555572d9f9e0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          PointerTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::PointerType>, clang::PointerType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a5a338c0,
                NumBuckets = 8192,
                NumNodes = 9406
              }, <No data fields>}, <No data fields>},
          AdjustedTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::AdjustedType>, clang::AdjustedType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555979f1d40,
                NumBuckets = 128,
                NumNodes = 250
              }, <No data fields>}, <No data fields>},
          BlockPointerTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::BlockPointerType>, clang::BlockPointerType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556cccba00,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          LValueReferenceTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::LValueReferenceType>, clang::LValueReferenceType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a47646c0,
                NumBuckets = 8192,
                NumNodes = 13247
              }, <No data fields>}, <No data fields>},
          RValueReferenceTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::RValueReferenceType>, clang::RValueReferenceType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a2d8eeb0,
                NumBuckets = 2048,
                NumNodes = 3788
              }, <No data fields>}, <No data fields>},
          MemberPointerTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::MemberPointerType>, clang::MemberPointerType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555597a0b430,
                NumBuckets = 128,
                NumNodes = 208
              }, <No data fields>}, <No data fields>},
          ConstantArrayTypes = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::ConstantArrayType, clang::ASTContext&>, clang::ConstantArrayType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a369a000,
                NumBuckets = 512,
                NumNodes = 594
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::ConstantArrayType, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          IncompleteArrayTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::IncompleteArrayType>, clang::IncompleteArrayType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3ac2b0,
                NumBuckets = 64,
                NumNodes = 125
              }, <No data fields>}, <No data fields>},
          VariableArrayTypes = std::vector of length 0, capacity 0,
          DependentSizedArrayTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentSizedArrayType>, clang::DependentSizedArrayType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d378720,
                NumBuckets = 64,
                NumNodes = 34
              }, <No data fields>}, <No data fields>},
          DependentSizedExtVectorTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentSizedExtVectorType>, clang::DependentSizedExtVectorType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555563cc7e30,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          DependentAddressSpaceTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentAddressSpaceType>, clang::DependentAddressSpaceType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d360040,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          VectorTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::VectorType>, clang::VectorType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d35f7c0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          DependentVectorTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentVectorType>, clang::DependentVectorType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d35e8a0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          MatrixTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ConstantMatrixType>, clang::ConstantMatrixType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3a8a80,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          DependentSizedMatrixTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentSizedMatrixType>, clang::DependentSizedMatrixType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d2aa070,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          FunctionNoProtoTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::FunctionNoProtoType>, clang::FunctionNoProtoType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d36cc40,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          FunctionProtoTypes = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::FunctionProtoType, clang::ASTContext&>, clang::FunctionProtoType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a6091b40,
                NumBuckets = 32768,
                NumNodes = 35081
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::FunctionProtoType, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          DependentTypeOfExprTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentTypeOfExprType>, clang::DependentTypeOfExprType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d379b80,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          DependentDecltypeTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentDecltypeType>, clang::DependentDecltypeType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55559dfb71a0,
                NumBuckets = 256,
                NumNodes = 329
              }, <No data fields>}, <No data fields>},
          TemplateTypeParmTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::TemplateTypeParmType>, clang::TemplateTypeParmType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a590d850,
                NumBuckets = 16384,
                NumNodes = 21055
              }, <No data fields>}, <No data fields>},
          ObjCTypeParamTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ObjCTypeParamType>, clang::ObjCTypeParamType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3c6f10,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          SubstTemplateTypeParmTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::SubstTemplateTypeParmType>, clang::SubstTemplateTypeParmType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a2fddca0,
                NumBuckets = 8192,
                NumNodes = 13247
              }, <No data fields>}, <No data fields>},
          SubstTemplateTypeParmPackTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::SubstTemplateTypeParmPackType>, clang::SubstTemplateTypeParmPackType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d36e0a0,
                NumBuckets = 64,
                NumNodes = 16
              }, <No data fields>}, <No data fields>},
          TemplateSpecializationTypes = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::TemplateSpecializationType, clang::ASTContext&>, clang::TemplateSpecializationType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a51fa9c0,
                NumBuckets = 4096,
                NumNodes = 6598
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::TemplateSpecializationType, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          ParenTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ParenType>, clang::ParenType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556e4cd0c0,
                NumBuckets = 512,
                NumNodes = 337
              }, <No data fields>}, <No data fields>},
          UsingTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::UsingType>, clang::UsingType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a36fac80,
                NumBuckets = 1024,
                NumNodes = 1350
              }, <No data fields>}, <No data fields>},
          TypedefTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::TypedefType>, clang::TypedefType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555564a1ebf0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          ElaboratedTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ElaboratedType>, clang::ElaboratedType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a4c74830,
                NumBuckets = 32768,
                NumNodes = 49804
              }, <No data fields>}, <No data fields>},
          DependentNameTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentNameType>, clang::DependentNameType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a5ef9ab0,
                NumBuckets = 8192,
                NumNodes = 8885
              }, <No data fields>}, <No data fields>},
          DependentTemplateSpecializationTypes = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::DependentTemplateSpecializationType, clang::ASTContext&>, clang::DependentTemplateSpecializationType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d900400,
                NumBuckets = 256,
                NumNodes = 306
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::DependentTemplateSpecializationType, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          PackExpansionTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::PackExpansionType>, clang::PackExpansionType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a5887810,
                NumBuckets = 1024,
                NumNodes = 1381
              }, <No data fields>}, <No data fields>},
          ObjCObjectTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ObjCObjectTypeImpl>, clang::ObjCObjectTypeImpl>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3c8da0,
                NumBuckets = 64,
                NumNodes = 2
              }, <No data fields>}, <No data fields>},
          ObjCObjectPointerTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ObjCObjectPointerType>, clang::ObjCObjectPointerType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d2a70c0,
                NumBuckets = 64,
                NumNodes = 2
              }, <No data fields>}, <No data fields>},
          DependentUnaryTransformTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentUnaryTransformType>, clang::DependentUnaryTransformType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3b7510,
                NumBuckets = 64,
                NumNodes = 3
              }, <No data fields>}, <No data fields>},
          AutoTypes = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::AutoType, clang::ASTContext&>, clang::AutoType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a402c560,
                NumBuckets = 512,
                NumNodes = 554
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::AutoType, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          DeducedTemplateSpecializationTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DeducedTemplateSpecializationType>, clang::DeducedTemplateSpecializationType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3affd0,
                NumBuckets = 64,
                NumNodes = 76
              }, <No data fields>}, <No data fields>},
          AtomicTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::AtomicType>, clang::AtomicType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d386780,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          AttributedTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::AttributedType>, clang::AttributedType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d360730,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          PipeTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::PipeType>, clang::PipeType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3b5f00,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          BitIntTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::BitIntType>, clang::BitIntType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3b93a0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          DependentBitIntTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentBitIntType>, clang::DependentBitIntType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3a7b10,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          BTFTagAttributedTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::BTFTagAttributedType>, clang::BTFTagAttributedType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3cead0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          QualifiedTemplateNames = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::QualifiedTemplateName>, clang::QualifiedTemplateName>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a5e31a50,
                NumBuckets = 1024,
                NumNodes = 1145
              }, <No data fields>}, <No data fields>},
          DependentTemplateNames = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentTemplateName>, clang::DependentTemplateName>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55559e7c05c0,
                NumBuckets = 256,
                NumNodes = 308
              }, <No data fields>}, <No data fields>},
          SubstTemplateTemplateParms = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::SubstTemplateTemplateParmStorage>, clang::SubstTemplateTemplateParmStorage>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3c19e0,
                NumBuckets = 64,
                NumNodes = 19
              }, <No data fields>}, <No data fields>},
          SubstTemplateTemplateParmPacks = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::SubstTemplateTemplateParmPackStorage, clang::ASTContext&>, clang::SubstTemplateTemplateParmPackStorage>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3c7c80,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::SubstTemplateTemplateParmPackStorage, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          NestedNameSpecifiers = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::NestedNameSpecifier>, clang::NestedNameSpecifier>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a1c02320,
                NumBuckets = 16384,
                NumNodes = 26962
              }, <No data fields>}, <No data fields>},
          GlobalNestedNameSpecifier = 0x5555a1970f68,
          ASTRecordLayouts = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::RecordDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::RecordDecl const*, void>, llvm::detail::DenseMapPair<clang::RecordDecl const*, clang::ASTRecordLayout const*> >, clang::RecordDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::RecordDecl const*, void>, llvm::detail::DenseMapPair<clang::RecordDecl const*, clang::ASTRecordLayout const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::RecordDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::RecordDecl const*, void>, llvm::detail::DenseMapPair<clang::RecordDecl const*, clang::ASTRecordLayout const*> >:
            Buckets = 0x5555a3dc83c0,
            NumEntries = 686,
            NumTombstones = 0,
            NumBuckets = 1024
          },
          ObjCLayouts = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::ObjCContainerDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*> >, clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::ObjCContainerDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::ObjCContainerDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          MemoizedTypeInfo = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Type const*, clang::TypeInfo, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, clang::TypeInfo> >, clang::Type const*, clang::TypeInfo, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, clang::TypeInfo> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Type const*, clang::TypeInfo, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, clang::TypeInfo> >:
            Buckets = 0x5555a45b4650,
            NumEntries = 5685,
            NumTombstones = 0,
            NumBuckets = 8192
          },
          MemoizedUnadjustedAlign = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Type const*, unsigned int, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, unsigned int> >, clang::Type const*, unsigned int, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, unsigned int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Type const*, unsigned int, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, unsigned int> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          KeyFunctions = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl>, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl> > >, clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl>, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl>, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl> > >:
            Buckets = 0x55557705b930,
            NumEntries = 18,
            NumTombstones = 0,
            NumBuckets = 64
          },
          ObjCImpls = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ObjCContainerDecl*, clang::ObjCImplDecl*, llvm::DenseMapInfo<clang::ObjCContainerDecl*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl*, clang::ObjCImplDecl*> >, clang::ObjCContainerDecl*, clang::ObjCImplDecl*, llvm::DenseMapInfo<clang::ObjCContainerDecl*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl*, clang::ObjCImplDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ObjCContainerDecl*, clang::ObjCImplDecl*, llvm::DenseMapInfo<clang::ObjCContainerDecl*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl*, clang::ObjCImplDecl*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          ObjCMethodRedecls = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*, llvm::DenseMapInfo<clang::ObjCMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*> >, clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*, llvm::DenseMapInfo<clang::ObjCMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*, llvm::DenseMapInfo<clang::ObjCMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          BlockVarCopyInits = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, clang::BlockVarCopyInit, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, clang::BlockVarCopyInit> >, clang::VarDecl const*, clang::BlockVarCopyInit, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, clang::BlockVarCopyInit> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::VarDecl const*, clang::BlockVarCopyInit, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, clang::BlockVarCopyInit> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          MSGuidDecls = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::MSGuidDecl>, clang::MSGuidDecl>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555618a00b0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          UnnamedGlobalConstantDecls = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::UnnamedGlobalConstantDecl>, clang::UnnamedGlobalConstantDecl>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555572d50c20,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          TemplateParamObjectDecls = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::TemplateParamObjectDecl>, clang::TemplateParamObjectDecl>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d35f0d0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          StringLiteralCache = {
            <llvm::StringMapImpl> = {
              TheTable = 0x0,
              NumBuckets = 0,
              NumItems = 0,
              NumTombstones = 0,
              ItemSize = 16
            }, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},
          CUIDHash = "",
          CanonTemplateTemplateParms = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::ASTContext::CanonicalTemplateTemplateParm, clang::ASTContext const&>, clang::ASTContext::CanonicalTemplateTemplateParm>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555576cec0f0,
                NumBuckets = 64,
                NumNodes = 10
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::ASTContext::CanonicalTemplateTemplateParm, clang::ASTContext const&>:
            Context = @0x5555a18d0ae0
          },
          Int128Decl = 0x55556e4ed608,
          UInt128Decl = 0x55556e4ed680,
          BuiltinVaListDecl = 0x5555a190e660,
          BuiltinMSVaListDecl = 0x55556e4edac8,
          ObjCIdDecl = 0x5555a2337bd0,
          ObjCSelDecl = 0x5555a2337dc8,
          ObjCClassDecl = 0x5555a2337cf0,
          ObjCProtocolClassDecl = 0x5555a2337e50,
          BOOLDecl = 0x0,
          ObjCIdRedefinitionType = {
            Value = {
              Value = 0
            }
          },
          ObjCClassRedefinitionType = {
            Value = {
              Value = 0
            }
          },
          ObjCSelRedefinitionType = {
            Value = {
              Value = 0
            }
          },
          BoolName = 0x0,
          NSObjectName = 0x0,
          NSCopyingName = 0x0,
          MakeIntegerSeqName = 0x5555a192e260,
          TypePackElementName = 0x5555a192e2a0,
          ObjCConstantStringType = {
            Value = {
              Value = 0
            }
          },
          CFConstantStringTagDecl = 0x55556e4ed6e0,
          CFConstantStringTypeDecl = 0x55556e4eda20,
          ObjCSuperType = {
            Value = {
              Value = 0
            }
          },
          ObjCNSStringType = {
            Value = {
              Value = 0
            }
          },
          ObjCInstanceTypeDecl = 0x5555a3ddc430,
          FILEDecl = 0x5555a197b7e0,
          jmp_bufDecl = 0x0,
          sigjmp_bufDecl = 0x0,
          ucontext_tDecl = 0x0,
          BlockDescriptorType = 0x0,
          BlockDescriptorExtendedType = 0x0,
          cudaConfigureCallDecl = 0x0,
          DeclAttrs = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*> >, clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*> >:
            Buckets = 0x5555a318b0a0,
            NumEntries = 5895,
            NumTombstones = 0,
            NumBuckets = 8192
          },
          MergedDecls = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl*, clang::Decl*, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*> >, clang::Decl*, clang::Decl*, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl*, clang::Decl*, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          MergedDefModules = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*>, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*> > >, clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*>, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*>, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*> > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          ModuleInitializers = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Module*, clang::ASTContext::PerModuleInitializers*, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseMapPair<clang::Module*, clang::ASTContext::PerModuleInitializers*> >, clang::Module*, clang::ASTContext::PerModuleInitializers*, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseMapPair<clang::Module*, clang::ASTContext::PerModuleInitializers*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Module*, clang::ASTContext::PerModuleInitializers*, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseMapPair<clang::Module*, clang::ASTContext::PerModuleInitializers*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          TopLevelModule = 0x0,
          TemplateOrInstantiation = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*>, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*> > >, clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*>, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*>, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*> > >:
            Buckets = 0x5555a36fcc90,
            NumEntries = 868,
            NumTombstones = 0,
            NumBuckets = 2048
          },
          InstantiatedFromUsingDecl = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >, clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >:
            Buckets = 0x5555a1c22330,
            NumEntries = 111,
            NumTombstones = 0,
            NumBuckets = 256
          },
          InstantiatedFromUsingEnumDecl = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::UsingEnumDecl*, clang::UsingEnumDecl*, llvm::DenseMapInfo<clang::UsingEnumDecl*, void>, llvm::detail::DenseMapPair<clang::UsingEnumDecl*, clang::UsingEnumDecl*> >, clang::UsingEnumDecl*, clang::UsingEnumDecl*, llvm::DenseMapInfo<clang::UsingEnumDecl*, void>, llvm::detail::DenseMapPair<clang::UsingEnumDecl*, clang::UsingEnumDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::UsingEnumDecl*, clang::UsingEnumDecl*, llvm::DenseMapInfo<clang::UsingEnumDecl*, void>, llvm::detail::DenseMapPair<clang::UsingEnumDecl*, clang::UsingEnumDecl*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          InstantiatedFromUsingShadowDecl = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::UsingShadowDecl*, clang::UsingShadowDecl*, llvm::DenseMapInfo<clang::UsingShadowDecl*, void>, llvm::detail::DenseMapPair<clang::UsingShadowDecl*, clang::UsingShadowDecl*> >, clang::UsingShadowDecl*, clang::UsingShadowDecl*, llvm::DenseMapInfo<clang::UsingShadowDecl*, void>, llvm::detail::DenseMapPair<clang::UsingShadowDecl*, clang::UsingShadowDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::UsingShadowDecl*, clang::UsingShadowDecl*, llvm::DenseMapInfo<clang::UsingShadowDecl*, void>, llvm::detail::DenseMapPair<clang::UsingShadowDecl*, clang::UsingShadowDecl*> >:
            Buckets = 0x5555a1b050a0,
            NumEntries = 8,
            NumTombstones = 0,
            NumBuckets = 64
          },
          InstantiatedFromUnnamedFieldDecl = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::FieldDecl*, clang::FieldDecl*, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, clang::FieldDecl*> >, clang::FieldDecl*, clang::FieldDecl*, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, clang::FieldDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::FieldDecl*, clang::FieldDecl*, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, clang::FieldDecl*> >:
            Buckets = 0x55559b591f60,
            NumEntries = 7,
            NumTombstones = 0,
            NumBuckets = 64
          },
          OverriddenMethods = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*>, llvm::DenseMapInfo<clang::CXXMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*> > >, clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*>, llvm::DenseMapInfo<clang::CXXMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*>, llvm::DenseMapInfo<clang::CXXMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*> > >:
            Buckets = 0x5555a3e0e400,
            NumEntries = 259,
            NumTombstones = 0,
            NumBuckets = 512
          },
          MangleNumberingContexts = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::DeclContext const*, void>, llvm::detail::DenseMapPair<clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >, clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::DeclContext const*, void>, llvm::detail::DenseMapPair<clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::DeclContext const*, void>, llvm::detail::DenseMapPair<clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >:
            Buckets = 0x5555615637b0,
            NumEntries = 173,
            NumTombstones = 0,
            NumBuckets = 256
          },
          ExtraMangleNumberingContexts = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >, clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          MangleNumbers = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl const*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, unsigned int> >, clang::NamedDecl const*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::NamedDecl const*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, unsigned int> >:
              Buckets = 0x5555639600a0,
              NumEntries = 20,
              NumTombstones = 0,
              NumBuckets = 64
            },
            Vector = std::vector of length 20, capacity 32 = {{
                first = 0x5555a2562c58,
                second = 2
              }, {
                first = 0x5555a260ecd0,
                second = 2
              }, {
                first = 0x5555a2681100,
                second = 2
              }, {
                first = 0x5555a26eb1c0,
                second = 2
              }, {
                first = 0x5555a27539f0,
                second = 2
              }, {
                first = 0x5555a27a31d0,
                second = 2
              }, {
                first = 0x5555a289cb80,
                second = 2
              }, {
                first = 0x5555a2518730,
                second = 2
              }, {
                first = 0x5555a37cd138,
                second = 2
              }, {
                first = 0x5555a3802068,
                second = 2
              }, {
                first = 0x5555a3802548,
                second = 2
              }, {
                first = 0x5555a381aed8,
                second = 3
              }, {
                first = 0x5555a38534c8,
                second = 4
              }, {
                first = 0x5555a59f56e8,
                second = 2
              }, {
                first = 0x5555a59fa968,
                second = 3
              }, {
                first = 0x5555a59fb290,
                second = 2
              }, {
                first = 0x5555a5b9d968,
                second = 2
              }, {
                first = 0x5555a5c331f0,
                second = 2
              }, {
                first = 0x5555a5ec5658,
                second = 2
              }, {
                first = 0x5555a194a9e8,
                second = 3
              }}
          },
          StaticLocalNumbers = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >, clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          DeviceLambdaManglingNumbers = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CXXRecordDecl const*, unsigned int, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, unsigned int> >, clang::CXXRecordDecl const*, unsigned int, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, unsigned int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CXXRecordDecl const*, unsigned int, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, unsigned int> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          ParamIndices = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >, clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          FirstLocalImport = 0x0,
          LastLocalImport = 0x0,
          TUDecl = 0x55556e4ecd98,
          ExternCContext = 0x5555a190f468,
          MakeIntegerSeqDecl = 0x5555a2005220,
          TypePackElementDecl = 0x0,
          SourceMgr = @0x55556153b630,
          LangOpts = @0x55556152eb00,
          NoSanitizeL = std::unique_ptr<clang::NoSanitizeList> = {
            get() = 0x55556585fbe0
          },
          XRayFilter = std::unique_ptr<clang::XRayFunctionFilter> = {
            get() = 0x555564e0e120
          },
          ProfList = std::unique_ptr<clang::ProfileList> = {
            get() = 0x555576d8cbe0
          },
          BumpAlloc = {
            <llvm::AllocatorBase<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {<No data fields>}, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            members of llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>:
            CurPtr = 0x5555a64f2510 "",
            End = 0x5555a6511c00 "",
            Slabs = {
              <llvm::SmallVectorImpl<void*>> = {
                <llvm::SmallVectorTemplateBase<void*, true>> = {
                  <llvm::SmallVectorTemplateCommon<void*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a2ce8650,
                      Size = 901,
                      Capacity = 1279
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<void*, 4>> = {
                InlineElts = "\220\315NnUU\000\000P吡UU\000\000\360\006\223\241UU\000\000\020'\223\241UU\000"
              }, <No data fields>},
            CustomSizedSlabs = {
              <llvm::SmallVectorImpl<std::pair<void*, unsigned long> >> = {
                <llvm::SmallVectorTemplateBase<std::pair<void*, unsigned long>, true>> = {
                  <llvm::SmallVectorTemplateCommon<std::pair<void*, unsigned long>, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18d12e8,
                      Size = 0,
                      Capacity = 0
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<std::pair<void*, unsigned long>, 0>> = {<No data fields>}, <No data fields>},
            BytesAllocated = 67318119,
            RedZoneSize = 1
          },
          DiagAllocator = {
            Cached = {{
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d14a8,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1518,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1848,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d18b8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1be8,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1c58,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1f88,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1ff8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2328,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2398,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d26c8,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2738,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2a68,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2ad8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2e08,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2e78,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d31a8,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d3218,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 1 '\001',
                DiagArgumentsKind = "\000\b\n\n\000\000\000\000\000",
                DiagArgumentsVal = {93826281386144, 93826324465712, 93826289069840, 93826320210240, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"&abbrev->~basic_string()", "0", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d3548,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "\f\344\200\002\303\344\200\002\001d\377\377\244I\177\002\244I\177\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d35b8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 2 '\002',
                DiagArgumentsKind = "\b\b\n\n\000\000\000\000\000",
                DiagArgumentsVal = {93826271794144, 93826350590624, 93826284746408, 93826350697816, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"__and_<std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1>> &, long>, std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<std::ch"..., "", "[with _Tp = std::__format::_Sink_iter<wchar_t>]", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d38e8,
                          Size = 2,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "З\304\002З\304\002\001i\377\377Ǘ\304\002Ǘ\304\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d3958,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 1 '\001',
                DiagArgumentsKind = "\000\002\n\n\000\000\000\000\000",
                DiagArgumentsVal = {93826350657376, 0, 93826284746408, 93826347046832, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"__and_<std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1>> &, long>, std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<std::ch"..., "", "[with _Tp = std::__format::_Sink_iter<wchar_t>]", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d3c88,
                          Size = 1,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "{Uy\002\223Uy\002\001\310\376\377g\201\304\002g\201\304\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d3cf8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = "\264Gz\002\264Gz\002\0010\377\377\000\000\000\000\000\000\000\000\000\177\000\000 =\215\241UU\000\000\002\000\000\000\000\000\000\000->", '\000' <repeats 341 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 1 '\001',
                DiagArgumentsKind = "\000\b\002\n\000\000\000\000\000",
                DiagArgumentsVal = {93826281386144, 93826348952656, 1, 93826347046832, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"_TupleConstraints<true, std::thread::_State *, std::default_delete<std::thread::_State>>::__is_explicitly_constructible()", "", "[with _Tp = std::__format::_Sink_iter<wchar_t>]", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4028,
                          Size = 1,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "i\217\203\002\262\217\203\002\001\035\377\3772\035\304\0022\035\304\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4098,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 1 '\001',
                DiagArgumentsKind = "\000\b\n\000\000\000\000\000\000",
                DiagArgumentsVal = {93826283786768, 93826284777712, 93826284746408, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"&__info->~local_info()", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d43c8,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "\f\344\200\002\303\344\200\002\001^\377\3778#\202\0028#\202\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4438,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 2 '\002',
                DiagArgumentsKind = "\b\b\n\n\000\000\000\000\000",
                DiagArgumentsVal = {93826271794144, 93826350590624, 93826284746408, 93826350697816, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"__and_<std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1>> &, long>, std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<std::ch"..., "", "[with _Tp = std::__format::_Sink_iter<wchar_t>]", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4768,
                          Size = 2,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "З\304\002З\304\002\001i\377\377Ǘ\304\002Ǘ\304\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d47d8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = "\177\025\247\002\177\025\247\002\000\005\305X\000\000\000\000\000\000\000\000\000\177\000\000\000H\215\241UU\000\000\a\000\000\000\000\000\000\000static ", '\000' <repeats 336 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 1 '\001',
                DiagArgumentsKind = "\000\003\n\000\002\000\000\000\000",
                DiagArgumentsVal = {0, 0, 93826312595960, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"basic_string(&\"UTC\"[0], std::allocator<char>())", "", "[with _Tp = std::__format::_Sink_iter<wchar_t>]", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4b08,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "\f\344\200\002\303\344\200\002\001V\377\377ѥ}\002ѥ}\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4b78,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }},
            FreeList = {0x5555a18d12f8, 0x5555a18d1698, 0x5555a18d1a38, 0x5555a18d1dd8, 0x5555a18d2178, 0x5555a18d2518, 0x5555a18d28b8, 0x5555a18d2c58, 0x5555a18d2ff8, 0x5555a18d4218, 0x5555a18d4958, 0x5555a18d3398, 0x5555a18d3e78, 0x5555a18d3ad8, 0x5555a18d3738, 0x5555a18d45b8},
            NumFreeListEntries = 16
          },
          ABI = std::unique_ptr<clang::CXXABI> = {
            get() = 0x55559dfa7da0
          },
          AddrSpaceMapMangling = false,
          Target = 0x555561539bc0,
          AuxTarget = 0x0,
          PrintingPolicy = {
            Indentation = 2,
            SuppressSpecifiers = 0,
            SuppressTagKeyword = 1,
            IncludeTagDefinition = 0,
            SuppressScope = 0,
            SuppressUnwrittenScope = 0,
            SuppressInlineNamespace = 1,
            SuppressInitializers = 0,
            ConstantArraySizeAsWritten = 0,
            AnonymousTagLocations = 1,
            SuppressStrongLifetime = 0,
            SuppressLifetimeQualifiers = 0,
            SuppressTemplateArgsInCXXConstructors = 0,
            SuppressDefaultTemplateArgs = 1,
            Bool = 1,
            Nullptr = 1,
            NullptrTypeInNamespace = 1,
            Restrict = 0,
            Alignof = 1,
            UnderscoreAlignof = 0,
            UseVoidForZeroParams = 0,
            SplitTemplateClosers = 0,
            TerseOutput = 0,
            PolishForDeclaration = 0,
            Half = 0,
            MSWChar = 0,
            IncludeNewlines = 1,
            MSVCFormatting = 0,
            ConstantsAsWritten = 0,
            SuppressImplicitBase = 0,
            FullyQualifiedName = 0,
            PrintCanonicalTypes = 0,
            PrintInjectedClassNameWithArguments = 1,
            UsePreferredNames = 1,
            AlwaysIncludeTypeForTemplateArgument = 0,
            CleanUglifiedParameters = 0,
            EntireContentsOfLargeArray = 0,
            UseEnumerators = 1,
            PrintAdjustedArrayType = 1,
            PrintSubstitutedTemplateParameters = 0,
            Callbacks = 0x0
          },
          InterpContext = std::unique_ptr<clang::interp::Context> = {
            get() = 0x0
          },
          ParentMapCtx = std::unique_ptr<clang::ParentMapContext> = {
            get() = 0x0
          },
          ListNodeFreeList = 0x0,
          Idents = @0x5555a1bf38c0,
          Selectors = @0x5555a1bf3940,
          BuiltinInfo = @0x5555a1860160,
          TUKind = clang::TU_Complete,
          DeclarationNames = {
            Ctx = @0x5555a18d0ae0,
            CXXConstructorNames = {
              <llvm::FoldingSetImpl<llvm::FoldingSet<clang::detail::CXXSpecialNameExtra>, clang::detail::CXXSpecialNameExtra>> = {
                <llvm::FoldingSetBase> = {
                  Buckets = 0x5555a5e73a70,
                  NumBuckets = 1024,
                  NumNodes = 1180
                }, <No data fields>}, <No data fields>},
            CXXDestructorNames = {
              <llvm::FoldingSetImpl<llvm::FoldingSet<clang::detail::CXXSpecialNameExtra>, clang::detail::CXXSpecialNameExtra>> = {
                <llvm::FoldingSetBase> = {
                  Buckets = 0x5555a2ff5cc0,
                  NumBuckets = 4096,
                  NumNodes = 6746
                }, <No data fields>}, <No data fields>},
            CXXConversionFunctionNames = {
              <llvm::FoldingSetImpl<llvm::FoldingSet<clang::detail::CXXSpecialNameExtra>, clang::detail::CXXSpecialNameExtra>> = {
                <llvm::FoldingSetBase> = {
                  Buckets = 0x55556d37f3c0,
                  NumBuckets = 64,
                  NumNodes = 66
                }, <No data fields>}, <No data fields>},
            CXXOperatorNames = {{
                Kind = clang::OO_None,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_New,
                FETokenInfo = 0x5555a193b5f9
              }, {
                Kind = clang::OO_Delete,
                FETokenInfo = 0x5555a193b639
              }, {
                Kind = clang::OO_Array_New,
                FETokenInfo = 0x5555a193b619
              }, {
                Kind = clang::OO_Array_Delete,
                FETokenInfo = 0x5555a193b659
              }, {
                Kind = clang::OO_Plus,
                FETokenInfo = 0x5555a1f7e079
              }, {
                Kind = clang::OO_Minus,
                FETokenInfo = 0x5555a1939619
              }, {
                Kind = clang::OO_Star,
                FETokenInfo = 0x5555a193c6b9
              }, {
                Kind = clang::OO_Slash,
                FETokenInfo = 0x5555a2bbf269
              }, {
                Kind = clang::OO_Percent,
                FETokenInfo = 0x5555a2bbf289
              }, {
                Kind = clang::OO_Caret,
                FETokenInfo = 0x5555a2bbc569
              }, {
                Kind = clang::OO_Amp,
                FETokenInfo = 0x5555a2bbc529
              }, {
                Kind = clang::OO_Pipe,
                FETokenInfo = 0x5555a2bbc549
              }, {
                Kind = clang::OO_Tilde,
                FETokenInfo = 0x5555a2bbc589
              }, {
                Kind = clang::OO_Exclaim,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_Equal,
                FETokenInfo = 0x5555a193b539
              }, {
                Kind = clang::OO_Less,
                FETokenInfo = 0x5555a2bbf329
              }, {
                Kind = clang::OO_Greater,
                FETokenInfo = 0x5555a2bbf369
              }, {
                Kind = clang::OO_PlusEqual,
                FETokenInfo = 0x5555a1f7fc79
              }, {
                Kind = clang::OO_MinusEqual,
                FETokenInfo = 0x5555a1f816f9
              }, {
                Kind = clang::OO_StarEqual,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_SlashEqual,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_PercentEqual,
                FETokenInfo = 0x5555a2bbf249
              }, {
                Kind = clang::OO_CaretEqual,
                FETokenInfo = 0x5555a1f81759
              }, {
                Kind = clang::OO_AmpEqual,
                FETokenInfo = 0x5555a1f81719
              }, {
                Kind = clang::OO_PipeEqual,
                FETokenInfo = 0x5555a1f81739
              }, {
                Kind = clang::OO_LessLess,
                FETokenInfo = 0x5555a2bbcfc9
              }, {
                Kind = clang::OO_GreaterGreater,
                FETokenInfo = 0x5555a2bbd0c9
              }, {
                Kind = clang::OO_LessLessEqual,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_GreaterGreaterEqual,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_EqualEqual,
                FETokenInfo = 0x5555a193c479
              }, {
                Kind = clang::OO_ExclaimEqual,
                FETokenInfo = 0x5555a28fb479
              }, {
                Kind = clang::OO_LessEqual,
                FETokenInfo = 0x5555a2bbf349
              }, {
                Kind = clang::OO_GreaterEqual,
                FETokenInfo = 0x5555a2bbf389
              }, {
                Kind = clang::OO_Spaceship,
                FETokenInfo = 0x5555a193c499
              }, {
                Kind = clang::OO_AmpAmp,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_PipePipe,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_PlusPlus,
                FETokenInfo = 0x5555a193c419
              }, {
                Kind = clang::OO_MinusMinus,
                FETokenInfo = 0x5555a193c439
              }, {
                Kind = clang::OO_Comma,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_ArrowStar,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_Arrow,
                FETokenInfo = 0x5555a28fb419
              }, {
                Kind = clang::OO_Call,
                FETokenInfo = 0x5555a193b199
              }, {
                Kind = clang::OO_Subscript,
                FETokenInfo = 0x5555a1f7fbf9
              }, {
                Kind = clang::OO_Conditional,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_Coawait,
                FETokenInfo = 0x0
              }},
            CXXLiteralOperatorNames = {
              <llvm::FoldingSetImpl<llvm::FoldingSet<clang::detail::CXXLiteralOperatorIdName>, clang::detail::CXXLiteralOperatorIdName>> = {
                <llvm::FoldingSetBase> = {
                  Buckets = 0x555563d31a50,
                  NumBuckets = 64,
                  NumNodes = 11
                }, <No data fields>}, <No data fields>},
            CXXDeductionGuideNames = {
              <llvm::FoldingSetImpl<llvm::FoldingSet<clang::detail::CXXDeductionGuideNameExtra>, clang::detail::CXXDeductionGuideNameExtra>> = {
                <llvm::FoldingSetBase> = {
                  Buckets = 0x5555773b20e0,
                  NumBuckets = 64,
                  NumNodes = 27
                }, <No data fields>}, <No data fields>}
          },
          ExternalSource = {
            Obj = 0x0
          },
          Listener = 0x0,
          CUDAConstantEvalCtx = {
            NoWrongSidedVars = false
          },
          Comments = {
            SourceMgr = @0x55556153b630,
            OrderedComments = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > >, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > > > >, clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > >, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > > > >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > >, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > > > >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            CommentBeginLine = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >, clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            CommentEndOffset = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >, clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            }
          },
          CommentsLoaded = false,
          DeclRawComments = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, clang::RawComment const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::RawComment const*> >, clang::Decl const*, clang::RawComment const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::RawComment const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, clang::RawComment const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::RawComment const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          RedeclChainComments = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >, clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          CommentlessRedeclChains = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >, clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          ParsedComments = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, clang::comments::FullComment*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::comments::FullComment*> >, clang::Decl const*, clang::comments::FullComment*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::comments::FullComment*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, clang::comments::FullComment*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::comments::FullComment*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          CommentCommandTraits = {
            NextID = 199,
            Allocator = @0x5555a18d1298,
            RegisteredCommands = {
              <llvm::SmallVectorImpl<clang::comments::CommandInfo*>> = {
                <llvm::SmallVectorTemplateBase<clang::comments::CommandInfo*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::comments::CommandInfo*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18d5210,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::comments::CommandInfo*, 4>> = {
                InlineElts = '\000' <repeats 31 times>
              }, <No data fields>}
          },
          VoidTy = {
            Stored = {
              Value = {
                Value = 93825411239424
              }
            }
          },
          BoolTy = {
            Stored = {
              Value = {
                Value = 93825411239456
              }
            }
          },
          CharTy = {
            Stored = {
              Value = {
                Value = 93825411239488
              }
            }
          },
          WCharTy = {
            Stored = {
              Value = {
                Value = 93825411240864
              }
            }
          },
          WideCharTy = {
            Stored = {
              Value = {
                Value = 93825411240864
              }
            }
          },
          WIntTy = {
            Stored = {
              Value = {
                Value = 93825411239744
              }
            }
          },
          Char8Ty = {
            Stored = {
              Value = {
                Value = 93825411240896
              }
            }
          },
          Char16Ty = {
            Stored = {
              Value = {
                Value = 93825411240928
              }
            }
          },
          Char32Ty = {
            Stored = {
              Value = {
                Value = 93825411240960
              }
            }
          },
          SignedCharTy = {
            Stored = {
              Value = {
                Value = 93825411239520
              }
            }
          },
          ShortTy = {
            Stored = {
              Value = {
                Value = 93825411239552
              }
            }
          },
          IntTy = {
            Stored = {
              Value = {
                Value = 93825411239584
              }
            }
          },
          LongTy = {
            Stored = {
              Value = {
                Value = 93825411239616
              }
            }
          },
          LongLongTy = {
            Stored = {
              Value = {
                Value = 93825411239648
              }
            }
          },
          Int128Ty = {
            Stored = {
              Value = {
                Value = 93825411240800
              }
            }
          },
          UnsignedCharTy = {
            Stored = {
              Value = {
                Value = 93825411239680
              }
            }
          },
          UnsignedShortTy = {
            Stored = {
              Value = {
                Value = 93825411239712
              }
            }
          },
          UnsignedIntTy = {
            Stored = {
              Value = {
                Value = 93825411239744
              }
            }
          },
          UnsignedLongTy = {
            Stored = {
              Value = {
                Value = 93825411239776
              }
            }
          },
          UnsignedLongLongTy = {
            Stored = {
              Value = {
                Value = 93825411239808
              }
            }
          },
          UnsignedInt128Ty = {
            Stored = {
              Value = {
                Value = 93825411240832
              }
            }
          },
          FloatTy = {
            Stored = {
              Value = {
                Value = 93825411239840
              }
            }
          },
          DoubleTy = {
            Stored = {
              Value = {
                Value = 93825411239872
              }
            }
          },
          LongDoubleTy = {
            Stored = {
              Value = {
                Value = 93825411239904
              }
            }
          },
          Float128Ty = {
            Stored = {
              Value = {
                Value = 93825411239936
              }
            }
          },
          Ibm128Ty = {
            Stored = {
              Value = {
                Value = 93825411239968
              }
            }
          },
          ShortAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240032
              }
            }
          },
          AccumTy = {
            Stored = {
              Value = {
                Value = 93825411240064
              }
            }
          },
          LongAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240096
              }
            }
          },
          UnsignedShortAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240128
              }
            }
          },
          UnsignedAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240160
              }
            }
          },
          UnsignedLongAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240192
              }
            }
          },
          ShortFractTy = {
            Stored = {
              Value = {
                Value = 93825411240224
              }
            }
          },
          FractTy = {
            Stored = {
              Value = {
                Value = 93825411240256
              }
            }
          },
          LongFractTy = {
            Stored = {
              Value = {
                Value = 93825411240288
              }
            }
          },
          UnsignedShortFractTy = {
            Stored = {
              Value = {
                Value = 93825411240320
              }
            }
          },
          UnsignedFractTy = {
            Stored = {
              Value = {
                Value = 93825411240352
              }
            }
          },
          UnsignedLongFractTy = {
            Stored = {
              Value = {
                Value = 93825411240384
              }
            }
          },
          SatShortAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240416
              }
            }
          },
          SatAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240448
              }
            }
          },
          SatLongAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240480
              }
            }
          },
          SatUnsignedShortAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240512
              }
            }
          },
          SatUnsignedAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240544
              }
            }
          },
          SatUnsignedLongAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240576
              }
            }
          },
          SatShortFractTy = {
            Stored = {
              Value = {
                Value = 93825411240608
              }
            }
          },
          SatFractTy = {
            Stored = {
              Value = {
                Value = 93825411240640
              }
            }
          },
          SatLongFractTy = {
            Stored = {
              Value = {
                Value = 93825411240672
              }
            }
          },
          SatUnsignedShortFractTy = {
            Stored = {
              Value = {
                Value = 93825411240704
              }
            }
          },
          SatUnsignedFractTy = {
            Stored = {
              Value = {
                Value = 93825411240736
              }
            }
          },
          SatUnsignedLongFractTy = {
            Stored = {
              Value = {
                Value = 93825411240768
              }
            }
          },
          HalfTy = {
            Stored = {
              Value = {
                Value = 93825411241392
              }
            }
          },
          BFloat16Ty = {
            Stored = {
              Value = {
                Value = 93825411241424
              }
            }
          },
          Float16Ty = {
            Stored = {
              Value = {
                Value = 93825411240000
              }
            }
          },
          VoidPtrTy = {
            Stored = {
              Value = {
                Value = 93825411241312
              }
            }
          },
          NullPtrTy = {
            Stored = {
              Value = {
                Value = 93825411241360
              }
            }
          },
          DependentTy = {
            Stored = {
              Value = {
                Value = 93825411240992
              }
            }
          },
          OverloadTy = {
            Stored = {
              Value = {
                Value = 93825411241024
              }
            }
          },
          BoundMemberTy = {
            Stored = {
              Value = {
                Value = 93825411241056
              }
            }
          },
          UnknownAnyTy = {
            Stored = {
              Value = {
                Value = 93825411241120
              }
            }
          },
          BuiltinFnTy = {
            Stored = {
              Value = {
                Value = 93825411241184
              }
            }
          },
          PseudoObjectTy = {
            Stored = {
              Value = {
                Value = 93825411241088
              }
            }
          },
          ARCUnbridgedCastTy = {
            Stored = {
              Value = {
                Value = 93825411241152
              }
            }
          },
          ObjCBuiltinIdTy = {
            Stored = {
              Value = {
                Value = 93825411241216
              }
            }
          },
          ObjCBuiltinClassTy = {
            Stored = {
              Value = {
                Value = 93825411241248
              }
            }
          },
          ObjCBuiltinSelTy = {
            Stored = {
              Value = {
                Value = 93825411241280
              }
            }
          },
          ObjCBuiltinBoolTy = {
            Stored = {
              Value = {
                Value = 93825411239520
              }
            }
          },
          OCLImage1dROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dArrayROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dBufferROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dDepthROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayDepthROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAAROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAAROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAADepthROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAADepthROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage3dROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dArrayWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dBufferWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dDepthWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayDepthWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAAWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAAWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAADepthWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAADepthWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage3dWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dArrayRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dBufferRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dDepthRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayDepthRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAARWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAARWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAADepthRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAADepthRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage3dRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLSamplerTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLEventTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLClkEventTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLQueueTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLReserveIDTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          IncompleteMatrixIdxTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OMPArraySectionTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OMPArrayShapingTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OMPIteratorTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCMcePayloadTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImePayloadTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCRefPayloadTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCSicPayloadTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCMceResultTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImeResultTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCRefResultTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCSicResultTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImeResultSingleRefStreamoutTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImeResultDualRefStreamoutTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImeSingleRefStreaminTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImeDualRefStreaminTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt16Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt32Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt64Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint16Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint32Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint64Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat16Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat32Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat64Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveBFloat16Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt8x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt16x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt32x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt64x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint8x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint16x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint32x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint64x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat16x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat32x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat64x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveBFloat16x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt8x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt16x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt32x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt64x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint8x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint16x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint32x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint64x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat16x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat32x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat64x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveBFloat16x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt8x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt16x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt32x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt64x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint8x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint16x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint32x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint64x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat16x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat32x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat64x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveBFloat16x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveBoolTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          VectorQuadTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          VectorPairTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8mf8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8mf4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8mf8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8mf4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16mf4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16mf4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt32mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt32m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt32m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt32m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt32m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint32mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint32m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint32m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint32m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint32m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt64m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt64m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt64m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt64m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint64m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint64m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint64m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint64m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16mf4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat32mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat32m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat32m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat32m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat32m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat64m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat64m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat64m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat64m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool16Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool32Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool64Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          AutoDeductTy = {
            Value = {
              Value = 93826271841504
            }
          },
          AutoRRefDeductTy = {
            Value = {
              Value = 93826276624832
            }
          },
          VaListTagDecl = 0x55556e4edb28,
          MSGuidTagDecl = 0x0,
          CUDADeviceVarODRUsedByHost = {
            <llvm::detail::DenseSetImpl<clang::VarDecl const*, llvm::DenseMap<clang::VarDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseSetPair<clang::VarDecl const*> >, llvm::DenseMapInfo<clang::VarDecl const*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseSetPair<clang::VarDecl const*> >, clang::VarDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseSetPair<clang::VarDecl const*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::VarDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseSetPair<clang::VarDecl const*> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          CUDAExternalDeviceDeclODRUsedByHost = {
            <llvm::detail::DenseSetImpl<clang::ValueDecl const*, llvm::DenseMap<clang::ValueDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::ValueDecl const*, void>, llvm::detail::DenseSetPair<clang::ValueDecl const*> >, llvm::DenseMapInfo<clang::ValueDecl const*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::ValueDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::ValueDecl const*, void>, llvm::detail::DenseSetPair<clang::ValueDecl const*> >, clang::ValueDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::ValueDecl const*, void>, llvm::detail::DenseSetPair<clang::ValueDecl const*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::ValueDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::ValueDecl const*, void>, llvm::detail::DenseSetPair<clang::ValueDecl const*> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          CompCategories = {
            Ctx = @0x5555a18d0ae0,
            Data = {
              <llvm::DenseMapBase<llvm::DenseMap<char, clang::ComparisonCategoryInfo, llvm::DenseMapInfo<char, void>, llvm::detail::DenseMapPair<char, clang::ComparisonCategoryInfo> >, char, clang::ComparisonCategoryInfo, llvm::DenseMapInfo<char, void>, llvm::detail::DenseMapPair<char, clang::ComparisonCategoryInfo> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<char, clang::ComparisonCategoryInfo, llvm::DenseMapInfo<char, void>, llvm::detail::DenseMapPair<char, clang::ComparisonCategoryInfo> >:
              Buckets = 0x5555a1d53550,
              NumEntries = 1,
              NumTombstones = 0,
              NumBuckets = 64
            },
            StdNS = 0x5555a1d340f8
          },
          NumImplicitDefaultConstructors = 3869,
          NumImplicitDefaultConstructorsDeclared = 148,
          NumImplicitCopyConstructors = 4175,
          NumImplicitCopyConstructorsDeclared = 404,
          NumImplicitMoveConstructors = 4055,
          NumImplicitMoveConstructorsDeclared = 295,
          NumImplicitCopyAssignmentOperators = 4194,
          NumImplicitCopyAssignmentOperatorsDeclared = 270,
          NumImplicitMoveAssignmentOperators = 4044,
          NumImplicitMoveAssignmentOperatorsDeclared = 139,
          NumImplicitDestructors = 4152,
          NumImplicitDestructorsDeclared = 425,
          Deallocations = {
            <llvm::SmallVectorImpl<std::pair<void (*)(void*), void*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<void (*)(void*), void*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<void (*)(void*), void*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a546bac0,
                    Size = 6075,
                    Capacity = 8703
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<void (*)(void*), void*>, 16>> = {
              InlineElts = "\005\300bZUU\000\000(v\227\241UU\000\000\005\300bZUU\000\000\370{\227\241UU\000\000\005\300bZUU\000\000X\177\227\241UU\000\000\005\300bZUU\000\000h\203\227\241UU\000\000\005\300bZUU\000\000x\223\227\241UU\000\000\005\300bZUU\000\000\030֙\241UU\000\000\033\272bZUU\000\000H0\232\241UU\000\000\033\272bZUU\000\000\2306\232\241UU\000\000\005\300bZUU\000\000HC\232\241UU\000\000\005\300bZUU\000\000@G\232\241UU\000\000\005\300bZUU\000\000X^\232\241UU\000\000\005\300bZUU\000\000\350k\232\241UU\000\000\005\300bZUU\000\000\210"...
            }, <No data fields>},
          LastSDM = {
            Value = 93825572835840
          },
          TraversalScope = std::vector of length 1, capacity 1 = {0x55556e4ecd98},
          VTContext = std::unique_ptr<clang::VTableContextBase> = {
            get() = 0x0
          },
          SectionInfos = {
            <llvm::StringMapImpl> = {
              TheTable = 0x0,
              NumBuckets = 0,
              NumItems = 0,
              NumTombstones = 0,
              ItemSize = 24
            }, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},
          OMPTraitInfoVector = {
            <llvm::SmallVectorImpl<std::unique_ptr<clang::OMPTraitInfo, std::default_delete<clang::OMPTraitInfo> > >> = {
              <llvm::SmallVectorTemplateBase<std::unique_ptr<clang::OMPTraitInfo, std::default_delete<clang::OMPTraitInfo> >, false>> = {
                <llvm::SmallVectorTemplateCommon<std::unique_ptr<clang::OMPTraitInfo, std::default_delete<clang::OMPTraitInfo> >, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18d5bb8,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::unique_ptr<clang::OMPTraitInfo, std::default_delete<clang::OMPTraitInfo> >, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>}
        }
        LangOpts = @0x55556152eb00: {
          <clang::LangOptionsBase> = {
            C99 = 0,
            C11 = 0,
            C17 = 0,
            C2x = 0,
            MSVCCompat = 0,
            Kernel = 0,
            MicrosoftExt = 0,
            AsmBlocks = 0,
            Borland = 0,
            CPlusPlus = 1,
            CPlusPlus11 = 1,
            CPlusPlus14 = 1,
            CPlusPlus17 = 1,
            CPlusPlus20 = 1,
            CPlusPlus2b = 0,
            ObjC = 0,
            ObjCDefaultSynthProperties = 1,
            EncodeExtendedBlockSig = 0,
            EncodeCXXClassTemplateSpec = 0,
            ObjCInferRelatedResultType = 1,
            AppExt = 0,
            Trigraphs = 0,
            LineComment = 1,
            Bool = 1,
            Half = 0,
            WChar = 1,
            Char8 = 1,
            IEEE128 = 1,
            DeclSpecKeyword = 0,
            DollarIdents = 1,
            AsmPreprocessor = 0,
            GNUMode = 1,
            GNUKeywords = 1,
            GNUCVersion = 40201,
            DisableKNRFunctions = 0,
            Digraphs = 1,
            HexFloats = 1,
            CXXOperatorNames = 1,
            AppleKext = 0,
            PascalStrings = 0,
            WritableStrings = 0,
            ConstStrings = 0,
            ConvergentFunctions = 0,
            AltiVec = 0,
            ZVector = 0,
            Exceptions = 1,
            ObjCExceptions = 0,
            CXXExceptions = 1,
            EHAsynch = 0,
            IgnoreExceptions = 0,
            ExternCNoUnwind = 0,
            TraditionalCPP = 0,
            RTTI = 1,
            RTTIData = 1,
            MSBitfields = 0,
            MSVolatile = 0,
            Freestanding = 0,
            NoBuiltin = 0,
            NoMathBuiltin = 0,
            GNUAsm = 1,
            Coroutines = 1,
            CoroAlignedAllocation = 0,
            DllExportInlines = 1,
            RelaxedTemplateTemplateArgs = 0,
            ExperimentalLibrary = 0,
            DoubleSquareBracketAttributes = 1,
            RecoveryAST = 0,
            RecoveryASTType = 0,
            ThreadsafeStatics = 1,
            POSIXThreads = 1,
            Blocks = 0,
            EmitAllDecls = 1,
            MathErrno = 1,
            HeinousExtensions = 1,
            Modules = 1,
            ModulesTS = 0,
            CPlusPlusModules = 1,
            CompilingPCH = 0,
            BuildingPCHWithObjectFile = 0,
            CacheGeneratedPCH = 0,
            PCHInstantiateTemplates = 0,
            ModulesDeclUse = 0,
            ModulesSearchAll = 0,
            ModulesStrictDeclUse = 0,
            ModulesValidateTextualHeaderIncludes = 1,
            ModulesErrorRecovery = 1,
            ImplicitModules = 0,
            ModulesLocalVisibility = 1,
            Optimize = 0,
            OptimizeSize = 0,
            Static = 0,
            PackStruct = 0,
            MaxTypeAlign = 0,
            AlignDouble = 0,
            DoubleSize = 0,
            LongDoubleSize = 0,
            PPCIEEELongDouble = 0,
            EnableAIXExtendedAltivecABI = 0,
            EnableAIXQuadwordAtomicsABI = 0,
            PICLevel = 2,
            PIE = 1,
            ROPI = 0,
            RWPI = 0,
            GNUInline = 0,
            NoInlineDefine = 1,
            Deprecated = 1,
            FastMath = 0,
            FiniteMathOnly = 0,
            UnsafeFPMath = 0,
            ProtectParens = 0,
            AllowFPReassoc = 0,
            NoHonorNaNs = 0,
            NoHonorInfs = 0,
            NoSignedZero = 0,
            AllowRecip = 0,
            ApproxFunc = 0,
            ObjCGCBitmapPrint = 0,
            AccessControl = 1,
            CharIsSigned = 1,
            WCharSize = 0,
            WCharIsSigned = 1,
            ShortEnums = 0,
            OpenCL = 0,
            OpenCLVersion = 0,
            OpenCLCPlusPlus = 0,
            OpenCLCPlusPlusVersion = 0,
            OpenCLGenericAddressSpace = 0,
            OpenCLPipes = 0,
            NativeHalfType = 0,
            NativeHalfArgsAndReturns = 0,
            CUDA = 0,
            HIP = 0,
            OpenMP = 0,
            OpenMPExtensions = 1,
            OpenMPSimd = 0,
            OpenMPUseTLS = 0,
            OpenMPIsDevice = 0,
            OpenMPCUDAMode = 0,
            OpenMPIRBuilder = 0,
            OpenMPCUDANumSMs = 0,
            OpenMPCUDABlocksPerSM = 0,
            OpenMPCUDAReductionBufNum = 1024,
            OpenMPTargetDebug = 0,
            OpenMPOptimisticCollapse = 0,
            OpenMPThreadSubscription = 0,
            OpenMPTeamSubscription = 0,
            OpenMPNoThreadState = 0,
            OpenMPNoNestedParallelism = 0,
            OpenMPOffloadMandatory = 0,
            NoGPULib = 0,
            RenderScript = 0,
            HLSL = 0,
            CUDAIsDevice = 0,
            CUDAAllowVariadicFunctions = 0,
            CUDAHostDeviceConstexpr = 1,
            CUDADeviceApproxTranscendentals = 0,
            GPURelocatableDeviceCode = 0,
            GPUAllowDeviceInit = 0,
            GPUMaxThreadsPerBlock = 1024,
            GPUDeferDiag = 0,
            GPUExcludeWrongSideOverloads = 0,
            OffloadingNewDriver = 0,
            SYCLIsDevice = 0,
            SYCLIsHost = 0,
            HIPUseNewLaunchAPI = 0,
            SizedDeallocation = 0,
            AlignedAllocation = 1,
            AlignedAllocationUnavailable = 0,
            NewAlignOverride = 0,
            ModulesCodegen = 0,
            ModulesDebugInfo = 0,
            ElideConstructors = 1,
            DumpRecordLayouts = 0,
            DumpRecordLayoutsSimple = 0,
            DumpRecordLayoutsCanonical = 0,
            DumpRecordLayoutsComplete = 0,
            DumpVTableLayouts = 0,
            NoConstantCFStrings = 0,
            InlineVisibilityHidden = 0,
            IgnoreXCOFFVisibility = 0,
            VisibilityInlinesHiddenStaticLocalVar = 0,
            GlobalAllocationFunctionVisibilityHidden = 0,
            NewInfallible = 0,
            ParseUnknownAnytype = 0,
            DebuggerSupport = 1,
            DebuggerCastResultToId = 0,
            DebuggerObjCLiteral = 0,
            SpellChecking = 0,
            SinglePrecisionConstants = 0,
            FastRelaxedMath = 0,
            CLNoSignedZero = 0,
            CLUnsafeMath = 0,
            CLFiniteMathOnly = 0,
            UnknownAttrAnnotate = 1,
            ExpStrictFP = 0,
            RoundingMath = 0,
            NoBitFieldTypeAlign = 0,
            HexagonQdsp6Compat = 0,
            ObjCAutoRefCount = 0,
            ObjCWeakRuntime = 0,
            ObjCWeak = 0,
            ObjCSubscriptingLegacyRuntime = 0,
            CompatibilityQualifiedIdBlockParamTypeChecking = 0,
            ObjCDisableDirectMethodsForTesting = 0,
            CFProtectionBranch = 0,
            FakeAddressSpaceMap = 0,
            IncludeDefaultHeader = 0,
            DeclareOpenCLBuiltins = 0,
            DelayedTemplateParsing = 0,
            BlocksRuntimeOptional = 0,
            CompleteMemberPointers = 0,
            SetVisibilityForExternDecls = 0,
            VisibilityFromDLLStorageClass = 0,
            SemanticInterposition = 0,
            HalfNoSemanticInterposition = 0,
            TrivialAutoVarInitStopAfter = 0,
            ArrowDepth = 256,
            InstantiationDepth = 1024,
            ConstexprCallDepth = 512,
            ConstexprStepLimit = 1048576,
            EnableNewConstInterp = 0,
            BracketDepth = 256,
            NumLargeByValueCopy = 0,
            MSCompatibilityVersion = 0,
            ApplePragmaPack = 0,
            XLPragmaPack = 0,
            RetainCommentsFromSystemHeaders = 0,
            SanitizeAddressFieldPadding = 0,
            Cmse = 0,
            XRayInstrument = 0,
            XRayAlwaysEmitCustomEvents = 0,
            XRayAlwaysEmitTypedEvents = 0,
            ForceEmitVTables = 1,
            AllowEditorPlaceholders = 0,
            FunctionAlignment = 0,
            LoopAlignment = 0,
            FixedPoint = 0,
            PaddingOnUnsignedFixedPoint = 0,
            RegisterStaticDestructors = 1,
            MatrixTypes = 0,
            MaxTokens = 0,
            BranchTargetEnforcement = 0,
            SpeculativeLoadHardening = 0,
            RelativeCXXABIVTables = 0,
            VScaleMin = 0,
            VScaleMax = 0,
            FuchsiaAPILevel = 0,
            MaxBitIntWidth = 0,
            IncrementalExtensions = 0,
            LaxVectorConversions = 2,
            AltivecSrcCompat = 0,
            ExceptionHandling = 0,
            CompilingModule = 0,
            MSPointerToMemberRepresentationMethod = 0,
            DefaultCallingConv = 0,
            HLSLVersion = 0,
            SYCLVersion = 0,
            DefaultVisibilityExportMapping = 0,
            DefaultFPContractMode = 1,
            FPExceptionMode = 3,
            FPEvalMethod = 3,
            Float16ExcessPrecision = 0,
            AddressSpaceMapMangling = 0,
            GC = 0,
            ValueVisibilityMode = 2,
            TypeVisibilityMode = 2,
            DLLExportVisibility = 2,
            NoDLLStorageClassVisibility = 0,
            ExternDeclDLLImportVisibility = 2,
            ExternDeclNoDLLStorageClassVisibility = 0,
            StackProtector = 1,
            TrivialAutoVarInit = 0,
            SignedOverflowBehavior = 0,
            ThreadModel = 0,
            VtorDispMode = 1,
            ClangABICompat = 9,
            StrictFlexArraysLevel = 0,
            SignReturnAddressScope = 0,
            SignReturnAddressKey = 0,
            ExtendIntArgs = 0
          }, 
          members of clang::LangOptions:
          LangStd = clang::LangStandard::lang_cxx20,
          Sanitize = {
            Mask = {
              maskLoToHigh = {0, 0}
            }
          },
          SanitizeCoverage = false,
          NoSanitizeFiles = std::vector of length 0, capacity 0,
          XRayAlwaysInstrumentFiles = std::vector of length 0, capacity 0,
          XRayNeverInstrumentFiles = std::vector of length 0, capacity 0,
          XRayAttrListFiles = std::vector of length 0, capacity 0,
          ProfileListFiles = std::vector of length 0, capacity 0,
          ObjCRuntime = {
            TheKind = clang::ObjCRuntime::MacOSX,
            Version = {
              Major = 0,
              Minor = 0,
              HasMinor = 0,
              Subminor = 0,
              HasSubminor = 0,
              Build = 0,
              HasBuild = 0
            }
          },
          CFRuntime = clang::LangOptions::CoreFoundationABI::ObjectiveC,
          ObjCConstantStringClass = "",
          OverflowHandler = "",
          ModuleName = "",
          CurrentModule = "",
          ModuleFeatures = std::vector of length 0, capacity 0,
          CommentOpts = {
            BlockCommandNames = std::vector of length 0, capacity 0,
            ParseAllComments = false
          },
          NoBuiltinFuncs = std::vector of length 0, capacity 0,
          MacroPrefixMap = std::map with 0 elements,
          OMPTargetTriples = std::vector of length 0, capacity 0,
          OMPHostIRFile = "",
          CUID = "",
          CXXABI = std::optional<clang::TargetCXXABI::Kind> [no contained value],
          IsHeaderFile = false,
          GPUDefaultStream = clang::LangOptions::GPUDefaultStreamKind::Legacy,
          RandstructSeed = "",
          UseTargetPathSeparator = false
        }
        Name = {
          Ptr = 0
        }
        IsTypedefName = false
        IsQualifiedFunction = false
        inferNullability = std::optional<clang::NullabilityKind> [no contained value]
        inferNullabilityCS = false
        inferNullabilityInnerOnly = false
        inferNullabilityInnerOnlyComplete = false
        inAssumeNonNullRegion = false
        assumeNonNullLoc = {
          ID = 0
        }
        CAMN_No = CAMN_No
        CAMN_InnerPointers = CAMN_InnerPointers
        CAMN_Yes = CAMN_Yes
        complainAboutMissingNullability = CAMN_Yes
        NumPointersRemaining = 0
        complainAboutInferringWithinChunk = (anonymous namespace)::PointerWrappingDeclaratorKind::None
        isVaList = {
          __S = @0x5555a18ddbf0
        }
        inferPointerNullability = {
          __NumPointersRemaining = @0x7fffffff6580,
          __inferNullability = std::optional<clang::NullabilityKind> [no contained value],
          __inferNullabilityInnerOnlyComplete = @0x7fffffff656e,
          __inferNullabilityCS = @0x7fffffff656c,
          __S = @0x5555a18ddbf0,
          __state = @0x7fffffff6a20,
          __complainAboutInferringWithinChunk = @0x7fffffff6584,
          __inferNullabilityInnerOnly = @0x7fffffff656d,
          __complainAboutMissingNullability = @0x7fffffff657c
        }
        ExpectNoDerefChunk = false
        __PRETTY_FUNCTION__ = "clang::TypeSourceInfo* GetFullTypeForDeclarator({anonymous}::TypeProcessingState&, clang::QualType, clang::TypeSourceInfo*)"
        NonSlidingAttrs = {
          Range = {
            B = {
              ID = 0
            },
            E = {
              ID = 0
            }
          },
          AttrList = {
            <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff6918,
                    Size = 1,
                    Capacity = 6
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
              InlineElts = "\b\370\222\241UU\000\000\000\000\000\000\000\000\000\000xj\377\377\377\177\000\000\360ۍ\241UU\000\000\300y\377\377\377\177\000\000`i\377\377\000\000\000"
            }, <No data fields>}
        }
#3  0x0000555559ec6d41 in clang::Sema::GetTypeForDeclarator (this=0x5555a18ddbf0, D=..., S=0x55556d734890) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaType.cpp:5935
        state = {
          sema = @0x5555a18ddbf0,
          declarator = @0x7fffffff79c0,
          chunkIndex = 0,
          savedAttrs = {
            <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff6a48,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::ParsedAttr*, 2>> = {
              InlineElts = "O\303\005V\001U\000\000\200j\377\377UU\000"
            }, <No data fields>},
          ignoredTypeAttrs = {
            <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff6a68,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::ParsedAttr*, 2>> = {
              InlineElts = "\027\241%VUU\000\000\220j\377\377\377\177\000"
            }, <No data fields>},
          AttrsForTypes = {
            <llvm::SmallVectorImpl<std::pair<clang::AttributedType const*, clang::Attr const*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::AttributedType const*, clang::Attr const*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::AttributedType const*, clang::Attr const*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff6a88,
                    Size = 0,
                    Capacity = 8
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::AttributedType const*, clang::Attr const*>, 8>> = {
              InlineElts = "\360ۍ\241UU\000\000\260j\377\377\377\177\000\000W\367\315XUU\000\000Xk\377\377\377\177\000\0000!O\246UU\000\000Pk\377\377\377\177\000\000\265\260\343YUU\000\000\000k\377\377\377\177\000\000@k\377\377\002\000\000\000\320k\377\377\377\177\000\000\360ۍ\241UU\000\000{\"O\246UU\000\000\000\000\000\000\000\000\000\0000!O\246UU\000\000\000\230\031\373(7\261}\360k\377\377\377\177\000"
            }, <No data fields>},
          AttrsForTypesSorted = true,
          LocsForMacros = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::MacroQualifiedType const*, clang::SourceLocation, llvm::DenseMapInfo<clang::MacroQualifiedType const*, void>, llvm::detail::DenseMapPair<clang::MacroQualifiedType const*, clang::SourceLocation> >, clang::MacroQualifiedType const*, clang::SourceLocation, llvm::DenseMapInfo<clang::MacroQualifiedType const*, void>, llvm::detail::DenseMapPair<clang::MacroQualifiedType const*, clang::SourceLocation> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::MacroQualifiedType const*, clang::SourceLocation, llvm::DenseMapInfo<clang::MacroQualifiedType const*, void>, llvm::detail::DenseMapPair<clang::MacroQualifiedType const*, clang::SourceLocation> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          parsedNoDeref = false
        }
        ReturnTypeInfo = 0x0
        T = {
          Value = {
            Value = 93825411239424
          }
        }
#4  0x000055555909d929 in clang::Sema::HandleDeclarator (this=0x5555a18ddbf0, S=0x55556d734890, D=..., TemplateParamLists=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaDecl.cpp:6304
        NameInfo = {
          Name = {
            Ptr = 93826350785147
          },
          NameLoc = {
            ID = 46445109
          },
          LocInfo = {
            {
              NamedType = {
                TInfo = 0x0
              },
              CXXOperatorName = {
                BeginOpNameLoc = 0,
                EndOpNameLoc = 0
              },
              CXXLiteralOperatorName = {
                OpNameLoc = 0
              }
            }
          }
        }
        Name = {
          Ptr = 93826350785147
        }
        DC = 0x5555a64f20d8
        TInfo = 0x7db13728fb199800
        R = {
          Value = {
            Value = 93825053906802
          }
        }
        Previous = {
          ResultKind = 4294929536,
          Ambiguity = 32767,
          Decls = {
            <clang::UnresolvedSetImpl> = {<No data fields>}, 
            members of clang::UnresolvedSet<8>:
            Decls = {
              <llvm::SmallVectorImpl<clang::DeclAccessPair>> = {
                <llvm::SmallVectorTemplateBase<clang::DeclAccessPair, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::DeclAccessPair, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff6c80,
                      Size = 4294929552,
                      Capacity = 32767
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::DeclAccessPair, 8>> = {
                InlineElts = "\233\031\021VUU\000\000\220l\377\377\377\177\000\000\320l\377\377\377\177\000\000\330 O\246UU\000\000\000\230\031\373(7\261}\260l\377\377\377\177\000\000]\272\017VUU\000\0000w\377\377\377\177\000"
              }, <No data fields>}
          },
          Paths = 0x7fffffff6cd0,
          NamingClass = 0x7fffffff6ce0,
          BaseObjectType = {
            Value = {
              Value = 93826350784728
            }
          },
          SemaPtr = 0x7fffffff6ce0,
          NameInfo = {
            Name = {
              Ptr = 93825004453076
            },
            NameLoc = {
              ID = 2790203608
            },
            LocInfo = {
              {
                NamedType = {
                  TInfo = 0x5555a64f20d8
                },
                CXXOperatorName = {
                  BeginOpNameLoc = 2790203608,
                  EndOpNameLoc = 21845
                },
                CXXLiteralOperatorName = {
                  OpNameLoc = 2790203608
                }
              }
            }
          },
          NameContextRange = {
            B = {
              ID = 4294929664
            },
            E = {
              ID = 32767
            }
          },
          LookupKind = 1443777330,
          IDNS = 21845,
          Redecl = false,
          ExternalRedecl = false,
          HideTags = false,
          Diagnose = false,
          AllowHidden = true,
          Shadowed = false,
          TemplateNameLookup = false
        }
        New = 0x0
        AddToScope = 240
#5  0x00005555591ed58d in clang::Sema::ActOnCXXMemberDeclarator (this=0x5555a18ddbf0, S=0x55556d734890, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaDeclCXX.cpp:3510
        NonTemplateMember = 0x0
        DS = @0x7fffffff7700: {
          StorageClassSpec = 0,
          ThreadStorageClassSpec = 0,
          SCS_extern_in_linkage_spec = 0,
          TypeSpecWidth = 0,
          TypeSpecComplex = 0,
          TypeSpecSign = 0,
          TypeSpecType = 0,
          TypeAltiVecVector = 0,
          TypeAltiVecPixel = 0,
          TypeAltiVecBool = 0,
          TypeSpecOwned = 0,
          TypeSpecPipe = 0,
          TypeSpecSat = 0,
          ConstrainedAuto = 0,
          TypeQualifiers = 0,
          FS_inline_specified = 0,
          FS_forceinline_specified = 0,
          FS_virtual_specified = 0,
          FS_noreturn_specified = 0,
          Friend_specified = 0,
          ConstexprSpecifier = 0,
          {
            TypeRep = {
              Ptr = 0x7fffffff7950
            },
            DeclRep = 0x7fffffff7950,
            ExprRep = 0x7fffffff7950,
            TemplateIdRep = 0x7fffffff7950
          },
          FS_explicit_specifier = {
            ExplicitSpec = {
              Value = 1
            }
          },
          Attrs = {
            <clang::ParsedAttributesView> = {
              Range = {
                B = {
                  ID = 0
                },
                E = {
                  ID = 0
                }
              },
              AttrList = {
                <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                  <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x7fffffff7730,
                        Size = 0,
                        Capacity = 6
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                  InlineElts = "\001\000\000\000\000\000\000\000\350\022\226\241UU\000\000\000\316NnUU\000\000Py\377\377\377\177\000\000\000\000\000\000\377\177\000\000\215\367PVUU\000"
                }, <No data fields>}
            }, 
            members of clang::ParsedAttributes:
            pool = {
              Factory = @0x55559f6c2238,
              Attrs = {
                <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                  <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x7fffffff7778,
                        Size = 0,
                        Capacity = 6
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                  InlineElts = "\000\230\031\373(7\261}@x\377\377\377\177\000\000\203U\237ZUU\000\000\001\000\000\000\000\000\000\000\214\031\364[UU\000\000\320{\377\377\377\177\000"
                }, <No data fields>}
            }
          },
          TypeScope = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            Builder = {
              Representation = 0x0,
              Buffer = 0x0,
              BufferSize = 0,
              BufferCapacity = 0
            }
          },
          Range = {
            B = {
              ID = 46445100
            },
            E = {
              ID = 46445100
            }
          },
          StorageClassSpecLoc = {
            ID = 0
          },
          ThreadStorageClassSpecLoc = {
            ID = 0
          },
          TSWRange = {
            B = {
              ID = 0
            },
            E = {
              ID = 0
            }
          },
          TSCLoc = {
            ID = 0
          },
          TSSLoc = {
            ID = 0
          },
          TSTLoc = {
            ID = 0
          },
          AltiVecLoc = {
            ID = 0
          },
          TSSatLoc = {
            ID = 0
          },
          TSTNameLoc = {
            ID = 0
          },
          TypeofParensRange = {
            B = {
              ID = 0
            },
            E = {
              ID = 0
            }
          },
          TQ_constLoc = {
            ID = 0
          },
          TQ_restrictLoc = {
            ID = 0
          },
          TQ_volatileLoc = {
            ID = 0
          },
          TQ_atomicLoc = {
            ID = 0
          },
          TQ_unalignedLoc = {
            ID = 0
          },
          FS_inlineLoc = {
            ID = 0
          },
          FS_virtualLoc = {
            ID = 0
          },
          FS_explicitLoc = {
            ID = 46445100
          },
          FS_noreturnLoc = {
            ID = 0
          },
          FS_explicitCloseParenLoc = {
            ID = 0
          },
          FS_forceinlineLoc = {
            ID = 0
          },
          FriendLoc = {
            ID = 0
          },
          ModulePrivateLoc = {
            ID = 0
          },
          ConstexprLoc = {
            ID = 0
          },
          TQ_pipeLoc = {
            ID = 0
          },
          writtenBS = {
            Type = 0,
            Sign = 0,
            Width = 0,
            ModeAttr = 0
          },
          ObjCQualifiers = 0x0
        }
        NameInfo = {
          Name = {
            Ptr = 93826350785147
          },
          NameLoc = {
            ID = 46445109
          },
          LocInfo = {
            {
              NamedType = {
                TInfo = 0x0
              },
              CXXOperatorName = {
                BeginOpNameLoc = 0,
                EndOpNameLoc = 0
              },
              CXXLiteralOperatorName = {
                OpNameLoc = 0
              }
            }
          }
        }
        Name = {
          Ptr = 93826350785147
        }
        Loc = {
          ID = 46445109
        }
        BitWidth = 0x0
        __PRETTY_FUNCTION__ = "clang::NamedDecl* clang::Sema::ActOnCXXMemberDeclarator(clang::Scope*, clang::AccessSpecifier, clang::Declarator&, clang::MultiTemplateParamsArg, clang::Expr*, const clang::VirtSpecifiers&, clang::InC"...
        isFunc = true
        MSPropertyAttr = 0x0
        isInstField = false
        Member = 0x55559f6c1e60
#6  0x00005555589d2f3c in clang::Parser::ParseCXXInlineMethodDef (this=0x55559f6c1e60, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseCXXInlineMethods.cpp:42
        __PRETTY_FUNCTION__ = "clang::NamedDecl* clang::Parser::ParseCXXInlineMethodDef(clang::AccessSpecifier, const clang::ParsedAttributesView&, clang::ParsingDeclarator&, const ParsedTemplateInfo&, const clang::VirtSpecifiers&,"...
        TemplateParams = {
          <llvm::ArrayRef<clang::TemplateParameterList*>> = {
            Data = 0x0,
            Length = 0
          }, <No data fields>}
        FnD = 0x55559f6c28c8
        LM = 0x5555616272d8
        Toks = @0x5555616272d0: {
          <llvm::SmallVectorImpl<clang::Token>> = {
            <llvm::SmallVectorTemplateBase<clang::Token, true>> = {
              <llvm::SmallVectorTemplateCommon<clang::Token, void>> = {
                <llvm::SmallVectorBase<unsigned int>> = {
                  BeginX = 0x55556701ebe0,
                  Size = 1650044624,
                  Capacity = 21845
                }, <No data fields>}, 
            }, <No data fields>}, 
          <llvm::SmallVectorStorage<clang::Token, 4>> = {
            InlineElts = "`ǯaUU\000\000 \000\000\000\000\000\000\000\347M64PU\000\000\000\234aaUU\000\000\320\300caUU\000\000\241\001\000\000\000\000\000\000\000IebUU\000\000\320\324\320gUU\000\000\320\320caUU\000\000a\000\000\000\000\000\000\000\220k\274\227UU\000\000pR\366kUU\000"
          }, <No data fields>}
        kind = 22685
#7  0x0000555558a18a29 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x55559f6c1e60, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:2956
        FunDecl = 0x5555a64f22b8
        DefinitionKind = clang::FunctionDefinitionKind::Definition
        X = {
          P = @0x55559f6c1e60,
          OldVal = true
        }
        MalformedTypeSpec = false
        __PRETTY_FUNCTION__ = "clang::Parser::DeclGroupPtrTy clang::Parser::ParseCXXClassMemberDeclaration(clang::AccessSpecifier, clang::ParsedAttributes&, const ParsedTemplateInfo&, clang::ParsingDeclRAIIObject*)"
        DeclAttrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 46445053
              },
              E = {
                ID = 46445098
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff7318,
                      Size = 1,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\b\370\222\241UU\000\000\224s\377\377\377\177\000\000\200v\377\377\377\177\000\000\200s\377\377\377\177\000\000\200v\377\377\377\177\000\000\220s\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff7360,
                      Size = 1,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\b\370\222\241UU\000\000\200v\377\377\377\177\000\000\004\000\000\000\000\000\000\000\200v\377\377\377\177\000\000\006\000\000\000\000\000\000\000\200v\377\377\377\177\000"
              }, <No data fields>}
          }
        }
        DeclSpecAttrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff73a8,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\250\264\374[UU\000\000\006\000\000\000\000\000\000\000\200v\377\377\377\177\000\000\000t\377\377\377\177\000\000=\214eVUU\000\000\003\000\000\000\000\000\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff73f0,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\200v\377\377\377\177\000\000\001\000\000\000\000\000\000\000 t\377\377\377\177\000\000\344v\262VUU\000\000\200v\377\377\000\000\000\000\200v\377\377\377\177\000"
              }, <No data fields>}
          }
        }
        CommonLateParsedAttrs = {
          <llvm::SmallVector<clang::Parser::LateParsedAttribute*, 2>> = {
            <llvm::SmallVectorImpl<clang::Parser::LateParsedAttribute*>> = {
              <llvm::SmallVectorTemplateBase<clang::Parser::LateParsedAttribute*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Parser::LateParsedAttribute*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff7220,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Parser::LateParsedAttribute*, 2>> = {
              InlineElts = "\005\000\000\000\377\177\000\000\000\000\000\000\000\000\000"
            }, <No data fields>}, 
          members of clang::Parser::LateParsedAttrList:
          ParseSoon = false
        }
        DS = {
          <clang::DeclSpec> = {
            StorageClassSpec = 0,
            ThreadStorageClassSpec = 0,
            SCS_extern_in_linkage_spec = 0,
            TypeSpecWidth = 0,
            TypeSpecComplex = 0,
            TypeSpecSign = 0,
            TypeSpecType = 0,
            TypeAltiVecVector = 0,
            TypeAltiVecPixel = 0,
            TypeAltiVecBool = 0,
            TypeSpecOwned = 0,
            TypeSpecPipe = 0,
            TypeSpecSat = 0,
            ConstrainedAuto = 0,
            TypeQualifiers = 0,
            FS_inline_specified = 0,
            FS_forceinline_specified = 0,
            FS_virtual_specified = 0,
            FS_noreturn_specified = 0,
            Friend_specified = 0,
            ConstexprSpecifier = 0,
            {
              TypeRep = {
                Ptr = 0x7fffffff7950
              },
              DeclRep = 0x7fffffff7950,
              ExprRep = 0x7fffffff7950,
              TemplateIdRep = 0x7fffffff7950
            },
            FS_explicit_specifier = {
              ExplicitSpec = {
                Value = 1
              }
            },
            Attrs = {
              <clang::ParsedAttributesView> = {
                Range = {
                  B = {
                    ID = 0
                  },
                  E = {
                    ID = 0
                  }
                },
                AttrList = {
                  <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                    <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x7fffffff7730,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                    InlineElts = "\001\000\000\000\000\000\000\000\350\022\226\241UU\000\000\000\316NnUU\000\000Py\377\377\377\177\000\000\000\000\000\000\377\177\000\000\215\367PVUU\000"
                  }, <No data fields>}
              }, 
              members of clang::ParsedAttributes:
              pool = {
                Factory = @0x55559f6c2238,
                Attrs = {
                  <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                    <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x7fffffff7778,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                    InlineElts = "\000\230\031\373(7\261}@x\377\377\377\177\000\000\203U\237ZUU\000\000\001\000\000\000\000\000\000\000\214\031\364[UU\000\000\320{\377\377\377\177\000"
                  }, <No data fields>}
              }
            },
            TypeScope = {
              Range = {
                B = {
                  ID = 0
                },
                E = {
                  ID = 0
                }
              },
              Builder = {
                Representation = 0x0,
                Buffer = 0x0,
                BufferSize = 0,
                BufferCapacity = 0
              }
            },
            Range = {
              B = {
                ID = 46445100
              },
              E = {
                ID = 46445100
              }
            },
            StorageClassSpecLoc = {
              ID = 0
            },
            ThreadStorageClassSpecLoc = {
              ID = 0
            },
            TSWRange = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            TSCLoc = {
              ID = 0
            },
            TSSLoc = {
              ID = 0
            },
            TSTLoc = {
              ID = 0
            },
            AltiVecLoc = {
              ID = 0
            },
            TSSatLoc = {
              ID = 0
            },
            TSTNameLoc = {
              ID = 0
            },
            TypeofParensRange = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            TQ_constLoc = {
              ID = 0
            },
            TQ_restrictLoc = {
              ID = 0
            },
            TQ_volatileLoc = {
              ID = 0
            },
            TQ_atomicLoc = {
              ID = 0
            },
            TQ_unalignedLoc = {
              ID = 0
            },
            FS_inlineLoc = {
              ID = 0
            },
            FS_virtualLoc = {
              ID = 0
            },
            FS_explicitLoc = {
              ID = 46445100
            },
            FS_noreturnLoc = {
              ID = 0
            },
            FS_explicitCloseParenLoc = {
              ID = 0
            },
            FS_forceinlineLoc = {
              ID = 0
            },
            FriendLoc = {
              ID = 0
            },
            ModulePrivateLoc = {
              ID = 0
            },
            ConstexprLoc = {
              ID = 0
            },
            TQ_pipeLoc = {
              ID = 0
            },
            writtenBS = {
              Type = 0,
              Sign = 0,
              Width = 0,
              ModeAttr = 0
            },
            ObjCQualifiers = 0x0
          }, 
          members of clang::ParsingDeclSpec:
          ParsingRAII = {
            Actions = @0x5555a18ddbf0,
            DiagnosticPool = {
              Parent = 0x0,
              Diagnostics = {
                <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                  <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x7fffffff7868,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                  InlineElts = "\257\201\022VUU\000\000\260x\377\377\377\177\000\000\240x\377\377\377\177\000\000\260x\377\377\377\177\000\000\300\315NnUU\000\000\260x\377\377\377\177\000\000\213\220\022VUU\000\000H\256N\246UU\000\000\300\315NnV\000\000\000\320x\377\377\377\177\000\000G2\023VUU\000\000\340x\377\377\377\177\000\000\300\315NnUU\000\000\360x\377\377\377\177\000\000}\302\022VUU\000\000\000y\377\377\377\177\000\000\300\315Nn", '\000' <repeats 12 times>, "@y\377\377\377\177\000\0000y\377\377\377\177\000\000\000\000\000\000\000\000\000\0000y\377\377\377\177\000\000)(zXUU\000\000@y\377\377\377\177\000\000\000+\250\243UU\000\000"...
                }, <No data fields>}
            },
            State = {
              SavedPool = 0x0
            },
            Popped = false
          }
        }
        IsTemplateSpecOrInst = false
        diagsFromTag = {
          S = @0x5555a18ddbf0,
          DiagnosticPool = {
            Parent = 0x0,
            Diagnostics = {
              <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff7440,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                InlineElts = "`t\377\377\377\177\000\000hZ\023VUU\000\000(\370N\246UU\000\000 u\377\377\377\177\000\000\200t\377\377\377\177\000\0000u\377\377\377\177\000\000\220t\377\377\377\177\000\000hZ\023VUU\000\000(\370N\246UU\000\0000u\377\377\377\177\000\000\260t\377\377\377\177\000\000\204Z\023VUU\000\000\300t\377\377\377\177\000\0000u\377\377\377\177\000\000\320t\377\377\377\177\000\000(\370N\246UU\000\000\340t\377\377\377\177\000\000\037a\023VUU\000\000\360t\377\377\377\177\000\000(\370N\246UU\000\000\000u\377\377\377\177\000\000\361[\023VUU\000\000\000\000\000\000\000\000\000\000(\370N\246UU\000\000 u\377\377\377\177\000\000"...
              }, <No data fields>}
          },
          State = {
            SavedPool = 0x7fffffff75a0
          },
          Active = false
        }
        TemplateParams = {
          <llvm::ArrayRef<clang::TemplateParameterList*>> = {
            Data = 0x0,
            Length = 0
          }, <No data fields>}
        DeclaratorInfo = {
          <clang::Declarator> = {
            DS = @0x7fffffff7700,
            SS = {
              Range = {
                B = {
                  ID = 0
                },
                E = {
                  ID = 0
                }
              },
              Builder = {
                Representation = 0x0,
                Buffer = 0x0,
                BufferSize = 0,
                BufferCapacity = 0
              }
            },
            Name = {
              Kind = clang::UnqualifiedIdKind::IK_ConstructorName,
              {
                Identifier = 0x5555a64f2130,
                OperatorFunctionId = {
                  Operator = 2790203696,
                  SymbolLocations = {{
                      ID = 21845
                    }, {
                      ID = 1444098631
                    }, {
                      ID = 21845
                    }}
                },
                ConversionFunctionId = {
                  Ptr = 0x5555a64f2130
                },
                ConstructorName = {
                  Ptr = 0x5555a64f2130
                },
                DestructorName = {
                  Ptr = 0x5555a64f2130
                },
                TemplateName = {
                  Ptr = 0x5555a64f2130
                },
                TemplateId = 0x5555a64f2130
              },
              StartLocation = {
                ID = 46445109
              },
              EndLocation = {
                ID = 46445109
              }
            },
            Range = {
              B = {
                ID = 46445100
              },
              E = {
                ID = 46445147
              }
            },
            Context = clang::DeclaratorContext::Member,
            BindingGroup = {
              LSquareLoc = {
                ID = 0
              },
              RSquareLoc = {
                ID = 0
              },
              Bindings = 0x0,
              NumBindings = 0,
              DeleteBindings = 0
            },
            DeclTypeInfo = {
              <llvm::SmallVectorImpl<clang::DeclaratorChunk>> = {
                <llvm::SmallVectorTemplateBase<clang::DeclaratorChunk, false>> = {
                  <llvm::SmallVectorTemplateCommon<clang::DeclaratorChunk, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff7a40,
                      Size = 1,
                      Capacity = 8
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::DeclaratorChunk, 8>> = {
                InlineElts = "\003\000\000\000E\262\304\002[\262\304\002", '\000' <repeats 12 times>, "hz\377\377\377\177\000\000\000\000\000\000\006\000\000\000\000+\250\243UU\000\000\220z\377\377\377\177\000\000\232E\266XUU\000\000@\201\245\241UU\000\000 {\377\377\377\177\000\000\320z\377\377\377\177\000\000\t O\246E\262\304\002\000\000\000\000[\262\304\002\001", '\000' <repeats 23 times>, "\210\200\377\377\377\177", '\000' <repeats 38 times>, "(7\261}\300Ms\242UU\000\000\020|\377\377\377\177\000\000 {\377\377\377\177\000\000"...
              }, <No data fields>},
            InvalidType = 0,
            GroupingParens = 0,
            FunctionDefinition = 1,
            Redeclaration = 0,
            Extension = 0,
            ObjCIvar = 0,
            ObjCWeakProperty = 0,
            InlineStorageUsed = 1,
            HasInitializer = 0,
            Attrs = {
              <clang::ParsedAttributesView> = {
                Range = {
                  B = {
                    ID = 0
                  },
                  E = {
                    ID = 0
                  }
                },
                AttrList = {
                  <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                    <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x7fffffff7fe0,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                    InlineElts = "S\200\377\377\377\177\000\000X\200\377\377\377\177\000\000X\025\223\244UU\000\000\000\262UVUU\000\000\360*\250\243UU\000\000\000\230\031\373(7\261}"
                  }, <No data fields>}
              }, 
              members of clang::ParsedAttributes:
              pool = {
                Factory = @0x55559f6c2238,
                Attrs = {
                  <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                    <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x7fffffff8028,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                    InlineElts = "\350\254UVUU\000\000\260Q\366\363\377\177\000\000\017\000\000\000\000\000\000\000\260\200\377\377\377\177\000\000\3008\277\241UU\000\000\200\200\377\000\3019\000"
                  }, <No data fields>}
              }
            },
            DeclarationAttrs = @0x7fffffff7300,
            AsmLabel = 0x0,
            TrailingRequiresClause = 0x0,
            TemplateParameterLists = {
              Data = 0x0,
              Length = 0
            },
            InventedTemplateParameterList = 0x0,
            {
              InlineParams = {{
                  Ident = 0x0,
                  IdentLoc = {
                    ID = 46445147
                  },
                  Param = 0x5555a64f2448,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x0
                  }
                }, {
                  Ident = 0x5555a1bf38c0,
                  IdentLoc = {
                    ID = 0
                  },
                  Param = 0x5555a64f21c0,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff80f0
                  }
                }, {
                  Ident = 0x555556135c9b <llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> >::updatePointer(long, void*)+28>,
                  IdentLoc = {
                    ID = 0
                  },
                  Param = 0x5555a64f21c0,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7ffff3f651b0
                  }
                }, {
                  Ident = 0x0,
                  IdentLoc = {
                    ID = 4294934832
                  },
                  Param = 0x555556131c1c <llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >::setPointerAndInt(void*, int) &+54>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x5555a18d0ae2
                  }
                }, {
                  Ident = 0xffff8130,
                  IdentLoc = {
                    ID = 2790203840
                  },
                  Param = 0x7fffffff8180,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff8150
                  }
                }, {
                  Ident = 0x7fffffff81e8,
                  IdentLoc = {
                    ID = 2790203840
                  },
                  Param = 0x7fffffff81e8,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff8160
                  }
                }, {
                  Ident = 0x5555561292b5 <llvm::pointer_union_detail::PointerUnionMembers<llvm::PointerUnion<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >, 1, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>::PointerUnionMembers(llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >)+35>,
                  IdentLoc = {
                    ID = 2790203840
                  },
                  Param = 0x25a64f2098,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff8180
                  }
                }, {
                  Ident = 0x25a64f2098,
                  IdentLoc = {
                    ID = 4294934928
                  },
                  Param = 0x5555560d1cc6 <clang::CXXRecordDecl::classof(clang::Decl const*)+31>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff81a0
                  }
                }, {
                  Ident = 0x5555a64f2098,
                  IdentLoc = {
                    ID = 4294934960
                  },
                  Param = 0x55555613535b <llvm::isa_impl<clang::CXXRecordDecl, clang::TagDecl, void>::doit(clang::TagDecl const&)+24>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff81c0
                  }
                }, {
                  Ident = 0x5555a64f2098,
                  IdentLoc = {
                    ID = 4294934992
                  },
                  Param = 0x555556130b6d <llvm::isa_impl_cl<clang::CXXRecordDecl, clang::TagDecl const*>::doit(clang::TagDecl const*)+71>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff81e0
                  }
                }, {
                  Ident = 0x5555a64f2098,
                  IdentLoc = {
                    ID = 4294935024
                  },
                  Param = 0x5555561281af <llvm::isa_impl_wrap<clang::CXXRecordDecl, clang::TagDecl const*, clang::TagDecl const*>::doit(clang::TagDecl const* const&)+27>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff8210
                  }
                }, {
                  Ident = 0x7fffffff8210,
                  IdentLoc = {
                    ID = 4294935072
                  },
                  Param = 0x7fffffff82a7,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff8230
                  }
                }, {
                  Ident = 0x5555565f1e18 <std::pair<void const**, bool>::pair<void const**&, bool, true>(void const**&, bool&&)+54>,
                  IdentLoc = {
                    ID = 2790203544
                  },
                  Param = 0x7fffffff82a7,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff82a8
                  }
                }, {
                  Ident = 0x5555a64f21c1,
                  IdentLoc = {
                    ID = 4294935120
                  },
                  Param = 0x55555613591f <llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> > > >::getInt() const+27>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff82a7
                  }
                }, {
                  Ident = 0x5555a64f2220,
                  IdentLoc = {
                    ID = 4294935152
                  },
                  Param = 0x555556131807 <llvm::CastInfoPointerUnionImpl<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >::isPossible<clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >(llvm::PointerUnion<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >&)+24>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff8280
                  }
                }, {
                  Ident = 0x5555a64f2220,
                  IdentLoc = {
                    ID = 4294935184
                  },
                  Param = 0x5555561317ed <llvm::CastInfo<clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>, llvm::PointerUnion<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >, void>::isPossible(llvm::PointerUnion<llvm::PointerUnion<clang::Decl*, void const*>, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain> >&)+24>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffff82f0
                  }
                }},
              InlineBindings = {{
                  Name = 0x0,
                  NameLoc = {
                    ID = 46445147
                  }
                }, {
                  Name = 0x5555a64f2448,
                  NameLoc = {
                    ID = 0
                  }
                }, {
                  Name = 0x5555a1bf38c0,
                  NameLoc = {
                    ID = 0
                  }
                }, {
                  Name = 0x5555a64f21c0,
                  NameLoc = {
                    ID = 4294934768
                  }
                }, {
                  Name = 0x555556135c9b <llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> >::updatePointer(long, void*)+28>,
                  NameLoc = {
                    ID = 0
                  }
                }, {
                  Name = 0x5555a64f21c0,
                  NameLoc = {
                    ID = 4093006256
                  }
                }, {
                  Name = 0x0,
                  NameLoc = {
                    ID = 4294934832
                  }
                }, {
                  Name = 0x555556131c1c <llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >::setPointerAndInt(void*, int) &+54>,
                  NameLoc = {
                    ID = 2710375138
                  }
                }, {
                  Name = 0xffff8130,
                  NameLoc = {
                    ID = 2790203840
                  }
                }, {
                  Name = 0x7fffffff8180,
                  NameLoc = {
                    ID = 4294934864
                  }
                }, {
                  Name = 0x7fffffff81e8,
                  NameLoc = {
                    ID = 2790203840
                  }
                }, {
                  Name = 0x7fffffff81e8,
                  NameLoc = {
                    ID = 4294934880
                  }
                }, {
                  Name = 0x5555561292b5 <llvm::pointer_union_detail::PointerUnionMembers<llvm::PointerUnion<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >, 1, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>::PointerUnionMembers(llvm::PointerIntPair<void*, 1u, int, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*>, llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<clang::Decl*, clang::LazyGenerationalUpdatePtr<clang::Decl const*, clang::Decl*, &clang::ExternalASTSource::CompleteRedeclChain>::LazyData*> > >)+35>,
                  NameLoc = {
                    ID = 2790203840
                  }
                }, {
                  Name = 0x25a64f2098,
                  NameLoc = {
                    ID = 4294934912
                  }
                }, {
                  Name = 0x25a64f2098,
                  NameLoc = {
                    ID = 4294934928
                  }
                }, {
                  Name = 0x5555560d1cc6 <clang::CXXRecordDecl::classof(clang::Decl const*)+31>,
                  NameLoc = {
                    ID = 4294934944
                  }
                }}
            },
            CommaLoc = {
              ID = 0
            },
            EllipsisLoc = {
              ID = 0
            }
          }, 
          members of clang::ParsingDeclarator:
          ParsingRAII = {
            Actions = @0x5555a18ddbf0,
            DiagnosticPool = {
              Parent = 0x7fffffff7850,
              Diagnostics = {
                <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                  <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x7fffffff82b0,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                  InlineElts = "Ђ\377\377\377\177\000\000\315\r\022VUU\000\000\360\202\377\377\377\177\000\000 \"O\246UU\000\000\360\202\377\377\377\177\000\000\334\020\021VUU\000\000\330HsmUU\000\000 \"O\246UU\000\000 \203\377\377\377\177\000\000\347\262\017VUU\000\000P\203\377\377\377\177\000\000\330 O\246UU\000\0000\203\377\377\377\177\000\000\213\220\022VUU\000\000@\203\377\377\377\177\000\000\330 O\246%\000\000\000P\203\377\377\377\177\000\000y\031\023VUU\000\000`\203\377\377\377\177\000\000\330 O\246UU\000\000p\203\377\377\377\177\000\000\024\225\022VUU\000\000\200\203\377\377\377\177\000\000\330 O\246UU\000\000\220\203\377\377\377\177\000\000\025"...
                }, <No data fields>}
            },
            State = {
              SavedPool = 0x7fffffff7850
            },
            Popped = false
          }
        }
        VS = {
          Specifiers = 0,
          LastSpecifier = clang::VirtSpecifiers::VS_None,
          VS_overrideLoc = {
            ID = 0
          },
          VS_finalLoc = {
            ID = 0
          },
          VS_abstractLoc = {
            ID = 0
          },
          FirstLocation = {
            ID = 0
          },
          LastLocation = {
            ID = 0
          }
        }
        LateParsedAttrs = {
          <llvm::SmallVector<clang::Parser::LateParsedAttribute*, 2>> = {
            <llvm::SmallVectorImpl<clang::Parser::LateParsedAttribute*>> = {
              <llvm::SmallVectorTemplateBase<clang::Parser::LateParsedAttribute*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Parser::LateParsedAttribute*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff7250,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Parser::LateParsedAttribute*, 2>> = {
              InlineElts = "pr\377\377\377\177\000\000\000\000\000\000\000\000\000"
            }, <No data fields>}, 
          members of clang::Parser::LateParsedAttrList:
          ParseSoon = false
        }
        EqualLoc = {
          ID = 0
        }
        PureSpecLoc = {
          ID = 0
        }
        TryConsumePureSpecifier = {
          __this = 0x55559f6c1e60,
          __EqualLoc = @0x7fffffff70fc,
          __PureSpecLoc = @0x7fffffff7100
        }
        DeclsInGroup = {
          <llvm::SmallVectorImpl<clang::Decl*>> = {
            <llvm::SmallVectorTemplateBase<clang::Decl*, true>> = {
              <llvm::SmallVectorTemplateCommon<clang::Decl*, void>> = {
                <llvm::SmallVectorBase<unsigned int>> = {
                  BeginX = 0x7fffffff72c0,
                  Size = 0,
                  Capacity = 8
                }, <No data fields>}, 
            }, <No data fields>}, 
          <llvm::SmallVectorStorage<clang::Decl*, 8>> = {
            InlineElts = "\340r\377\377\377\177\000\000\263X\023VUU\000\000\360r\377\377\377\177\000\000\300\022\226\241UU\000\000\000s\377\377\377\177\000\000\230\024\023VUU\000\000@s\377\377\377\177\000\000\200v\377\377\377\177\000"
          }, <No data fields>}
        BitfieldSize = {
          PtrWithInvalid = 0
        }
        TrailingRequiresClause = {
          PtrWithInvalid = 0
        }
        ExpectSemi = true
        SAC = {
          S = @0x5555a18ddbf0,
          DiagnosticPool = {
            Parent = 0x0,
            Diagnostics = {
              <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff75b0,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                InlineElts = "\320u\377\377\377\177\000\000\230\024\023VUU\000\000\360u\377\377\377\177\000\000Py\377\377\377\177\000\000 v\377\377\377\177\000\000ìeVUU\000\000(\370N\246UU\000\000\001\000\000\000\000\000\000\000dv\377\377\377\177\000\000Py\377\377\377\177\000\0000v\377\377\377\177\000\000Py\377\377\377\177\000\000`v\377\377\377\177\000\000ìeVUU\000\000Pv\377\377\377\177\000\000\001\000\000\000\000\000\000\000\244v\377\377\377\177\000\000Py\377\377\377\177\000\000\004\000\000\000\000\000\000\000Py\377\377\377\177\000\000\006\000\000\000\000\000\000\000Py\377\377\377\177\000\000\220v\377\377\377\177\000\000Py\377\377\377\177\000\000\220v\377\377\377\177\000\000\250\264"...
              }, <No data fields>}
          },
          State = {
            SavedPool = 0x7fffffff7710
          },
          Active = false
        }
#8  0x0000555558a1ac52 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x55559f6c1e60, AS=@0x7fffffff8598: clang::AS_public, AccessAttrs=..., TagType=clang::TST_struct, TagDecl=0x5555a64f2098) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:3391
        BalancerRAIIObj = {
          P = @0x55559f6c1e60,
          ParenCount = 0,
          BracketCount = 0,
          BraceCount = 3
        }
        __PRETTY_FUNCTION__ = "clang::Parser::DeclGroupPtrTy clang::Parser::ParseCXXClassMemberDeclarationWithPragmas(clang::AccessSpecifier&, clang::ParsedAttributes&, clang::DeclSpec::TST, clang::Decl*)"
#9  0x0000555558a1baee in clang::Parser::ParseCXXMemberSpecification (this=0x55559f6c1e60, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x5555a64f2098) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:3595
        __PRETTY_FUNCTION__ = "void clang::Parser::ParseCXXMemberSpecification(clang::SourceLocation, clang::SourceLocation, clang::ParsedAttributes&, unsigned int, clang::Decl*)"
        TimeScope = {<No data fields>}
        CrashInfo = {
          <llvm::PrettyStackTraceEntry> = {
            _vptr.PrettyStackTraceEntry = 0x55556126a768 <vtable for clang::PrettyDeclStackTraceEntry+16>,
            NextEntry = 0x7fffffffa910
          }, 
          members of clang::PrettyDeclStackTraceEntry:
          Context = @0x5555a18d0ae0,
          TheDecl = 0x5555a64f2098,
          Loc = {
            ID = 46444996
          },
          Message = 0x55555d9b2040 "parsing struct/union/class body"
        }
        NonNestedClass = false
        ClassScope = {
          Self = 0x55559f6c1e60
        }
        ParsingDef = {
          P = @0x55559f6c1e60,
          Popped = false,
          State = {
            SavedPool = 0x7fffffff9b80
          }
        }
        FinalLoc = {
          ID = 0
        }
        AbstractLoc = {
          ID = 0
        }
        IsFinalSpelledSealed = false
        IsAbstract = false
        T = {
          <clang::GreaterThanIsOperatorScope> = {
            GreaterThanIsOperator = @0x55559f6c2220,
            OldGreaterThanIsOperator = true
          }, 
          members of clang::BalancedDelimiterTracker:
          P = @0x55559f6c1e60,
          Kind = clang::tok::l_brace,
          Close = clang::tok::r_brace,
          FinalToken = clang::tok::semi,
          Consumer = (clang::SourceLocation (clang::Parser::*)(clang::Parser * const)) 0x5555589cbca2 <clang::Parser::ConsumeBrace()>,
          LOpen = {
            ID = 46445019
          },
          LClose = {
            ID = 0
          }
        }
        CurAS = clang::AS_public
        AccessAttrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff8668,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\001\000\000\000\000\000\000\000\220\207\377\377\377\177\000\000\200\207\377\377\377\177\000\000\260\206\377\377\377\177\000\000\200\207\377\377\377\177\000\000\300\206\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff86b0,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = '\000' <repeats 16 times>, "\360ۍ\241UU\000\000\000+\250\243UU\000\000˱\304\002\377\177\000\000\200\207\377\377\377\177\000"
              }, <No data fields>}
          }
        }
        attrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x11600000001,
                      Size = 65793,
                      Capacity = 0
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\000\230\031\373(7\261}H\207\377\377\377\177\000\000\360ۍ\241UU", '\000' <repeats 11 times>, "+\250\243UU\000\000P\217\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x555558a14df2,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a3a82b00,
                      Size = 46445003,
                      Capacity = 0
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\200\211\377\377\377\177\000\000\002", '\000' <repeats 31 times>, "\a\210\377\377\377\177\000"
              }, <No data fields>}
          }
        }
#10 0x0000555558a1506a in clang::Parser::ParseClassSpecifier (this=0x55559f6c1e60, TagTokKind=clang::tok::kw_struct, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_private, EnteringContext=true, DSC=clang::Parser::DeclSpecContext::DSC_class, Attributes=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:2107
        TagType = clang::TST_struct
        __PRETTY_FUNCTION__ = "void clang::Parser::ParseClassSpecifier(clang::tok::TokenKind, clang::SourceLocation, clang::DeclSpec&, const ParsedTemplateInfo&, clang::AccessSpecifier, bool, DeclSpecContext, clang::ParsedAttribute"...
        shouldDelayDiagsInTag = false
        diagsFromTag = {
          S = @0x5555a18ddbf0,
          DiagnosticPool = {
            Parent = 0x0,
            Diagnostics = {
              <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff8a30,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                InlineElts = "\b\000\000\000\000\000\000\003\000+\250\243UU\000\000`\212\377\377\377\177\000\000͜\fVUU\000\000\360#\213\241\231\000\000\003\000+\250\243UU\000\000\360\212\377\377\377\177\000\000\035\301\017VUU\000\000\017\000\000\000\000\000\000\000\260\213\377\377\377\177\000\003\030\000\000\000\000\000\000\000\3308\277\241UU\000\000\260\212\377\377\377\177\000\000\003+\016VUU\000\000\000\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000\000+\250\243UU\000\000H\231\fVUU\000\000X\213\377\377\377\177\000\000\b\000\000\000\000\000\000\000\360\212\377\377\377\177\000\000\000\230\031\373(7\261}\b\000\000\000\000\000\000\000\017\000\000\000\000\000\000\0000\213\377\377\377\177\000\000r"...
              }, <No data fields>}
          },
          State = {
            SavedPool = 0x5555a3a82b00
          },
          Active = false
        }
        attrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff8998,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "͜\fVUU\000\000\360\211\377\377\377\177\000\003\340*\250\243UU\000\000@\212\377\377\377\177\000\000\035\301\017VUU\000\000\236Q\366\363\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff89e0,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\000\212\377\377\377\177\000\000\a\212\377\377\377\177\000\000 \212\377\377\377\177\000\000\363\233\fVUU\000\000\340*\250\243UU\000\003\000+\250\243UU\000"
              }, <No data fields>}
          }
        }
        AttrFixitLoc = {
          ID = 46445003
        }
        ShouldChangeAtomicToIdentifier = false
        AtomicTokenGuard = {
          AtomicII = 0x0
        }
        SS = @0x7fffffff9ad8: {
          Range = {
            B = {
              ID = 0
            },
            E = {
              ID = 0
            }
          },
          Builder = {
            Representation = 0x0,
            Buffer = 0x0,
            BufferSize = 0,
            BufferCapacity = 0
          }
        }
        TemplateParams = 0x0
        RecoverFromUndeclaredTemplateName = {
          __this = 0x55559f6c1e60,
          __TemplateInfo = @0x7fffffffa7e0,
          __TagTokKind = @0x7fffffff87f4,
          __TemplateParams = @0x7fffffff8828
        }
        Name = 0x5555a3a82b00
        NameLoc = {
          ID = 46445003
        }
        TemplateId = 0x0
        Policy = @0x5555a18d4da0: {
          Indentation = 2,
          SuppressSpecifiers = 0,
          SuppressTagKeyword = 1,
          IncludeTagDefinition = 0,
          SuppressScope = 0,
          SuppressUnwrittenScope = 0,
          SuppressInlineNamespace = 1,
          SuppressInitializers = 0,
          ConstantArraySizeAsWritten = 0,
          AnonymousTagLocations = 1,
          SuppressStrongLifetime = 0,
          SuppressLifetimeQualifiers = 0,
          SuppressTemplateArgsInCXXConstructors = 0,
          SuppressDefaultTemplateArgs = 1,
          Bool = 1,
          Nullptr = 1,
          NullptrTypeInNamespace = 1,
          Restrict = 0,
          Alignof = 1,
          UnderscoreAlignof = 0,
          UseVoidForZeroParams = 0,
          SplitTemplateClosers = 0,
          TerseOutput = 0,
          PolishForDeclaration = 0,
          Half = 0,
          MSWChar = 0,
          IncludeNewlines = 1,
          MSVCFormatting = 0,
          ConstantsAsWritten = 0,
          SuppressImplicitBase = 0,
          FullyQualifiedName = 0,
          PrintCanonicalTypes = 0,
          PrintInjectedClassNameWithArguments = 1,
          UsePreferredNames = 1,
          AlwaysIncludeTypeForTemplateArgument = 0,
          CleanUglifiedParameters = 0,
          EntireContentsOfLargeArray = 0,
          UseEnumerators = 1,
          PrintAdjustedArrayType = 1,
          PrintSubstitutedTemplateParameters = 0,
          Callbacks = 0x0
        }
        TUK = clang::Sema::TUK_Definition
        TagOrTempResult = {
          Val = 0x5555a64f2098,
          Invalid = false
        }
        TypeResult = {
          Val = {
            Ptr = 0x0
          },
          Invalid = true
        }
        Owned = true
        SkipBody = {
          ShouldSkip = false,
          CheckSameAsPrevious = false,
          Previous = 0x0,
          New = 0x0
        }
        PrevSpec = 0x0
        DiagID = 0
        Result = false
#11 0x00005555589ee713 in clang::Parser::ParseDeclarationSpecifiers (this=0x55559f6c1e60, DS=..., TemplateInfo=..., AS=clang::AS_private, DSContext=clang::Parser::DeclSpecContext::DSC_class, LateAttrs=0x7fffffff9540, AllowImplicitTypename=clang::ImplicitTypenameContext::Yes) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDecl.cpp:4220
        Kind = clang::tok::kw_struct
        Attributes = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff9208,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\250\264\374[UU\000\000\000\000\000\000\000\000\000\000\230\232\377\377\377\177\000\000\220\222\377\377\377\177\000\000\001\370\234XUU\000\000\240\222\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff9250,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = " \227\377\377\377\177\000\000\000\000\000\000\000\000\000\000 \227\377\377\377\177\000\000 \227\377\377\377\177\000\000 \227\377\377\377\177\000\000\000\230\031\373(7\261}"
              }, <No data fields>}
          }
        }
        StartLoc = {
          ID = 4294938840
        }
        EndLoc = {
          ID = 0
        }
        Type = {
          Val = {
            Ptr = 0x5555a1ef4c20
          },
          Invalid = 240
        }
        isInvalid = false
        PrevSpec = 0x0
        DiagID = 0
        ConsumedEnd = {
          ID = 0
        }
        IsTemplateSpecOrInst = false
        isStorageClass = false
        Loc = {
          ID = 46444996
        }
        handleOpenCLImageKW = {
          __this = 0x55559f6c1e60,
          __isInvalid = @0x7fffffff8fba,
          __DS = @0x7fffffff9a30,
          __Loc = @0x7fffffff8fcc,
          __PrevSpec = @0x7fffffff8fd8,
          __DiagID = @0x7fffffff8fc4,
          __Policy = @0x7fffffff9010
        }
        EnteringContext = true
        AttrsLastTime = false
        attrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff90e8,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "W\334\326[UU\000\000@\221\377\377\377\177\000\000\000\230\031\373\316\b\000\000 \221\377\377֢\304\002\000\230\031\373(7\261}p\221\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff9130,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "֢\304\002\316\b\000\000\020\272TaUU\000\000\000\000\377\377\001\000\000\000`\332TaUU\000\000$L\357\241UU\000\000\000\230\031\373(7\261}"
              }, <No data fields>}
          }
        }
        Policy = {
          Indentation = 2,
          SuppressSpecifiers = 0,
          SuppressTagKeyword = 1,
          IncludeTagDefinition = 0,
          SuppressScope = 0,
          SuppressUnwrittenScope = 0,
          SuppressInlineNamespace = 1,
          SuppressInitializers = 0,
          ConstantArraySizeAsWritten = 0,
          AnonymousTagLocations = 1,
          SuppressStrongLifetime = 0,
          SuppressLifetimeQualifiers = 0,
          SuppressTemplateArgsInCXXConstructors = 0,
          SuppressDefaultTemplateArgs = 1,
          Bool = 1,
          Nullptr = 1,
          NullptrTypeInNamespace = 1,
          Restrict = 0,
          Alignof = 1,
          UnderscoreAlignof = 0,
          UseVoidForZeroParams = 0,
          SplitTemplateClosers = 0,
          TerseOutput = 0,
          PolishForDeclaration = 0,
          Half = 0,
          MSWChar = 0,
          IncludeNewlines = 1,
          MSVCFormatting = 0,
          ConstantsAsWritten = 0,
          SuppressImplicitBase = 0,
          FullyQualifiedName = 0,
          PrintCanonicalTypes = 0,
          PrintInjectedClassNameWithArguments = 1,
          UsePreferredNames = 1,
          AlwaysIncludeTypeForTemplateArgument = 0,
          CleanUglifiedParameters = 0,
          EntireContentsOfLargeArray = 0,
          UseEnumerators = 1,
          PrintAdjustedArrayType = 1,
          PrintSubstitutedTemplateParameters = 0,
          Callbacks = 0x0
        }
        __PRETTY_FUNCTION__ = "void clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, const ParsedTemplateInfo&, clang::AccessSpecifier, DeclSpecContext, LateParsedAttrList*, clang::ImplicitTypenameContext)"
#12 0x00005555589cc6cb in clang::Parser::ParseDeclarationSpecifiers (this=0x55559f6c1e60, DS=..., TemplateInfo=..., AS=clang::AS_private, DSC=clang::Parser::DeclSpecContext::DSC_class, LateAttrs=0x7fffffff9540) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/include/clang/Parse/Parser.h:2421
No locals.
#13 0x0000555558a18209 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x55559f6c1e60, AS=clang::AS_private, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:2803
        X = {
          P = @0x55559f6c1e60,
          OldVal = false
        }
        MalformedTypeSpec = false
        __PRETTY_FUNCTION__ = "clang::Parser::DeclGroupPtrTy clang::Parser::ParseCXXClassMemberDeclaration(clang::AccessSpecifier, clang::ParsedAttributes&, const ParsedTemplateInfo&, clang::ParsingDeclRAIIObject*)"
        DeclAttrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff9648,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "(\367\222\241UU\000\000ɛ\304\002\340\233\304\002\200\230\377\377\377\177\000\000\220\226\377\377\377\177\000\000\220\230\377\377\377\177\000\000\220\226\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff9690,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "(\367\222\241UU\000\000\321\362\303XUU\000\000\260\227\377\377\377\177\000\000\200\230\377\377\377\177\000\000\340\226\377\377\377\177\000\000\000\000\000\000\000\000\000"
              }, <No data fields>}
          }
        }
        DeclSpecAttrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff96d8,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "p\230\377\377\377\177\000\000`\231\377\377\377\177\000\000\275J\375XUU\000\000ɛ\304\002\340\233\304\002p\233\377\377\377\177\000\0008zN\246UU\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff9720,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\260\227\377\377\377\177\000\000\000\000\000\000\000\000\000\000P\227\377\377\377\177\000\000\2129^ZUU\000\000\220\227\377\377\377\177\000\0008wN\246UU\000"
              }, <No data fields>}
          }
        }
        CommonLateParsedAttrs = {
          <llvm::SmallVector<clang::Parser::LateParsedAttribute*, 2>> = {
            <llvm::SmallVectorImpl<clang::Parser::LateParsedAttribute*>> = {
              <llvm::SmallVectorTemplateBase<clang::Parser::LateParsedAttribute*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Parser::LateParsedAttribute*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff9550,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Parser::LateParsedAttribute*, 2>> = {
              InlineElts = "p\225\377\377\377\177\000\000\340ә\241UU\000"
            }, <No data fields>}, 
          members of clang::Parser::LateParsedAttrList:
          ParseSoon = false
        }
        DS = {
          <clang::DeclSpec> = {
            StorageClassSpec = 0,
            ThreadStorageClassSpec = 0,
            SCS_extern_in_linkage_spec = 0,
            TypeSpecWidth = 0,
            TypeSpecComplex = 0,
            TypeSpecSign = 0,
            TypeSpecType = 0,
            TypeAltiVecVector = 0,
            TypeAltiVecPixel = 0,
            TypeAltiVecBool = 0,
            TypeSpecOwned = 0,
            TypeSpecPipe = 0,
            TypeSpecSat = 0,
            ConstrainedAuto = 0,
            TypeQualifiers = 0,
            FS_inline_specified = 0,
            FS_forceinline_specified = 0,
            FS_virtual_specified = 0,
            FS_noreturn_specified = 0,
            Friend_specified = 0,
            ConstexprSpecifier = 0,
            {
              TypeRep = {
                Ptr = 0x5555a64ef828
              },
              DeclRep = 0x5555a64ef828,
              ExprRep = 0x5555a64ef828,
              TemplateIdRep = 0x5555a64ef828
            },
            FS_explicit_specifier = {
              ExplicitSpec = {
                Value = 0
              }
            },
            Attrs = {
              <clang::ParsedAttributesView> = {
                Range = {
                  B = {
                    ID = 0
                  },
                  E = {
                    ID = 0
                  }
                },
                AttrList = {
                  <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                    <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x7fffffff9a60,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                    InlineElts = "\001\000\000\000\000\000\000\000\350\022\226\241UU\000\000\000\316NnUU\000\000\200\234\377\377\377\177\000\000\000\000\000\000\377\177\000\000\215\367PVUU\000"
                  }, <No data fields>}
              }, 
              members of clang::ParsedAttributes:
              pool = {
                Factory = @0x55559f6c2238,
                Attrs = {
                  <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                    <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x7fffffff9aa8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                    InlineElts = "\000\230\031\373(7\261}p\233\377\377\377\177\000\000\203U\237ZUU\000\000\001\000\000\000\000\000\000\000\214\031\364[UU\000\000\000\237\377\377\377\177\000"
                  }, <No data fields>}
              }
            },
            TypeScope = {
              Range = {
                B = {
                  ID = 0
                },
                E = {
                  ID = 0
                }
              },
              Builder = {
                Representation = 0x0,
                Buffer = 0x0,
                BufferSize = 0,
                BufferCapacity = 0
              }
            },
            Range = {
              B = {
                ID = 46444996
              },
              E = {
                ID = 0
              }
            },
            StorageClassSpecLoc = {
              ID = 0
            },
            ThreadStorageClassSpecLoc = {
              ID = 0
            },
            TSWRange = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            TSCLoc = {
              ID = 0
            },
            TSSLoc = {
              ID = 0
            },
            TSTLoc = {
              ID = 0
            },
            AltiVecLoc = {
              ID = 0
            },
            TSSatLoc = {
              ID = 0
            },
            TSTNameLoc = {
              ID = 0
            },
            TypeofParensRange = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            TQ_constLoc = {
              ID = 0
            },
            TQ_restrictLoc = {
              ID = 0
            },
            TQ_volatileLoc = {
              ID = 0
            },
            TQ_atomicLoc = {
              ID = 0
            },
            TQ_unalignedLoc = {
              ID = 0
            },
            FS_inlineLoc = {
              ID = 0
            },
            FS_virtualLoc = {
              ID = 0
            },
            FS_explicitLoc = {
              ID = 0
            },
            FS_noreturnLoc = {
              ID = 0
            },
            FS_explicitCloseParenLoc = {
              ID = 0
            },
            FS_forceinlineLoc = {
              ID = 0
            },
            FriendLoc = {
              ID = 0
            },
            ModulePrivateLoc = {
              ID = 0
            },
            ConstexprLoc = {
              ID = 0
            },
            TQ_pipeLoc = {
              ID = 0
            },
            writtenBS = {
              Type = 0,
              Sign = 0,
              Width = 0,
              ModeAttr = 0
            },
            ObjCQualifiers = 0x0
          }, 
          members of clang::ParsingDeclSpec:
          ParsingRAII = {
            Actions = @0x5555a18ddbf0,
            DiagnosticPool = {
              Parent = 0x0,
              Diagnostics = {
                <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                  <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x7fffffff9b98,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                  InlineElts = "\300\235\377\377\377\177\000\000%\215\232\3700Ӛn\223\221\354;C\017}}\002\000\000\000\000\000\000\000\300\235\377\377\377\177\000\000\360\233\377\377\377\177\000\000\300\235\377\377\377\177\000\000\360\233\377\377\377\177\000\000\250\264\374[UU\000\000\002\000\000\000\000\000\000\000\300\235\377\377\377\177\000\0000\234\377\377\377\177\000\000=\214eVUU\000\000 \234\377\377UU\000\000\300\235\377\377\377\177\000\000\223\221\354;C\017}}\214\031\364[UU\000\000\000\237\377\377\377\177\000\000\002\000\000\000\000\000\000\000Н\377\377\377\177\000\000p\234\377\377\377\177\000\000\240\234\377\377\377\177\000\000\217\035\364[UU\000\000\000\237\377\377\377\177\000\000\002\000\000\000\000\000\000\000\200\244"...
                }, <No data fields>}
            },
            State = {
              SavedPool = 0x0
            },
            Popped = false
          }
        }
        IsTemplateSpecOrInst = false
        diagsFromTag = {
          S = @0x5555a18ddbf0,
          DiagnosticPool = {
            Parent = 0x0,
            Diagnostics = {
              <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff9770,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                InlineElts = "\220\227\377\377\377\177\000\000\323\027wXUU\000\000\240\227\377\377\377\177\000\0008wN\246UU\000\000\300\227\377\377\377\177\000\000\3140^ZUU\000\000\260\227\377\377\377\177\000\000\000\000\000\000\003\000\000\000\340\227\377\377\377\177\000\000\260\231\377\377\377\177\000\000\340\227\377\377\377\177\000\000\335\360\357UUU\000\000\360\227\377\377\377\177\000\000\260\231\377\377\377\177\000\000\000\230\377\377\377\177\000\000\f\352\357UUU\000\000\020\230\377\377\377\177\000\000\260\231\377\377\377\177\000\000 \230\377\377\377\177\000\000\260\231\377\377\377\177\000\0000\230\377\377\377\177\000\000\335\360\357UUU\000\000P\230\377\377\377\177\000\000\260\231\377\377\377\177\000\000P\230\377\377\377\177\000\000"...
              }, <No data fields>}
          },
          State = {
            SavedPool = 0x0
          },
          Active = false
        }
        TemplateParams = {
          <llvm::ArrayRef<clang::TemplateParameterList*>> = {
            Data = 0x0,
            Length = 0
          }, <No data fields>}
        DeclaratorInfo = {
          <clang::Declarator> = {
            DS = @0x7fffffff9a30,
            SS = {
              Range = {
                B = {
                  ID = 0
                },
                E = {
                  ID = 0
                }
              },
              Builder = {
                Representation = 0x0,
                Buffer = 0x0,
                BufferSize = 0,
                BufferCapacity = 0
              }
            },
            Name = {
              Kind = clang::UnqualifiedIdKind::IK_Identifier,
              {
                Identifier = 0x0,
                OperatorFunctionId = {
                  Operator = clang::OO_None,
                  SymbolLocations = {{
                      ID = 0
                    }, {
                      ID = 0
                    }, {
                      ID = 0
                    }}
                },
                ConversionFunctionId = {
                  Ptr = 0x0
                },
                ConstructorName = {
                  Ptr = 0x0
                },
                DestructorName = {
                  Ptr = 0x0
                },
                TemplateName = {
                  Ptr = 0x0
                },
                TemplateId = 0x0
              },
              StartLocation = {
                ID = 0
              },
              EndLocation = {
                ID = 0
              }
            },
            Range = {
              B = {
                ID = 46440678
              },
              E = {
                ID = 46440685
              }
            },
            Context = clang::DeclaratorContext::Member,
            BindingGroup = {
              LSquareLoc = {
                ID = 0
              },
              RSquareLoc = {
                ID = 0
              },
              Bindings = 0x0,
              NumBindings = 0,
              DeleteBindings = 0
            },
            DeclTypeInfo = {
              <llvm::SmallVectorImpl<clang::DeclaratorChunk>> = {
                <llvm::SmallVectorTemplateBase<clang::DeclaratorChunk, false>> = {
                  <llvm::SmallVectorTemplateCommon<clang::DeclaratorChunk, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff9d70,
                      Size = 0,
                      Capacity = 8
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::DeclaratorChunk, 8>> = {
                InlineElts = "\003\000\000\000\373\240\304\002\377\240\304\002", '\000' <repeats 12 times>, "\230\235\377\377\377\177\000\000\000\000\000\000\006\000\000\000(#\250\243UU\000\000\300\235\377\377\377\177\000\000\232E\266XUU\000\000@\201\245\241UU\000\000P\236\377\377\377\177\000\000\000\236\377\377\377\177\000\000Y\200\317[\373\240\304\002\000\000\000\000\375\240\304\002", '\000' <repeats 16 times>, "\377\240\304\002\377\240\304\002", '\000' <repeats 44 times>, "\377\177\000\000\001\000\000\000\364\235\304\002\000\000\000\000\377\177\000\000\000\000\000\000\000\000\000\000"...
              }, <No data fields>},
            InvalidType = 0,
            GroupingParens = 0,
            FunctionDefinition = 1,
            Redeclaration = 0,
            Extension = 0,
            ObjCIvar = 0,
            ObjCWeakProperty = 0,
            InlineStorageUsed = 0,
            HasInitializer = 0,
            Attrs = {
              <clang::ParsedAttributesView> = {
                Range = {
                  B = {
                    ID = 0
                  },
                  E = {
                    ID = 0
                  }
                },
                AttrList = {
                  <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                    <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x7fffffffa310,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                    InlineElts = "0\243\377\377\377\177\000\000\204Z\023VUU\000\000\020\224\224\244UU\000\000\260\243\377\377\377\177\000\000P\243\377\377\377\177\000\000H\256N\246UU\000"
                  }, <No data fields>}
              }, 
              members of clang::ParsedAttributes:
              pool = {
                Factory = @0x55559f6c2238,
                Attrs = {
                  <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                    <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x7fffffffa358,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                    InlineElts = "H\256N\246UU\000\000\200\243\377\377\377\177\000\000\361[\023VUU\000\000\000\000\000\000\000\000\000\000H\256N\246UU\000\000\240\243\377\377\377\177\000"
                  }, <No data fields>}
              }
            },
            DeclarationAttrs = @0x7fffffff9630,
            AsmLabel = 0x0,
            TrailingRequiresClause = 0x0,
            TemplateParameterLists = {
              Data = 0x0,
              Length = 0
            },
            InventedTemplateParameterList = 0x0,
            {
              InlineParams = {{
                  Ident = 0x25a64eae48,
                  IdentLoc = {
                    ID = 4294943712
                  },
                  Param = 0x5555560d1cc6 <clang::CXXRecordDecl::classof(clang::Decl const*)+31>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7ffff3f64061
                  }
                }, {
                  Ident = 0x5555a64eae48,
                  IdentLoc = {
                    ID = 4294943744
                  },
                  Param = 0x555556135341 <llvm::isa_impl<clang::CXXRecordDecl, clang::RecordDecl, void>::doit(clang::RecordDecl const&)+24>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa500
                  }
                }, {
                  Ident = 0x5555a64eae48,
                  IdentLoc = {
                    ID = 4294943776
                  },
                  Param = 0x555556130b24 <llvm::isa_impl_cl<clang::CXXRecordDecl, clang::RecordDecl const*>::doit(clang::RecordDecl const*)+71>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa460
                  }
                }, {
                  Ident = 0x5555a64eae48,
                  IdentLoc = {
                    ID = 4294943808
                  },
                  Param = 0x555556128192 <llvm::isa_impl_wrap<clang::CXXRecordDecl, clang::RecordDecl const*, clang::RecordDecl const*>::doit(clang::RecordDecl const* const&)+27>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x5555a64eae48
                  }
                }, {
                  Ident = 0x7fffffffa460,
                  IdentLoc = {
                    ID = 4294943856
                  },
                  Param = 0x55555611f105 <llvm::isa_impl_wrap<clang::CXXRecordDecl, clang::RecordDecl const* const, clang::RecordDecl const*>::doit(clang::RecordDecl const* const&)+55>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa470
                  }
                }, {
                  Ident = 0x7fffffffa4b0,
                  IdentLoc = {
                    ID = 2790174280
                  },
                  Param = 0x7db13728fb199800,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa490
                  }
                }, {
                  Ident = 0xa64ec610,
                  IdentLoc = {
                    ID = 4294943904
                  },
                  Param = 0x5555560d2d43 <clang::UsingDecl::classof(clang::Decl const*)+31>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa4c0
                  }
                }, {
                  Ident = 0x5555a64ec610,
                  IdentLoc = {
                    ID = 4294943936
                  },
                  Param = 0x555556134405 <llvm::isa_impl<clang::UsingDecl, clang::Decl, void>::doit(clang::Decl const&)+24>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x5555a64eae48
                  }
                }, {
                  Ident = 0x5555a64ec610,
                  IdentLoc = {
                    ID = 4294943968
                  },
                  Param = 0x55555612eba7 <llvm::isa_impl_cl<clang::UsingDecl, clang::Decl const*>::doit(clang::Decl const*)+71>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa4f0
                  }
                }, {
                  Ident = 0x5555a64ec610,
                  IdentLoc = {
                    ID = 4294944000
                  },
                  Param = 0x5555561265c2 <llvm::isa_impl_wrap<clang::UsingDecl, clang::Decl const*, clang::Decl const*>::doit(clang::Decl const* const&)+27>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa520
                  }
                }, {
                  Ident = 0x7fffffffa520,
                  IdentLoc = {
                    ID = 4294944048
                  },
                  Param = 0x5555590449bf <llvm::isa_impl_wrap<clang::UsingDecl, clang::Decl* const, clang::Decl const*>::doit(clang::Decl* const&)+55>,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x5555a64ec610
                  }
                }, {
                  Ident = 0x7fffffffa588,
                  IdentLoc = {
                    ID = 2790180368
                  },
                  Param = 0x7db13728fb199800,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa550
                  }
                }, {
                  Ident = 0x55555903ef41 <llvm::CastIsPossible<clang::UsingDecl, clang::Decl*, void>::isPossible(clang::Decl* const&)+24>,
                  IdentLoc = {
                    ID = 4294944096
                  },
                  Param = 0x7fffffffa588,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa570
                  }
                }, {
                  Ident = 0x555559034f14 <llvm::CastInfo<clang::UsingDecl, clang::Decl*, void>::doCastIfPossible(clang::Decl* const&)+36>,
                  IdentLoc = {
                    ID = 4294944144
                  },
                  Param = 0x7fffffffa588,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa590
                  }
                }, {
                  Ident = 0x55555902f1bb <llvm::dyn_cast<clang::UsingDecl, clang::Decl>(clang::Decl*)+80>,
                  IdentLoc = {
                    ID = 2790180368
                  },
                  Param = 0x5555a64ec610,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0x7fffffffa6f0
                  }
                }, {
                  Ident = 0x55555a5f19a7 <clang::CXXRecordDecl::addedMember(clang::Decl*)+8877>,
                  IdentLoc = {
                    ID = 2790180368
                  },
                  Param = 0x5555a64eae48,
                  DefaultArgTokens = std::unique_ptr<llvm::SmallVector<clang::Token, 4>> = {
                    get() = 0xffffa5e0
                  }
                }},
              InlineBindings = {{
                  Name = 0x25a64eae48,
                  NameLoc = {
                    ID = 4294943712
                  }
                }, {
                  Name = 0x5555560d1cc6 <clang::CXXRecordDecl::classof(clang::Decl const*)+31>,
                  NameLoc = {
                    ID = 4093001825
                  }
                }, {
                  Name = 0x5555a64eae48,
                  NameLoc = {
                    ID = 4294943744
                  }
                }, {
                  Name = 0x555556135341 <llvm::isa_impl<clang::CXXRecordDecl, clang::RecordDecl, void>::doit(clang::RecordDecl const&)+24>,
                  NameLoc = {
                    ID = 4294944000
                  }
                }, {
                  Name = 0x5555a64eae48,
                  NameLoc = {
                    ID = 4294943776
                  }
                }, {
                  Name = 0x555556130b24 <llvm::isa_impl_cl<clang::CXXRecordDecl, clang::RecordDecl const*>::doit(clang::RecordDecl const*)+71>,
                  NameLoc = {
                    ID = 4294943840
                  }
                }, {
                  Name = 0x5555a64eae48,
                  NameLoc = {
                    ID = 4294943808
                  }
                }, {
                  Name = 0x555556128192 <llvm::isa_impl_wrap<clang::CXXRecordDecl, clang::RecordDecl const*, clang::RecordDecl const*>::doit(clang::RecordDecl const* const&)+27>,
                  NameLoc = {
                    ID = 2790174280
                  }
                }, {
                  Name = 0x7fffffffa460,
                  NameLoc = {
                    ID = 4294943856
                  }
                }, {
                  Name = 0x55555611f105 <llvm::isa_impl_wrap<clang::CXXRecordDecl, clang::RecordDecl const* const, clang::RecordDecl const*>::doit(clang::RecordDecl const* const&)+55>,
                  NameLoc = {
                    ID = 4294943856
                  }
                }, {
                  Name = 0x7fffffffa4b0,
                  NameLoc = {
                    ID = 2790174280
                  }
                }, {
                  Name = 0x7db13728fb199800,
                  NameLoc = {
                    ID = 4294943888
                  }
                }, {
                  Name = 0xa64ec610,
                  NameLoc = {
                    ID = 4294943904
                  }
                }, {
                  Name = 0x5555560d2d43 <clang::UsingDecl::classof(clang::Decl const*)+31>,
                  NameLoc = {
                    ID = 4294943936
                  }
                }, {
                  Name = 0x5555a64ec610,
                  NameLoc = {
                    ID = 4294943936
                  }
                }, {
                  Name = 0x555556134405 <llvm::isa_impl<clang::UsingDecl, clang::Decl, void>::doit(clang::Decl const&)+24>,
                  NameLoc = {
                    ID = 2790174280
                  }
                }}
            },
            CommaLoc = {
              ID = 0
            },
            EllipsisLoc = {
              ID = 0
            }
          }, 
          members of clang::ParsingDeclarator:
          ParsingRAII = {
            Actions = @0x5555a18ddbf0,
            DiagnosticPool = {
              Parent = 0x7fffffff9b80,
              Diagnostics = {
                <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                  <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x7fffffffa5e0,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                  InlineElts = "\000\246\377\377\377\177\000\000\000\246\377\377\377\177\000\000\020\246\377\377\377\177\000\000,ݜXUU\000\000\230\251\377\377\377\177\000\000P\246\377\377\377\177\000\0000\246\377\377\377\177\000\000\021\224\234XUU\000\000\230\251\377\377\377\177\000\000P\246\377\377\377\177\000\000\230\246\377\377\377\177\000\000\220\246\377\377\377\177\000\000`\246\377\377\377\177\000\000\207U\240XUU\000\000\230\246\377\377\377\177\000\000\220\246\377\377\377\177\000\000 \247\377\377\377\177\000\000\2558\025YUU\000\000\220\246\377\377\377\177\000\000\200\251\377\377\377\177\000\000\020\306N\246UU\000\000\360ۍ\241UU\000\000\230\251\377\377\377\177\000\000\230\251\377\377\377\177\000\000\200\251\377\377\377\177\000\000\350\246"...
                }, <No data fields>}
            },
            State = {
              SavedPool = 0x7fffffffa740
            },
            Popped = 156
          }
        }
        VS = {
          Specifiers = 0,
          LastSpecifier = clang::VirtSpecifiers::VS_None,
          VS_overrideLoc = {
            ID = 0
          },
          VS_finalLoc = {
            ID = 0
          },
          VS_abstractLoc = {
            ID = 0
          },
          FirstLocation = {
            ID = 0
          },
          LastLocation = {
            ID = 0
          }
        }
        LateParsedAttrs = {
          <llvm::SmallVector<clang::Parser::LateParsedAttribute*, 2>> = {
            <llvm::SmallVectorImpl<clang::Parser::LateParsedAttribute*>> = {
              <llvm::SmallVectorTemplateBase<clang::Parser::LateParsedAttribute*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Parser::LateParsedAttribute*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x7fffffff9580,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Parser::LateParsedAttribute*, 2>> = {
              InlineElts = "\240\225\377\377\377\177\000\000\004\000\000\000\000\000\000"
            }, <No data fields>}, 
          members of clang::Parser::LateParsedAttrList:
          ParseSoon = false
        }
        EqualLoc = {
          ID = 0
        }
        PureSpecLoc = {
          ID = 0
        }
        TryConsumePureSpecifier = {
          __this = 0x55559f6c1e60,
          __EqualLoc = @0x7fffffff942c,
          __PureSpecLoc = @0x7fffffff9430
        }
        DeclsInGroup = {
          <llvm::SmallVectorImpl<clang::Decl*>> = {
            <llvm::SmallVectorTemplateBase<clang::Decl*, true>> = {
              <llvm::SmallVectorTemplateCommon<clang::Decl*, void>> = {
                <llvm::SmallVectorBase<unsigned int>> = {
                  BeginX = 0x7fffffff95f0,
                  Size = 0,
                  Capacity = 8
                }, <No data fields>}, 
            }, <No data fields>}, 
          <llvm::SmallVectorStorage<clang::Decl*, 8>> = {
            InlineElts = "\220\226\377\377\377\177\000\000\200\226\377\377\377\177\000\0000\226\377\377\377\177\000\000\025\"\245XUU\000\000\360ۍ\241UU\000\000\200\226\377\377\377\177\000\000Ж\377\377\377\177\000\000\000\000\000\000\000\000\000"
          }, <No data fields>}
        BitfieldSize = {
          PtrWithInvalid = 0
        }
        TrailingRequiresClause = {
          PtrWithInvalid = 0
        }
        ExpectSemi = true
        SAC = {
          S = @0x5555a18ddbf0,
          DiagnosticPool = {
            Parent = 0x0,
            Diagnostics = {
              <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffff98e0,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                InlineElts = "\000\231\377\377\377\177\000\000\230\024\023VUU\000\000\020\231\377\377\377\177\000\000\200\234\377\377\377\177\000\000P\231\377\377\377\177\000\000ìeVUU\000\0000\231\377\377\377\177\000\000\001\000\000\000\000\000\000\000\224\231\377\377\377\177\000\000\200\234\377\377\377\177\000\000P\231\377\377\377\177\000\000\200\234\377\377\377\177\000\000`\231\377\377\377\177\000\000`\231\377\377\377\177\000\000\020\000\000\000\003", '\000' <repeats 11 times>, "\b\246N\246UU\000\000P\250N\246UU\000\000P\252N\246UU\000\000\200\234\377\377\377\177\000\000\006\000\000\000\000\000\000\000\200\234\377\377\377\177\000\000\300\231\377\377\377\177\000\000\200\234\377\377\377\177\000\000\300\231\377\377\377\177\000\000\250"...
              }, <No data fields>}
          },
          State = {
            SavedPool = 0x7fffffff9a30
          },
          Active = false
        }
#14 0x0000555558a1ac52 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x55559f6c1e60, AS=@0x7fffffffa8c8: clang::AS_private, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x5555a64eae48) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:3391
        BalancerRAIIObj = {
          P = @0x55559f6c1e60,
          ParenCount = 0,
          BracketCount = 0,
          BraceCount = 2
        }
        __PRETTY_FUNCTION__ = "clang::Parser::DeclGroupPtrTy clang::Parser::ParseCXXClassMemberDeclarationWithPragmas(clang::AccessSpecifier&, clang::ParsedAttributes&, clang::DeclSpec::TST, clang::Decl*)"
#15 0x0000555558a1baee in clang::Parser::ParseCXXMemberSpecification (this=0x55559f6c1e60, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=26, TagDecl=0x5555a64eae48) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:3595
        __PRETTY_FUNCTION__ = "void clang::Parser::ParseCXXMemberSpecification(clang::SourceLocation, clang::SourceLocation, clang::ParsedAttributes&, unsigned int, clang::Decl*)"
        TimeScope = {<No data fields>}
        CrashInfo = {
          <llvm::PrettyStackTraceEntry> = {
            _vptr.PrettyStackTraceEntry = 0x55556126a768 <vtable for clang::PrettyDeclStackTraceEntry+16>,
            NextEntry = 0x7fffffffbf10
          }, 
          members of clang::PrettyDeclStackTraceEntry:
          Context = @0x5555a18d0ae0,
          TheDecl = 0x5555a64eae48,
          Loc = {
            ID = 46439647
          },
          Message = 0x55555d9b2040 "parsing struct/union/class body"
        }
        NonNestedClass = true
        ClassScope = {
          Self = 0x55559f6c1e60
        }
        ParsingDef = {
          P = @0x55559f6c1e60,
          Popped = false,
          State = {
            SavedPool = 0x7fffffffb980
          }
        }
        FinalLoc = {
          ID = 0
        }
        AbstractLoc = {
          ID = 0
        }
        IsFinalSpelledSealed = false
        IsAbstract = false
        T = {
          <clang::GreaterThanIsOperatorScope> = {
            GreaterThanIsOperator = @0x55559f6c2220,
            OldGreaterThanIsOperator = true
          }, 
          members of clang::BalancedDelimiterTracker:
          P = @0x55559f6c1e60,
          Kind = clang::tok::l_brace,
          Close = clang::tok::r_brace,
          FinalToken = clang::tok::semi,
          Consumer = (clang::SourceLocation (clang::Parser::*)(clang::Parser * const)) 0x5555589cbca2 <clang::Parser::ConsumeBrace()>,
          LOpen = {
            ID = 46439664
          },
          LClose = {
            ID = 0
          }
        }
        CurAS = clang::AS_private
        AccessAttrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffa998,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\001\000\000\000\000\000\000\000\300\252\377\377\377\177\000\000\260\252\377\377\377\177\000\000\340\251\377\377\377\177\000\000\260\252\377\377\377\177\000\000\360\251\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffa9e0,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = '\000' <repeats 16 times>, "\360ۍ\241UU\000\000(#\250\243UU\000\000\345\234\304\002\377\177\000\000\260\252\377\377\377\177\000"
              }, <No data fields>}
          }
        }
        attrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x11600000001,
                      Size = 65793,
                      Capacity = 0
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\000\230\031\373(7\261}x\252\377\377\377\177\000\000\360ۍ\241UU\000\000\000\000\000\000\000\000\000\000(#\250\243UU\000\000\200\262\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x555558a14df2,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a3a82328,
                      Size = 46439653,
                      Capacity = 0
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\260\254\377\377\377\177\000\000\003", '\000' <repeats 31 times>, "7\253\377\377\377\177\000"
              }, <No data fields>}
          }
        }
#16 0x0000555558a1506a in clang::Parser::ParseClassSpecifier (this=0x55559f6c1e60, TagTokKind=clang::tok::kw_class, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true, DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:2107
        TagType = clang::TST_class
        __PRETTY_FUNCTION__ = "void clang::Parser::ParseClassSpecifier(clang::tok::TokenKind, clang::SourceLocation, clang::DeclSpec&, const ParsedTemplateInfo&, clang::AccessSpecifier, bool, DeclSpecContext, clang::ParsedAttribute"...
        shouldDelayDiagsInTag = false
        diagsFromTag = {
          S = @0x5555a18ddbf0,
          DiagnosticPool = {
            Parent = 0x0,
            Diagnostics = {
              <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffad60,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                InlineElts = "\b\000\000\000\000\000\000\003##\250\243UU\000\000\220\255\377\377\377\177\000\000͜\fVUU\000\000\240\255\377\377\231\000\000\003##\250\243UU\000\000 \256\377\377\377\177\000\000\035\301\017VUU\000\000\n\000\000\000\000\000\000\000\340\256\377\377\377\177\000\003\030\000\000\000\000\000\000\000\3308\277\241UU\000\000\340\255\377\377\377\177\000\000\003+\016VUU\000\000\005\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000(#\250\243UU\000\000H\231\fVUU\000\000\210\256\377\377\377\177\000\000\b\000\000\000\000\000\000\000 \256\377\377\377\177\000\000\000\230\031\373(7\261}\b\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000`\256\377\377\377\177\000\000r"...
              }, <No data fields>}
          },
          State = {
            SavedPool = 0x5555a3a82328
          },
          Active = false
        }
        attrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffacc8,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "͜\fVUU\000\000 \255\377\377\377\177\000\003\b#\250\243UU\000\000p\255\377\377\377\177\000\000\035\301\017VUU\000\000\270<\366\363\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffad10,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "0\255\377\377\377\177\000\0007\255\377\377\377\177\000\000P\255\377\377\377\177\000\000\363\233\fVUU\000\000\b#\250\243UU\000\003##\250\243UU\000"
              }, <No data fields>}
          }
        }
        AttrFixitLoc = {
          ID = 46439653
        }
        ShouldChangeAtomicToIdentifier = false
        AtomicTokenGuard = {
          AtomicII = 0x0
        }
        SS = @0x7fffffffb8d8: {
          Range = {
            B = {
              ID = 0
            },
            E = {
              ID = 0
            }
          },
          Builder = {
            Representation = 0x0,
            Buffer = 0x0,
            BufferSize = 0,
            BufferCapacity = 0
          }
        }
        TemplateParams = 0x0
        RecoverFromUndeclaredTemplateName = {
          __this = 0x55559f6c1e60,
          __TemplateInfo = @0x7fffffffb770,
          __TagTokKind = @0x7fffffffab24,
          __TemplateParams = @0x7fffffffab58
        }
        Name = 0x5555a3a82328
        NameLoc = {
          ID = 46439653
        }
        TemplateId = 0x0
        Policy = @0x5555a18d4da0: {
          Indentation = 2,
          SuppressSpecifiers = 0,
          SuppressTagKeyword = 1,
          IncludeTagDefinition = 0,
          SuppressScope = 0,
          SuppressUnwrittenScope = 0,
          SuppressInlineNamespace = 1,
          SuppressInitializers = 0,
          ConstantArraySizeAsWritten = 0,
          AnonymousTagLocations = 1,
          SuppressStrongLifetime = 0,
          SuppressLifetimeQualifiers = 0,
          SuppressTemplateArgsInCXXConstructors = 0,
          SuppressDefaultTemplateArgs = 1,
          Bool = 1,
          Nullptr = 1,
          NullptrTypeInNamespace = 1,
          Restrict = 0,
          Alignof = 1,
          UnderscoreAlignof = 0,
          UseVoidForZeroParams = 0,
          SplitTemplateClosers = 0,
          TerseOutput = 0,
          PolishForDeclaration = 0,
          Half = 0,
          MSWChar = 0,
          IncludeNewlines = 1,
          MSVCFormatting = 0,
          ConstantsAsWritten = 0,
          SuppressImplicitBase = 0,
          FullyQualifiedName = 0,
          PrintCanonicalTypes = 0,
          PrintInjectedClassNameWithArguments = 1,
          UsePreferredNames = 1,
          AlwaysIncludeTypeForTemplateArgument = 0,
          CleanUglifiedParameters = 0,
          EntireContentsOfLargeArray = 0,
          UseEnumerators = 1,
          PrintAdjustedArrayType = 1,
          PrintSubstitutedTemplateParameters = 0,
          Callbacks = 0x0
        }
        TUK = clang::Sema::TUK_Definition
        TagOrTempResult = {
          Val = 0x5555a64eae48,
          Invalid = false
        }
        TypeResult = {
          Val = {
            Ptr = 0x0
          },
          Invalid = true
        }
        Owned = true
        SkipBody = {
          ShouldSkip = false,
          CheckSameAsPrevious = false,
          Previous = 0x0,
          New = 0x0
        }
        PrevSpec = 0x0
        DiagID = 0
        Result = false
#17 0x00005555589ee713 in clang::Parser::ParseDeclarationSpecifiers (this=0x55559f6c1e60, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0, AllowImplicitTypename=clang::ImplicitTypenameContext::Yes) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDecl.cpp:4220
        Kind = clang::tok::kw_class
        Attributes = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffb538,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\250\264\374[UU\000\000\000\000\000\000\000\000\000\000\230\270\377\377\377\177\000\000\300\265\377\377\377\177\000\000\001\370\234XUU\000\000е\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffb580,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "@\275\377\377\377\177\000\000\000\000\000\000\000\000\000\000@\275\377\377\377\177\000\000@\275\377\377\377\177\000\000@\275\377\377\377\177\000\000\000\230\031\373(7\261}"
              }, <No data fields>}
          }
        }
        StartLoc = {
          ID = 1540857273
        }
        EndLoc = {
          ID = 1632950880
        }
        Type = {
          Val = {
            Ptr = 0x7fffffffb380
          },
          Invalid = 93
        }
        isInvalid = false
        PrevSpec = 0x0
        DiagID = 0
        ConsumedEnd = {
          ID = 0
        }
        IsTemplateSpecOrInst = false
        isStorageClass = false
        Loc = {
          ID = 46439647
        }
        handleOpenCLImageKW = {
          __this = 0x55559f6c1e60,
          __isInvalid = @0x7fffffffb2ea,
          __DS = @0x7fffffffb830,
          __Loc = @0x7fffffffb2fc,
          __PrevSpec = @0x7fffffffb308,
          __DiagID = @0x7fffffffb2f4,
          __Policy = @0x7fffffffb340
        }
        EnteringContext = true
        AttrsLastTime = false
        attrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffb418,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "`\332TaUU\000\000$L\357\241UU\000\000\000\230\031\373(7\261}\260\264\377\377\377\177\000\000\260$SaUU\000\000`\264\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffb460,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\260\264\377\377\377\177\000\000\363[\fYUU\000\000\300\264\377\377\377\177\000\000\001\000\000\000\000\000\000\000\260\264\377\377\377\177\000\000\360ۍ\241UU\000"
              }, <No data fields>}
          }
        }
        Policy = {
          Indentation = 2,
          SuppressSpecifiers = 0,
          SuppressTagKeyword = 1,
          IncludeTagDefinition = 0,
          SuppressScope = 0,
          SuppressUnwrittenScope = 0,
          SuppressInlineNamespace = 1,
          SuppressInitializers = 0,
          ConstantArraySizeAsWritten = 0,
          AnonymousTagLocations = 1,
          SuppressStrongLifetime = 0,
          SuppressLifetimeQualifiers = 0,
          SuppressTemplateArgsInCXXConstructors = 0,
          SuppressDefaultTemplateArgs = 1,
          Bool = 1,
          Nullptr = 1,
          NullptrTypeInNamespace = 1,
          Restrict = 0,
          Alignof = 1,
          UnderscoreAlignof = 0,
          UseVoidForZeroParams = 0,
          SplitTemplateClosers = 0,
          TerseOutput = 0,
          PolishForDeclaration = 0,
          Half = 0,
          MSWChar = 0,
          IncludeNewlines = 1,
          MSVCFormatting = 0,
          ConstantsAsWritten = 0,
          SuppressImplicitBase = 0,
          FullyQualifiedName = 0,
          PrintCanonicalTypes = 0,
          PrintInjectedClassNameWithArguments = 1,
          UsePreferredNames = 1,
          AlwaysIncludeTypeForTemplateArgument = 0,
          CleanUglifiedParameters = 0,
          EntireContentsOfLargeArray = 0,
          UseEnumerators = 1,
          PrintAdjustedArrayType = 1,
          PrintSubstitutedTemplateParameters = 0,
          Callbacks = 0x0
        }
        __PRETTY_FUNCTION__ = "void clang::Parser::ParseDeclarationSpecifiers(clang::DeclSpec&, const ParsedTemplateInfo&, clang::AccessSpecifier, DeclSpecContext, LateParsedAttrList*, clang::ImplicitTypenameContext)"
#18 0x00005555589cc6cb in clang::Parser::ParseDeclarationSpecifiers (this=0x55559f6c1e60, DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/include/clang/Parse/Parser.h:2421
No locals.
#19 0x00005555589c11f8 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x55559f6c1e60, Attrs=..., DeclSpecAttrs=..., DS=..., AS=clang::AS_none) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/Parser.cpp:1119
        __PRETTY_FUNCTION__ = "clang::Parser::DeclGroupPtrTy clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributes&, clang::ParsedAttributes&, clang::ParsingDeclSpec&, clang::AccessSpecifier)"
#20 0x00005555589c18e6 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x55559f6c1e60, Attrs=..., DeclSpecAttrs=..., DS=0x0, AS=clang::AS_none) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/Parser.cpp:1226
        PDS = {
          <clang::DeclSpec> = {
            StorageClassSpec = 0,
            ThreadStorageClassSpec = 0,
            SCS_extern_in_linkage_spec = 0,
            TypeSpecWidth = 0,
            TypeSpecComplex = 0,
            TypeSpecSign = 0,
            TypeSpecType = 0,
            TypeAltiVecVector = 0,
            TypeAltiVecPixel = 0,
            TypeAltiVecBool = 0,
            TypeSpecOwned = 0,
            TypeSpecPipe = 0,
            TypeSpecSat = 0,
            ConstrainedAuto = 0,
            TypeQualifiers = 0,
            FS_inline_specified = 0,
            FS_forceinline_specified = 0,
            FS_virtual_specified = 0,
            FS_noreturn_specified = 0,
            Friend_specified = 0,
            ConstexprSpecifier = 0,
            {
              TypeRep = {
                Ptr = 0x5555a64ead90
              },
              DeclRep = 0x5555a64ead90,
              ExprRep = 0x5555a64ead90,
              TemplateIdRep = 0x5555a64ead90
            },
            FS_explicit_specifier = {
              ExplicitSpec = {
                Value = 0
              }
            },
            Attrs = {
              <clang::ParsedAttributesView> = {
                Range = {
                  B = {
                    ID = 0
                  },
                  E = {
                    ID = 0
                  }
                },
                AttrList = {
                  <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                    <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x7fffffffb860,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                    InlineElts = "\260\270\377\377\377\177\000\000pf\004\242UU\000\000pf\004\242UU\000\000\260\270\377\377\377\177\000\000\300\270\377\377\377\177\000\000V\222\311[UU\000"
                  }, <No data fields>}
              }, 
              members of clang::ParsedAttributes:
              pool = {
                Factory = @0x55559f6c2238,
                Attrs = {
                  <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                    <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x7fffffffb8a8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                    InlineElts = "\250f\004\242UU\000\000pf\004\242UU\000\000\000\230\031\373(7\261}\300\271\377\377\377\177\000\000R\206\311[UU\000\000\300\271\377\377\377\177\000"
                  }, <No data fields>}
              }
            },
            TypeScope = {
              Range = {
                B = {
                  ID = 0
                },
                E = {
                  ID = 0
                }
              },
              Builder = {
                Representation = 0x0,
                Buffer = 0x0,
                BufferSize = 0,
                BufferCapacity = 0
              }
            },
            Range = {
              B = {
                ID = 46439647
              },
              E = {
                ID = 0
              }
            },
            StorageClassSpecLoc = {
              ID = 0
            },
            ThreadStorageClassSpecLoc = {
              ID = 0
            },
            TSWRange = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            TSCLoc = {
              ID = 0
            },
            TSSLoc = {
              ID = 0
            },
            TSTLoc = {
              ID = 0
            },
            AltiVecLoc = {
              ID = 0
            },
            TSSatLoc = {
              ID = 0
            },
            TSTNameLoc = {
              ID = 0
            },
            TypeofParensRange = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            TQ_constLoc = {
              ID = 0
            },
            TQ_restrictLoc = {
              ID = 0
            },
            TQ_volatileLoc = {
              ID = 0
            },
            TQ_atomicLoc = {
              ID = 0
            },
            TQ_unalignedLoc = {
              ID = 0
            },
            FS_inlineLoc = {
              ID = 0
            },
            FS_virtualLoc = {
              ID = 0
            },
            FS_explicitLoc = {
              ID = 0
            },
            FS_noreturnLoc = {
              ID = 0
            },
            FS_explicitCloseParenLoc = {
              ID = 0
            },
            FS_forceinlineLoc = {
              ID = 0
            },
            FriendLoc = {
              ID = 0
            },
            ModulePrivateLoc = {
              ID = 0
            },
            ConstexprLoc = {
              ID = 0
            },
            TQ_pipeLoc = {
              ID = 0
            },
            writtenBS = {
              Type = 0,
              Sign = 0,
              Width = 0,
              ModeAttr = 0
            },
            ObjCQualifiers = 0x0
          }, 
          members of clang::ParsingDeclSpec:
          ParsingRAII = {
            Actions = @0x5555a18ddbf0,
            DiagnosticPool = {
              Parent = 0x0,
              Diagnostics = {
                <llvm::SmallVectorImpl<clang::sema::DelayedDiagnostic>> = {
                  <llvm::SmallVectorTemplateBase<clang::sema::DelayedDiagnostic, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::sema::DelayedDiagnostic, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x7fffffffb998,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::sema::DelayedDiagnostic, 4>> = {
                  InlineElts = "\370:\277\241UU\000\000\340:\277\241UU\000\000\320:\277\241UU\000\000\310:\277\241UU\000\000\000\000\000\000\000\000\000\000\020\272\377\377\377\177\000\000ŀ\311[UU\000\000\320:\277\241\023\000\000\000p\036l\237UU\000\000\260\273\377\377\377\177\000\000\332>\257XUU\000\000\000\000\000\000\000\000\000\000`\036l\237UU\000\0000\272\377\377\377\177\000\000*\374\234XUU\000\0000\272\377\377\377\177\000\000\340A\277\241UU\000\000\000\000\000\000\377\177\000\000\001\000\000\000\000\000\000\000P\272\377\377\377\177\000\000\351\b\235XUU\000\000`\272\377\377\377\177\000\000\340A\277\241UU\000\000\260\272\377\377\377\177\000\000\302x\311[UU\000\000\200"...
                }, <No data fields>}
            },
            State = {
              SavedPool = 0x0
            },
            Popped = false
          }
        }
        ObjCDC = {
          P = @0x55559f6c1e60,
          DC = 0x0,
          WithinObjCContainer = {
            X = @0x55559f6c28b8,
            OldValue = false
          }
        }
#21 0x00005555589c0c1f in clang::Parser::ParseExternalDeclaration (this=0x55559f6c1e60, Attrs=..., DeclSpecAttrs=..., DS=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/Parser.cpp:1041
        CleanupRAII = {
          Self = @0x55559f6c1e60
        }
        BalancerRAIIObj = {
          P = @0x55559f6c1e60,
          ParenCount = 0,
          BracketCount = 0,
          BraceCount = 1
        }
        SingleDecl = 0x0
#22 0x0000555558a0cfe8 in clang::Parser::ParseInnerNamespace (this=0x55559f6c1e60, InnerNSs=..., index=0, InlineLoc=..., attrs=..., Tracker=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:261
        DeclAttrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffbc68,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\201\331\317[UU\000\000\001\000\222\241UU\000\000\340\274\377\377\377\177\000\000\240\274\377\377\377\177\000\000\334\314\317[UU\000\000\260\274\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffbcb0,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "м\377\377\377\177\000\000p\271VmUU\000\000\340\274\377\377\377\177\000\000\034\343\336XUU\000\000\002\000\000\000\000\000\000\000\350\274\377\377\377\177\000"
              }, <No data fields>}
          }
        }
        EmptyDeclSpecAttrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffbcf8,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "p\271VmUU\000\0000\275\377\377\377\177\000\000n\326\336XUU\000\0000\275\377\377\377\177\000\000(\266\234X\b\000\000\000\300\342TaUU\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffbd40,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\360ۍ\241\001", '\000' <repeats 11 times>, "p\275\377\377\377\177\000\000\205\360\372[UU\000\000\000\000\000\000\000\000\000\000\020\277\377\377\377\177\000"
              }, <No data fields>}
          }
        }
        NamespaceScope = {
          Self = 0x0
        }
        ImplicitUsingDirectiveDecl = 0x7fffffffbc60
        NamespcDecl = 0x55555bcfdf1e <llvm::PointerIntPairInfo<void*, 1u, llvm::pointer_union_detail::PointerUnionUIntTraits<llvm::detail::UniqueFunctionBase<void, clang::Token const&>::TrivialCallback*, llvm::detail::UniqueFunctionBase<void, clang::Token const&>::NonTrivialCallbacks*> >::getPointer(long)+28>
        __PRETTY_FUNCTION__ = "void clang::Parser::ParseInnerNamespace(const InnerNamespaceInfoList&, unsigned int, clang::SourceLocation&, clang::ParsedAttributes&, clang::BalancedDelimiterTracker&)"
#23 0x0000555558a0cc6e in clang::Parser::ParseNamespace (this=0x55559f6c1e60, Context=clang::DeclaratorContext::File, DeclEnd=..., InlineLoc=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:238
        __PRETTY_FUNCTION__ = "clang::Parser::DeclGroupPtrTy clang::Parser::ParseNamespace(clang::DeclaratorContext, clang::SourceLocation&, clang::SourceLocation)"
        NamespaceLoc = {
          ID = 46439420
        }
        ObjCDC = {
          P = @0x55559f6c1e60,
          DC = 0x0,
          WithinObjCContainer = {
            X = @0x55559f6c28b8,
            OldValue = false
          }
        }
        IdentLoc = {
          ID = 46439430
        }
        Ident = 0x5555a192e220
        ExtraNSs = {
          <llvm::SmallVectorImpl<clang::Parser::InnerNamespaceInfo>> = {
            <llvm::SmallVectorTemplateBase<clang::Parser::InnerNamespaceInfo, true>> = {
              <llvm::SmallVectorTemplateCommon<clang::Parser::InnerNamespaceInfo, void>> = {
                <llvm::SmallVectorBase<unsigned int>> = {
                  BeginX = 0x7fffffffc030,
                  Size = 0,
                  Capacity = 4
                }, <No data fields>}, 
            }, <No data fields>}, 
          <llvm::SmallVectorStorage<clang::Parser::InnerNamespaceInfo, 4>> = {
            InlineElts = "\300\315NnUU\000\000\000\230\031\373(7\261}`\300\377\377\377\177\000\000\231\205\374XUU\000\000P\301\377\377\377\177\000\000\230\300\377\377\377\177\000\000\200\300\377\377\377\177\000\000\271B\374XUU\000\000\000\000\000\000\000\000\000\000\230\300\377\377\377\177\000\000\240\300\377\377\377\177\000\000\221\377\373XUU\000"
          }, <No data fields>}
        FirstNestedInlineLoc = {
          ID = 0
        }
        attrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 46439455
              },
              E = {
                ID = 46439504
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffc0a8,
                      Size = 1,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\270\367\222\241UU\000\000\000\000\000\000\000\000\000\000\300\315NnUU\000\000\340\300\377\377\377\177\000\000\220\304\377\377\377\177\000\000\360\300\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffc0f0,
                      Size = 1,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\270\367\222\241UU\000\000\260\202\234XUU\000\000@\301\377\377\377\177\000\000\220\304\377\377\377\177\000\000@\301\377\377\377\177\000\000yǜXUU\000"
              }, <No data fields>}
          }
        }
        ReadAttributes = {
          __this = 0x55559f6c1e60,
          __attrs = @0x7fffffffc090
        }
        attrLoc = {
          ID = 46439455
        }
        T = {
          <clang::GreaterThanIsOperatorScope> = {
            GreaterThanIsOperator = @0x55559f6c2220,
            OldGreaterThanIsOperator = true
          }, 
          members of clang::BalancedDelimiterTracker:
          P = @0x55559f6c1e60,
          Kind = clang::tok::l_brace,
          Close = clang::tok::r_brace,
          FinalToken = clang::tok::semi,
          Consumer = (clang::SourceLocation (clang::Parser::*)(clang::Parser * const)) 0x5555589cbca2 <clang::Parser::ConsumeBrace()>,
          LOpen = {
            ID = 46439507
          },
          LClose = {
            ID = 0
          }
        }
        NamespaceScope = {
          Self = 0x55559f6c1e60
        }
        ImplicitUsingDirectiveDecl = 0x0
        NamespcDecl = 0x5555a64ea320
        CrashInfo = {
          <llvm::PrettyStackTraceEntry> = {
            _vptr.PrettyStackTraceEntry = 0x55556126a768 <vtable for clang::PrettyDeclStackTraceEntry+16>,
            NextEntry = 0x0
          }, 
          members of clang::PrettyDeclStackTraceEntry:
          Context = @0x5555a18d0ae0,
          TheDecl = 0x5555a64ea320,
          Loc = {
            ID = 46439420
          },
          Message = 0x55555d9b0d6a "parsing namespace"
        }
#24 0x00005555589e4dad in clang::Parser::ParseDeclaration (this=0x55559f6c1e60, Context=clang::DeclaratorContext::File, DeclEnd=..., DeclAttrs=..., DeclSpecAttrs=..., DeclSpecStart=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDecl.cpp:1807
        BalancerRAIIObj = {
          P = @0x55559f6c1e60,
          ParenCount = 0,
          BracketCount = 0,
          BraceCount = 0
        }
        ObjCDC = {
          P = @0x55559f6c1e60,
          DC = 0x0,
          WithinObjCContainer = {
            X = @0x55559f6c28b8,
            OldValue = false
          }
        }
        SingleDecl = 0x0
#25 0x00005555589c070a in clang::Parser::ParseExternalDeclaration (this=0x55559f6c1e60, Attrs=..., DeclSpecAttrs=..., DS=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/Parser.cpp:957
        DeclEnd = {
          ID = 0
        }
        CleanupRAII = {
          Self = @0x55559f6c1e60
        }
        BalancerRAIIObj = {
          P = @0x55559f6c1e60,
          ParenCount = 0,
          BracketCount = 0,
          BraceCount = 0
        }
        SingleDecl = 0x0
#26 0x00005555589bfa16 in clang::Parser::ParseTopLevelDecl (this=0x55559f6c1e60, Result=..., ImportState=@0x7fffffffc6c8: clang::Sema::ModuleImportState::NotACXX20Module) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/Parser.cpp:743
        CleanupRAII = {
          Self = @0x55559f6c1e60
        }
        DeclAttrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffc418,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "V\265\317[UU\000\000\000\000\000\000\000\000\000\0008\304\377\377\377\177\000\000\000\000\000\000\006\000\000\000\365\255\317[UU\000\000`\304\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffc460,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\300\304\377\377\377\177\000\0008\"l\237UU\000\000\200\304\377\377\377\177\000\000\360\306\377\377\377\177\000\000\240\304\377\377\377\177\000\000q\334.VUU\000"
              }, <No data fields>}
          }
        }
        DeclSpecAttrs = {
          <clang::ParsedAttributesView> = {
            Range = {
              B = {
                ID = 0
              },
              E = {
                ID = 0
              }
            },
            AttrList = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffc4a8,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "\254\321.VUU\000\000\000\000\000\000\000\000\000\000\360\306\377\377\377\177\000\000\340\304\377\377\377\177\000\000\t\271.VUU\000\000@\305\377\377\377\177\000"
              }, <No data fields>}
          }, 
          members of clang::ParsedAttributes:
          pool = {
            Factory = @0x55559f6c2238,
            Attrs = {
              <llvm::SmallVectorImpl<clang::ParsedAttr*>> = {
                <llvm::SmallVectorTemplateBase<clang::ParsedAttr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::ParsedAttr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x7fffffffc4f0,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::ParsedAttr*, 6>> = {
                InlineElts = "8wN\246UU\000\000\360\306\377\377\377\177\000\000 \305\377\377\377\177\000\000\254\207.VUU\000\000Ť\231]UU\000\000\360\306\377\377\377\177\000"
              }, <No data fields>}
          }
        }
#27 0x00005555562df830 in pasta::CompileJob::Run[abi:cxx11]() const (this=0x555561541be0) at /home/swd/projs/common/pasta/lib/Compile/Run.cpp:425
        at_eof = false
        err = ""
        ast = std::shared_ptr<pasta::ASTImpl> (use count 2, weak count 1) = {
          get() = 0x55556154db90
        }
        real_vfs = {
          Obj = 0x55556154e270
        }
        overlay_vfs = {
          Obj = 0x55556154b300
        }
        mem_vfs = {
          Obj = 0x555561546260
        }
        diag = std::unique_ptr<pasta::SaveFirstErrorDiagConsumer> = {
          get() = 0x555561525110
        }
        diagnostics_engine = {
          Obj = 0x5555615324b0
        }
        ci = @0x555561537f70: {
          <clang::ModuleLoader> = {
            _vptr.ModuleLoader = 0x55556124c2f0 <vtable for clang::CompilerInstance+16>,
            BuildingModule = false,
            HadFatalFailure = false
          }, 
          members of clang::CompilerInstance:
          Invocation = std::shared_ptr<clang::CompilerInvocation> (use count 1, weak count 0) = {
            get() = 0x555561556090
          },
          Diagnostics = {
            Obj = 0x5555615324b0
          },
          Target = {
            Obj = 0x555561539bc0
          },
          AuxTarget = {
            Obj = 0x0
          },
          FileMgr = {
            Obj = 0x55556155a650
          },
          SourceMgr = {
            Obj = 0x55556153b630
          },
          ModuleCache = {
            Obj = 0x5555615470e0
          },
          PP = std::shared_ptr<clang::Preprocessor> (use count 2, weak count 0) = {
            get() = 0x5555a1bf36a0
          },
          Context = {
            Obj = 0x5555a18d0ae0
          },
          ExternalSemaSrc = {
            Obj = 0x0
          },
          Consumer = std::unique_ptr<clang::ASTConsumer> = {
            get() = 0x555561544820
          },
          CompletionConsumer = std::unique_ptr<clang::CodeCompleteConsumer> = {
            get() = 0x0
          },
          TheSema = std::unique_ptr<clang::Sema> = {
            get() = 0x5555a18ddbf0
          },
          FrontendTimerGroup = std::unique_ptr<llvm::TimerGroup> = {
            get() = 0x0
          },
          FrontendTimer = std::unique_ptr<llvm::Timer> = {
            get() = 0x0
          },
          TheASTReader = {
            Obj = 0x0
          },
          ModuleDepCollector = std::shared_ptr<clang::ModuleDependencyCollector> (empty) = {
            get() = 0x0
          },
          ThePCHContainerOperations = std::shared_ptr<clang::PCHContainerOperations> (use count 1, weak count 0) = {
            get() = 0x55556152e8e0
          },
          DependencyCollectors = std::vector of length 0, capacity 0,
          BuiltModules = std::map with 0 elements,
          DeleteBuiltModules = true,
          LastModuleImportLoc = {
            ID = 0
          },
          LastModuleImportResult = {
            Storage = {
              Value = 0
            }
          },
          BuildGlobalModuleIndex = false,
          HaveFullGlobalModuleIndex = false,
          DisableGeneratingGlobalModuleIndex = false,
          OwnedVerboseOutputStream = std::unique_ptr<llvm::raw_ostream> = {
            get() = 0x0
          },
          VerboseOutputStream = 0x5555614effc0 <llvm::errs()::S>,
          OutputFiles = empty std::__cxx11::list,
          OutputStream = std::unique_ptr<llvm::raw_pwrite_stream> = {
            get() = 0x0
          }
        }
        invocation = @0x555561556090: {
          <clang::CompilerInvocationRefBase> = {
            LangOpts = std::shared_ptr<clang::LangOptions> (use count 1, weak count 0) = {
              get() = 0x55556152eb00
            },
            TargetOpts = std::shared_ptr<clang::TargetOptions> (use count 2, weak count 0) = {
              get() = 0x55556154ac80
            },
            DiagnosticOpts = {
              Obj = 0x55556151c770
            },
            HeaderSearchOpts = std::shared_ptr<clang::HeaderSearchOptions> (use count 3, weak count 0) = {
              get() = 0x555561544310
            },
            PreprocessorOpts = std::shared_ptr<clang::PreprocessorOptions> (use count 3, weak count 0) = {
              get() = 0x55556153e770
            },
            AnalyzerOpts = {
              Obj = 0x55556152dc00
            }
          }, 
          <clang::CompilerInvocationValueBase> = {
            MigratorOpts = {
              NoNSAllocReallocError = 0,
              NoFinalizeRemoval = 0
            },
            CodeGenOpts = {
              <clang::CodeGenOptionsBase> = {
                DisableIntegratedAS = 0,
                RelaxELFRelocations = 1,
                AsmVerbose = 1,
                Dwarf64 = 0,
                Dwarf32 = 1,
                PreserveAsmComments = 1,
                AssumeSaneOperatorNew = 1,
                Autolink = 1,
                ObjCAutoRefCountExceptions = 0,
                Backchain = 0,
                ControlFlowGuardNoChecks = 0,
                ControlFlowGuard = 0,
                EHContGuard = 0,
                CXAAtExit = 1,
                RegisterGlobalDtorsWithAtExit = 0,
                CXXCtorDtorAliases = 1,
                DataSections = 0,
                UniqueSectionNames = 1,
                UniqueBasicBlockSectionNames = 0,
                EnableAIXExtendedAltivecABI = 0,
                ClearASTBeforeBackend = 1,
                DisableFree = 1,
                DiscardValueNames = 0,
                DisableLLVMPasses = 0,
                DisableLifetimeMarkers = 0,
                DisableO0ImplyOptNone = 0,
                ExperimentalStrictFloatingPoint = 0,
                EnableNoundefAttrs = 1,
                DebugPassManager = 0,
                DisableRedZone = 0,
                EmitCallSiteInfo = 0,
                EnableDIPreservationVerify = 0,
                IndirectTlsSegRefs = 0,
                DisableTailCalls = 0,
                NoEscapingBlockTailCalls = 0,
                EmitDeclMetadata = 0,
                EmitVersionIdentMetadata = 1,
                EmitGcovArcs = 0,
                EmitGcovNotes = 0,
                EmitOpenCLArgMetadata = 0,
                EmulatedTLS = 0,
                ForbidGuardVariables = 0,
                FunctionSections = 0,
                InstrumentFunctions = 0,
                InstrumentFunctionsAfterInlining = 0,
                InstrumentFunctionEntryBare = 0,
                CFProtectionReturn = 0,
                CFProtectionBranch = 0,
                FunctionReturnThunks = 0,
                IndirectBranchCSPrefix = 0,
                XRayInstrumentFunctions = 0,
                StackSizeSection = 0,
                ForceDwarfFrameSection = 0,
                XRayAlwaysEmitCustomEvents = 0,
                XRayAlwaysEmitTypedEvents = 0,
                XRayIgnoreLoops = 0,
                XRayOmitFunctionIndex = 1,
                XRayInstructionThreshold = 200,
                XRayTotalFunctionGroups = 1,
                XRaySelectedFunctionGroup = 0,
                PatchableFunctionEntryCount = 0,
                PatchableFunctionEntryOffset = 0,
                HotPatch = 0,
                JMCInstrument = 0,
                InstrumentForProfiling = 0,
                CallFEntry = 0,
                MNopMCount = 0,
                RecordMCount = 0,
                PackedStack = 0,
                LessPreciseFPMAD = 0,
                PrepareForLTO = 0,
                PrepareForThinLTO = 0,
                LTOUnit = 0,
                EnableSplitLTOUnit = 0,
                IncrementalLinkerCompatible = 0,
                MergeAllConstants = 0,
                MergeFunctions = 0,
                NoCommon = 1,
                NoDwarfDirectoryAsm = 0,
                NoExecStack = 0,
                FatalWarnings = 0,
                NoWarn = 0,
                NoTypeCheck = 0,
                MisExpect = 0,
                EnableSegmentedStacks = 0,
                NoInlineLineTables = 0,
                StackClashProtector = 0,
                NoImplicitFloat = 0,
                NullPointerIsValid = 0,
                OpenCLCorrectlyRoundedDivSqrt = 0,
                HIPCorrectlyRoundedDivSqrt = 1,
                HIPSaveKernelArgName = 0,
                UniqueInternalLinkageNames = 0,
                SplitMachineFunctions = 0,
                StrictFloatCastOverflow = 1,
                UniformWGSize = 0,
                NoZeroInitializedInBSS = 0,
                ObjCConvertMessagesToRuntimeCalls = 1,
                ObjCAvoidHeapifyLocalBlocks = 0,
                OptimizationLevel = 0,
                OptimizeSize = 0,
                AtomicProfileUpdate = 0,
                ProfileTotalFunctionGroups = 1,
                ProfileSelectedFunctionGroup = 0,
                CoverageMapping = 0,
                DumpCoverageMapping = 0,
                RelaxAll = 1,
                RelaxedAliasing = 0,
                StructPathTBAA = 1,
                NewStructPathTBAA = 0,
                SaveTempLabels = 0,
                SanitizeAddressUseAfterScope = 0,
                SanitizeAddressPoisonCustomArrayCookie = 0,
                SanitizeAddressGlobalsDeadStripping = 0,
                SanitizeAddressUseOdrIndicator = 1,
                SanitizeMemoryTrackOrigins = 0,
                SanitizeMemoryParamRetval = 1,
                SanitizeMemoryUseAfterDtor = 0,
                SanitizeCfiCrossDso = 0,
                SanitizeMinimalRuntime = 0,
                SanitizeCfiICallGeneralizePointers = 0,
                SanitizeCfiCanonicalJumpTables = 0,
                SanitizeCoverageType = 0,
                SanitizeCoverageIndirectCalls = 0,
                SanitizeCoverageTraceBB = 0,
                SanitizeCoverageTraceCmp = 0,
                SanitizeCoverageTraceDiv = 0,
                SanitizeCoverageTraceGep = 0,
                SanitizeCoverage8bitCounters = 0,
                SanitizeCoverageTracePC = 0,
                SanitizeCoverageTracePCGuard = 0,
                SanitizeCoverageInline8bitCounters = 0,
                SanitizeCoverageInlineBoolFlag = 0,
                SanitizeCoveragePCTable = 0,
                SanitizeCoverageControlFlow = 0,
                SanitizeCoverageNoPrune = 0,
                SanitizeCoverageStackDepth = 0,
                SanitizeCoverageTraceLoads = 0,
                SanitizeCoverageTraceStores = 0,
                SanitizeBinaryMetadataCovered = 0,
                SanitizeBinaryMetadataAtomics = 0,
                SanitizeBinaryMetadataUAR = 0,
                SanitizeStats = 0,
                SimplifyLibCalls = 1,
                SoftFloat = 0,
                SpeculativeLoadHardening = 0,
                FineGrainedBitfieldAccesses = 0,
                StrictEnums = 0,
                StrictVTablePointers = 0,
                TimePasses = 0,
                TimePassesPerRun = 0,
                TimeTrace = 0,
                TimeTraceGranularity = 500,
                UnrollLoops = 0,
                RerollLoops = 0,
                NoUseJumpTables = 0,
                UnwindTables = 2,
                VectorizeLoop = 0,
                VectorizeSLP = 0,
                ProfileSampleAccurate = 0,
                UseRegisterSizedBitfieldAccess = 0,
                VerifyModule = 1,
                StackRealignment = 0,
                UseInitArray = 1,
                LoopAlignment = 0,
                StackAlignment = 0,
                StackProbeSize = 4096,
                WarnStackSize = 4294967295,
                NoStackArgProbe = 0,
                DebugStrictDwarf = 0,
                EnableAssignmentTracking = 0,
                DebugColumnInfo = 1,
                DebugTypeExtRefs = 0,
                DebugExplicitImport = 0,
                SplitDwarfInlining = 0,
                DebugFwdTemplateParams = 0,
                EmitLLVMUseLists = 0,
                WholeProgramVTables = 0,
                VirtualFunctionElimination = 0,
                LTOVisibilityPublicStd = 0,
                NumRegisterParameters = 0,
                SmallDataLimit = 0,
                SSPBufferSize = 8,
                MacroDebugInfo = 0,
                DwarfVersion = 5,
                EmitCodeView = 0,
                CodeViewGHash = 0,
                CodeViewCommandLine = 1,
                InlineMaxStackSize = 4294967295,
                TLSSize = 0,
                StackProtectorGuardOffset = 2147483647,
                EmitCheckPathComponentsToStrip = 0,
                DiagnosticsWithHotness = 0,
                DirectAccessExternalData = 0,
                StrictReturn = 1,
                DebugInfoForProfiling = 0,
                PseudoProbeForProfiling = 0,
                PreserveVec3Type = 0,
                DebugNameTable = 2,
                DebugRangesBaseAddress = 0,
                NoPLT = 0,
                EmbedSource = 0,
                ForceEmitVTables = 0,
                Addrsig = 1,
                KeepStaticConsts = 0,
                ForceAAPCSBitfieldLoad = 0,
                PassByValueIsNoAlias = 0,
                AAPCSBitfieldWidth = 1,
                EmitIEEENaNCompliantInsts = 1,
                SkipRaxSetup = 0,
                OpaquePointers = 1,
                CtorDtorReturnThis = 0,
                CompressDebugSections = 0,
                FramePointer = 2,
                EmbedBitcode = 0,
                InlineAsmDialect = 0,
                EmitDwarfUnwind = 2,
                ObjCDispatchMethod = 0,
                ProfileInstr = 0,
                ProfileUse = 0,
                StructReturnConvention = 0,
                SanitizeAddressUseAfterReturn = 1,
                SanitizeAddressDtor = 1,
                FiniteLoops = 0,
                DebugSrcHash = 0,
                DebugSimpleTemplateNames = 0,
                DebugInfo = 4,
                DebuggerTuning = 1,
                Inlining = 2,
                VecLib = 0,
                DefaultTLSModel = 0,
                SwiftAsyncFramePointer = 1,
                ZeroCallUsedRegs = 1
              }, 
              members of clang::CodeGenOptions:
              BBSections = "none",
              BinutilsVersion = "",
              CodeModel = "default",
              CoverageDataFile = "",
              CoverageNotesFile = "",
              ProfileFilterFiles = "",
              ProfileExcludeFiles = "",
              CoverageVersion = "408*",
              DebugPass = "",
              DebugCompilationDir = "/home/swd/projs/pasta-debugging",
              CoverageCompilationDir = "/home/swd/projs/pasta-debugging",
              DwarfDebugFlags = "",
              RecordCommandLine = "",
              DebugPrefixMap = std::map with 0 elements,
              CoveragePrefixMap = std::map with 0 elements,
              FloatABI = "",
              DIBugsReportFilePath = "",
              FPDenormalMode = {
                Output = llvm::DenormalMode::IEEE,
                Input = llvm::DenormalMode::IEEE
              },
              FP32DenormalMode = {
                Output = llvm::DenormalMode::IEEE,
                Input = llvm::DenormalMode::IEEE
              },
              LimitFloatPrecision = "",
              LinkBitcodeFiles = std::vector of length 0, capacity 0,
              MainFileName = "LedgerReplay.cpp",
              SplitDwarfFile = "",
              SplitDwarfOutput = "",
              ObjectFilenameForDebug = "",
              RelocationModel = llvm::Reloc::PIC_,
              TrapFuncName = "",
              DependentLibraries = std::vector of length 0, capacity 0,
              LinkerOptions = std::vector of length 0, capacity 0,
              InstrProfileOutput = "",
              SampleProfileFile = "",
              MemoryProfileOutput = "",
              ProfileInstrumentUsePath = "",
              ProfileRemappingFile = "",
              ThinLTOIndexFile = "",
              ThinLinkBitcodeFile = "",
              SaveTempsFilePrefix = "",
              CudaGpuBinaryFileName = "",
              OffloadObjects = std::vector of length 0, capacity 0,
              OptRecordFile = "",
              OptRecordPasses = "",
              OptRecordFormat = "",
              SymbolPartition = "",
              OptimizationRemark = {
                Kind = clang::CodeGenOptions::RK_Missing,
                Pattern = "",
                Regex = std::shared_ptr<llvm::Regex> (empty) = {
                  get() = 0x0
                }
              },
              OptimizationRemarkMissed = {
                Kind = clang::CodeGenOptions::RK_Missing,
                Pattern = "",
                Regex = std::shared_ptr<llvm::Regex> (empty) = {
                  get() = 0x0
                }
              },
              OptimizationRemarkAnalysis = {
                Kind = clang::CodeGenOptions::RK_Missing,
                Pattern = "",
                Regex = std::shared_ptr<llvm::Regex> (empty) = {
                  get() = 0x0
                }
              },
              RewriteMapFiles = std::vector of length 0, capacity 0,
              SanitizeRecover = {
                Mask = {
                  maskLoToHigh = {0, 0}
                }
              },
              SanitizeTrap = {
                Mask = {
                  maskLoToHigh = {0, 0}
                }
              },
              CmdArgs = std::vector of length 3872, capacity 4878 = {45 '-', 99 'c', 99 'c', 49 '1', 0 '\000', 45 '-', 102 'f', 109 'm', 101 'e', 115 's', 115 's', 97 'a', 103 'g', 101 'e', 45 '-', 108 'l', 101 'e', 110 'n', 103 'g', 116 't', 104 'h', 61 '=', 49 '1', 48 '0', 48 '0', 0 '\000', 45 '-', 102 'f', 101 'e', 114 'r', 114 'r', 111 'o', 114 'r', 45 '-', 108 'l', 105 'i', 109 'm', 105 'i', 116 't', 0 '\000', 49 '1', 57 '9', 0 '\000', 45 '-', 109 'm', 108 'l', 108 'l', 118 'v', 109 'm', 0 '\000', 45 '-', 116 't', 114 'r', 101 'e', 97 'a', 116 't', 45 '-', 115 's', 99 'c', 97 'a', 108 'l', 97 'a', 98 'b', 108 'l', 101 'e', 45 '-', 102 'f', 105 'i', 120 'x', 101 'e', 100 'd', 45 '-', 101 'e', 114 'r', 114 'r', 111 'o', 114 'r', 45 '-', 97 'a', 115 's', 45 '-', 119 'w', 97 'a', 114 'r', 110 'n', 105 'i', 110 'n', 103 'g', 0 '\000', 45 '-', 100 'd', 105 'i', 115 's', 97 'a', 98 'b', 108 'l', 101 'e', 45 '-', 102 'f', 114 'r', 101 'e', 101 'e', 0 '\000', 45 '-', 101 'e', 109 'm', 105 'i', 116 't', 45 '-', 111 'o', 98 'b', 106 'j', 0 '\000', 45 '-', 116 't', 117 'u', 110 'n', 101 'e', 45 '-', 99 'c', 112 'p', 117 'u', 0 '\000', 103 'g', 101 'e', 110 'n', 101 'e', 114 'r', 105 'i', 99 'c', 0 '\000', 45 '-', 116 't', 97 'a', 114 'r', 103 'g', 101 'e', 116 't', 45 '-', 99 'c', 112 'p', 117 'u', 0 '\000', 120 'x', 56 '8', 54 '6', 45 '-', 54 '6', 52 '4', 0 '\000', 45 '-', 116 't', 114 'r', 105 'i', 112 'p', 108 'l', 101 'e', 0 '\000', 120 'x', 56 '8', 54 '6', 95 '_', 54 '6', 52 '4', 45 '-', 112 'p', 99 'c', 45 '-', 108 'l', 105 'i', 110 'n', 117 'u', 120 'x', 45 '-', 103 'g', 110 'n', 117 'u', 0 '\000', 45 '-', 110 'n', 111 'o', 98 'b', 117 'u', 105 'i', 108 'l', 116 't', 105 'i', 110 'n', 105 'i', 110 'n', 99 'c', 0 '\000', 45 '-', 110 'n', 111 'o', 115 's', 116 't', 100 'd', 105 'i', 110 'n'...},
              NoBuiltinFuncs = std::vector of length 0, capacity 0,
              Reciprocals = std::vector of length 0, capacity 0,
              PreferVectorWidth = "",
              XRayInstrumentationBundle = {
                Mask = 15
              },
              DefaultFunctionAttrs = std::vector of length 0, capacity 0,
              PassPlugins = std::vector of length 0, capacity 0,
              SanitizeCoverageAllowlistFiles = std::vector of length 0, capacity 0,
              StackProtectorGuard = "",
              StackProtectorGuardReg = "",
              StackProtectorGuardSymbol = "",
              SanitizeCoverageIgnorelistFiles = std::vector of length 0, capacity 0,
              StackUsageOutput = "",
              Argv0 = 0x0,
              CommandLineArgs = std::vector of length 160, capacity 160 = {"-cc1", "-fmessage-length=100", "-ferror-limit", "19", "-Wdeprecated", "-Wextra", "-Wno-unused-parameter", "-Wnon-virtual-dtor", "-Wno-sign-compare", "-Wno-char-subscripts", "-Wno-format", "-Wno-unused-local-typedefs", "-mllvm", "-treat-scalable-fixed-error-as-warning", "-o", "/dev/null", "-disable-free", "-emit-obj", "-x", "c++", "/home/swd/projs/ripple/mine/src/ripple/app/ledger/impl/LedgerReplay.cpp", "-tune-cpu", "generic", "-target-cpu", "x86-64", "-triple", "x86_64-pc-linux-gnu", "-nobuiltininc", "-nostdinc++", "-resource-dir", "/usr/lib/gcc/x86_64-pc-linux-gnu/13.1.1", "-nostdsysteminc", "-I", "/home/swd/projs/ripple/mine/src/ed25519-donna", "-I", "/home/swd/projs/ripple/mine/src/secp256k1/include", "-I", "/home/swd/projs/ripple/mine/src", "-isystem", "/home/swd/.conan/data/boost/1.82.0/_/_/package/f81afbcfa21cf6994cf0e45c1b11229c01c767a7/include", "-isystem", "/home/swd/.conan/data/openssl/1.1.1u/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", "-isystem", "/home/swd/.conan/data/libarchive/3.6.2/_/_/package/d9fea6983af2a77bcbe3f0b088cea5aef9308bd7/include", "-isystem", "/home/swd/.conan/data/lz4/1.9.3/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", "-isystem", "/home/swd/projs/ripple/mine/cur_build/proto_gen_grpc", "-isystem", "/home/swd/.conan/data/grpc/1.50.1/_/_/package/d156c58fd512defbc1155e665684d7875e800ba9/include", "-isystem", "/home/swd/.conan/data/abseil/20220623.0/_/_/package/e84b6d643e7f97d33bf72700134618fbae8bbbf6/include", "-isystem", "/home/swd/.conan/data/c-ares/1.19.0/_/_/package/ed86cef4487c6b9ce327a03d24ced8142000e8b9/include", "-isystem", "/home/swd/.conan/data/re2/20230301/_/_/package/e84b6d643e7f97d33bf72700134618fbae8bbbf6/include", "-isystem", "/home/swd/.conan/data/zlib/1.2.13/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", "-isystem", "/home/swd/.conan/data/protobuf/3.21.9/_/_/package/681b3b1dffc7e4dc6f5551cdb6e1fe56bdda3e85/include", "-isystem", "/home/swd/projs/ripple/mine/cur_build/proto_gen", "-isystem", "/home/swd/projs/ripple/mine/cur_build/proto_gen/src/ripple/proto", "-isystem", "/home/swd/.conan/data/soci/4.0.3/_/_/package/dc82e3681e64ed36c447531c9e4883a5c616a774/include", "-isystem", "/home/swd/.conan/data/bzip2/1.0.8/_/_/package/5e357164f23f7c4e38ebe87433827878dbe1a74c/include", "-isystem", "/home/swd/.conan/data/libbacktrace/cci.20210118/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", "-isystem", "/home/swd/.conan/data/sqlite3/3.42.0/_/_/package/ae0e146c4c82ac1e46c279d15c964c80fedbdf5f/include", "-isystem", "/home/swd/.conan/data/nudb/2.0.8/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include", "-isystem", "/home/swd/.conan/data/date/3.0.1/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include", "-isystem", "/usr/include/c++/13.1.1", "-isystem", "/usr/include/c++/13.1.1/x86_64-pc-linux-gnu", "-isystem", "/usr/include/c++/13.1.1/backward", "-isystem", "/usr/lib/gcc/x86_64-pc-linux-gnu/13.1.1/include", "-iwithsysroot", "/usr/local/include", "-isystem", "/usr/lib/gcc/x86_64-pc-linux-gnu/13.1.1/include-fixed", "-iwithsysroot", "/usr/include", "-std=c++20", "-fcxx-exceptions", "-fexceptions", "-fmath-errno", "-fno-implicit-modules", "-pic-level", "2", "-pic-is-pie", "-stack-protector", "1", "-fdeprecated-macro", "-fgnuc-version=4.2.1", "-ffp-contract=on", "-fno-experimental-relative-c++-abi-vtables", "-fno-file-reproducible", "-O0", "-fdebug-compilation-dir=/home/swd/projs/pasta-debugging", "-fcoverage-compilation-dir=/home/swd/projs/pasta-debugging", "-faddrsig", "-mrelax-all", "-dwarf-version=5", "-debugger-tuning=gdb", "-mframe-pointer=all", "-funwind-tables=2", "-mconstructor-aliases", "-clear-ast-before-backend", "-main-file-name", "LedgerReplay.cpp", "-debug-info-kind=constructor", "-fno-emulated-tls", "-fdiagnostics-hotness-threshold=0", "-fdiagnostics-misexpect-tolerance=0", "-D", "BOOST_ASIO_DISABLE_HANDLER_TYPE_REQUIREMENTS", "-D", "BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT", "-D", "BOOST_BEAST_ALLOW_DEPRECATED", "-D", "BOOST_CONTAINER_FWD_BAD_DEQUE", "-D", "BOOST_COROUTINES_NO_DEPRECATION_WARNING", "-D", "BOOST_FILESYSTEM_DEPRECATED", "-D", "BOOST_STACKTRACE_ADDR2LINE_LOCATION=\\\"/usr/bin/addr2line\\\"", "-D", "BOOST_STACKTRACE_USE_ADDR2LINE", "-D", "BOOST_STACKTRACE_USE_BACKTRACE", "-D", "BOOST_STACKTRACE_USE_NOOP", "-D", "CARES_STATICLIB", "-D", "DATE_HEADER_ONLY", "-D", "DEBUG", "-D", "ENABLE_TESTS", "-D", "GIT_COMMIT_HASH=\\\"ed9064ce3f6de6da6b63417e59f3100c8e6c4c6d\\\"", "-D", "HAS_UNCAUGHT_EXCEPTIONS=1", "-D", "OPENSSL_NO_SSL2", "-D", "_DEBUG", "-D", "__GCC_HAVE_DWARF2_CFI_ASM=1"},
              DiagnosticsHotnessThreshold = std::optional<unsigned long> = {
                [contained value] = 0
              },
              DiagnosticsMisExpectTolerance = std::optional<unsigned int> = {
                [contained value] = 0
              },
              AsSecureLogFile = ""
            },
            DependencyOutputOpts = {
              IncludeSystemHeaders = 0,
              ShowHeaderIncludes = 0,
              UsePhonyTargets = 0,
              AddMissingHeaderDeps = 0,
              IncludeModuleFiles = 0,
              ShowSkippedHeaderIncludes = 0,
              HeaderIncludeFormat = clang::HIFMT_Textual,
              HeaderIncludeFiltering = clang::HIFIL_None,
              ShowIncludesDest = clang::ShowIncludesDestination::None,
              OutputFormat = clang::DependencyOutputFormat::Make,
              OutputFile = "",
              HeaderIncludeOutputFile = "",
              Targets = std::vector of length 0, capacity 0,
              ExtraDeps = std::vector of length 0, capacity 0,
              ShowIncludesPretendHeader = "",
              DOTOutputFile = "",
              ModuleDependencyOutputDir = ""
            },
            FileSystemOpts = {
              WorkingDir = ""
            },
            FrontendOpts = {
              DisableFree = 1,
              RelocatablePCH = 0,
              ShowHelp = 0,
              ShowStats = 0,
              PrintSupportedCPUs = 0,
              TimeTrace = 0,
              ShowVersion = 0,
              FixWhatYouCan = 0,
              FixOnlyWarnings = 0,
              FixAndRecompile = 0,
              FixToTemporaries = 0,
              ARCMTMigrateEmitARCErrors = 0,
              SkipFunctionBodies = 0,
              UseGlobalModuleIndex = 1,
              GenerateGlobalModuleIndex = 1,
              ASTDumpDecls = 0,
              ASTDumpAll = 0,
              ASTDumpLookups = 0,
              ASTDumpDeclTypes = 0,
              BuildingImplicitModule = 0,
              BuildingImplicitModuleUsesLock = 1,
              ModulesEmbedAllFiles = 0,
              IncludeTimestamps = 1,
              UseTemporary = 1,
              IsSystemModule = 0,
              AllowPCMWithCompilerErrors = 0,
              ModulesShareFileManager = 1,
              CodeCompleteOpts = {
                IncludeMacros = 0,
                IncludeCodePatterns = 0,
                IncludeGlobals = 1,
                IncludeNamespaceLevelDecls = 1,
                IncludeBriefComments = 0,
                LoadExternal = 1,
                IncludeFixIts = 0
              },
              ASTDumpFormat = clang::ADOF_Default,
              ARCMTAction = clang::FrontendOptions::ARCMT_None,
              ObjCMTAction = 0,
              ObjCMTAllowListPath = "",
              MTMigrateDir = "",
              ARCMTMigrateReportOut = "",
              DashX = {
                Lang = clang::Language::CXX,
                Fmt = 0,
                Preprocessed = 0,
                HeaderUnit = 0,
                IsHeader = 0
              },
              Inputs = {
                <llvm::SmallVectorImpl<clang::FrontendInputFile>> = {
                  <llvm::SmallVectorTemplateBase<clang::FrontendInputFile, false>> = {
                    <llvm::SmallVectorTemplateCommon<clang::FrontendInputFile, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x555561558060,
                        Size = 1,
                        Capacity = 1
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::FrontendInputFile, 0>> = {<No data fields>}, <No data fields>},
              OriginalModuleMap = "",
              OutputFile = "/dev/null",
              FixItSuffix = "",
              ASTDumpFilter = "",
              CodeCompletionAt = {
                FileName = "",
                Line = 0,
                Column = 0
              },
              ProgramAction = clang::frontend::EmitObj,
              ActionName = "",
              ProductName = "",
              ExtractAPIIgnoresFile = "",
              PluginArgs = std::map with 0 elements,
              AddPluginActions = std::vector of length 0, capacity 0,
              Plugins = std::vector of length 0, capacity 0,
              ModuleFileExtensions = std::vector of length 0, capacity 0,
              ModuleMapFiles = std::vector of length 0, capacity 0,
              ModuleFiles = std::vector of length 0, capacity 0,
              ModulesEmbedFiles = std::vector of length 0, capacity 0,
              ASTMergeFiles = std::vector of length 0, capacity 0,
              LLVMArgs = std::vector of length 1, capacity 1 = {"-treat-scalable-fixed-error-as-warning"},
              OverrideRecordLayoutsFile = "",
              AuxTriple = "",
              AuxTargetCPU = std::optional<std::string> [no contained value],
              AuxTargetFeatures = std::optional<std::vector<std::string>> [no contained value],
              StatsFile = "",
              TimeTraceGranularity = 500,
              TimeTracePath = ""
            },
            PreprocessorOutputOpts = {
              ShowCPP = 0,
              ShowComments = 0,
              ShowLineMarkers = 1,
              UseLineDirectives = 0,
              ShowMacroComments = 0,
              ShowMacros = 0,
              ShowIncludeDirectives = 0,
              RewriteIncludes = 0,
              RewriteImports = 0,
              MinimizeWhitespace = 0,
              DirectivesOnly = 0
            }
          }, <No data fields>}
        fs_options = @0x5555615569d0: {
          WorkingDir = ""
        }
        fm = {
          Obj = 0x55556155a650
        }
        target_opts = @0x55556154ac80: {
          Triple = "x86_64-pc-linux-gnu",
          HostTriple = "x86_64-linux-gnu",
          CPU = "x86-64",
          TuneCPU = "generic",
          FPMath = "",
          ABI = "",
          EABIVersion = llvm::EABI::Default,
          LinkerVersion = "",
          FeaturesAsWritten = std::vector of length 0, capacity 0,
          Features = std::vector of length 5, capacity 8 = {"+cx8", "+mmx", "+sse", "+sse2", "+x87"},
          FeatureMap = {
            <llvm::StringMapImpl> = {
              TheTable = 0x555561546010,
              NumBuckets = 16,
              NumItems = 5,
              NumTombstones = 0,
              ItemSize = 16
            }, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},
          OpenCLFeaturesMap = {
            <llvm::StringMapImpl> = {
              TheTable = 0x555561552b80,
              NumBuckets = 64,
              NumItems = 38,
              NumTombstones = 0,
              ItemSize = 16
            }, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},
          OpenCLExtensionsAsWritten = std::vector of length 0, capacity 0,
          ForceEnableInt128 = false,
          NVPTXUseShortPointers = false,
          AllowAMDGPUUnsafeFPAtomics = false,
          CodeObjectVersion = clang::TargetOptions::COV_4,
          CodeModel = "default",
          SDKVersion = {
            Major = 0,
            Minor = 0,
            HasMinor = 0,
            Subminor = 0,
            HasSubminor = 0,
            Build = 0,
            HasBuild = 0
          },
          DarwinTargetVariantTriple = "",
          DarwinTargetVariantSDKVersion = {
            Major = 0,
            Minor = 0,
            HasMinor = 0,
            Subminor = 0,
            HasSubminor = 0,
            Build = 0,
            HasBuild = 0
          },
          DxilValidatorVersion = "",
          HLSLEntry = "main"
        }
        target_info = 0x555561539bc0
        had_legal_half_type = false
        argv = @0x555561547240: {
          argv = std::vector of length 158, capacity 256 = {0x555561552f20 "-cc1", 0x555561552f25 "-triple", 0x555561552f2d "x86_64-pc-linux-gnu", 0x555561552f41 "-emit-obj", 0x555561552f4b "-mrelax-all", 0x555561552f57 "-disable-free", 0x555561552f65 "-clear-ast-before-backend", 0x555561552f7f "-main-file-name", 0x555561552f8f "LedgerReplay.cpp", 0x555561552fa0 "-mrelocation-model", 0x555561552fb3 "pic", 0x555561552fb7 "-pic-level", 0x555561552fc2 "2", 0x555561552fc4 "-pic-is-pie", 0x555561552fd0 "-mframe-pointer=all", 0x555561552fe4 "-fmath-errno", 0x555561552ff1 "-ffp-contract=on", 0x555561553002 "-fno-rounding-math", 0x555561553015 "-mconstructor-aliases", 0x55556155302b "-funwind-tables=2", 0x55556155303d "-target-cpu", 0x555561553049 "x86-64", 0x555561553050 "-tune-cpu", 0x55556155305a "generic", 0x555561553062 "-mllvm", 0x555561553069 "-treat-scalable-fixed-error-as-warning", 0x555561553090 "-debug-info-kind=constructor", 0x5555615530ad "-dwarf-version=5", 0x5555615530be "-debugger-tuning=gdb", 0x5555615530d3 "-fcoverage-compilation-dir=/home/swd/projs/pasta-debugging", 0x55556155310e "-nostdsysteminc", 0x55556155311e "-nobuiltininc", 0x55556155312c "-resource-dir", 0x55556155313a "/usr/lib/gcc/x86_64-pc-linux-gnu/13.1.1", 0x555561553162 "-isystem", 0x55556155316b "/home/swd/.conan/data/boost/1.82.0/_/_/package/f81afbcfa21cf6994cf0e45c1b11229c01c767a7/include", 0x5555615531cb "-isystem", 0x5555615531d4 "/home/swd/.conan/data/openssl/1.1.1u/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", 0x555561553236 "-isystem", 0x55556155323f "/home/swd/.conan/data/libarchive/3.6.2/_/_/package/d9fea6983af2a77bcbe3f0b088cea5aef9308bd7/include", 0x5555615532a3 "-isystem", 0x5555615532ac "/home/swd/.conan/data/lz4/1.9.3/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", 0x555561553309 "-isystem", 0x555561553312 "/home/swd/projs/ripple/mine/cur_build/proto_gen_grpc", 0x555561553347 "-isystem", 0x555561553350 "/home/swd/.conan/data/grpc/1.50.1/_/_/package/d156c58fd512defbc1155e665684d7875e800ba9/include", 0x5555615533af "-isystem", 0x5555615533b8 "/home/swd/.conan/data/abseil/20220623.0/_/_/package/e84b6d643e7f97d33bf72700134618fbae8bbbf6/include", 0x55556155341d "-isystem", 0x555561553426 "/home/swd/.conan/data/c-ares/1.19.0/_/_/package/ed86cef4487c6b9ce327a03d24ced8142000e8b9/include", 0x555561553487 "-isystem", 0x555561553490 "/home/swd/.conan/data/re2/20230301/_/_/package/e84b6d643e7f97d33bf72700134618fbae8bbbf6/include", 0x5555615534f0 "-isystem", 0x5555615534f9 "/home/swd/.conan/data/zlib/1.2.13/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", 0x555561553558 "-isystem", 0x555561553561 "/home/swd/.conan/data/protobuf/3.21.9/_/_/package/681b3b1dffc7e4dc6f5551cdb6e1fe56bdda3e85/include", 0x5555615535c4 "-isystem", 0x5555615535cd "/home/swd/projs/ripple/mine/cur_build/proto_gen", 0x5555615535fd "-isystem", 0x555561553606 "/home/swd/projs/ripple/mine/cur_build/proto_gen/src/ripple/proto", 0x555561553647 "-isystem", 0x555561553650 "/home/swd/.conan/data/soci/4.0.3/_/_/package/dc82e3681e64ed36c447531c9e4883a5c616a774/include", 0x5555615536ae "-isystem", 0x5555615536b7 "/home/swd/.conan/data/bzip2/1.0.8/_/_/package/5e357164f23f7c4e38ebe87433827878dbe1a74c/include", 0x555561553716 "-isystem", 0x55556155371f "/home/swd/.conan/data/libbacktrace/cci.20210118/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", 0x55556155378c "-isystem", 0x555561553795 "/home/swd/.conan/data/sqlite3/3.42.0/_/_/package/ae0e146c4c82ac1e46c279d15c964c80fedbdf5f/include", 0x5555615537f7 "-isystem", 0x555561553800 "/home/swd/.conan/data/nudb/2.0.8/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include", 0x55556155385e "-isystem", 0x555561553867 "/home/swd/.conan/data/date/3.0.1/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include", 0x5555615538c5 "-isystem", 0x5555615538ce "/usr/include/c++/13.1.1", 0x5555615538e6 "-isystem", 0x5555615538ef "/usr/include/c++/13.1.1/x86_64-pc-linux-gnu", 0x55556155391b "-isystem", 0x555561553924 "/usr/include/c++/13.1.1/backward", 0x555561553945 "-isystem", 0x55556155394e "/usr/lib/gcc/x86_64-pc-linux-gnu/13.1.1/include", 0x55556155397e "-iwithsysroot", 0x55556155398c "/usr/local/include", 0x55556155399f "-isystem", 0x5555615539a8 "/usr/lib/gcc/x86_64-pc-linux-gnu/13.1.1/include-fixed", 0x5555615539de "-iwithsysroot", 0x5555615539ec "/usr/include", 0x5555615539f9 "-I", 0x5555615539fc "/home/swd/projs/ripple/mine/src/ed25519-donna", 0x555561553a2a "-I", 0x555561553a2d "/home/swd/projs/ripple/mine/src/secp256k1/include", 0x555561553a5f "-I", 0x555561553a62 "/home/swd/projs/ripple/mine/src", 0x555561553a82 "-D", 0x555561553a85 "BOOST_ASIO_DISABLE_HANDLER_TYPE_REQUIREMENTS", 0x555561553ab2 "-D", 0x555561553ab5 "BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT", 0x555561553adb "-D", 0x555561553ade "BOOST_BEAST_ALLOW_DEPRECATED", 0x555561553afb "-D", 0x555561553afe "BOOST_CONTAINER_FWD_BAD_DEQUE", 0x555561553b1c "-D", 0x555561553b1f "BOOST_COROUTINES_NO_DEPRECATION_WARNING", 0x555561553b47 "-D", 0x555561553b4a "BOOST_FILESYSTEM_DEPRECATED", 0x555561553b66 "-D", 0x555561553b69 "BOOST_STACKTRACE_ADDR2LINE_LOCATION=\\\"/usr/bin/addr2line\\\"", 0x555561553ba4 "-D", 0x555561553ba7 "BOOST_STACKTRACE_USE_ADDR2LINE", 0x555561553bc6 "-D", 0x555561553bc9 "BOOST_STACKTRACE_USE_BACKTRACE", 0x555561553be8 "-D", 0x555561553beb "BOOST_STACKTRACE_USE_NOOP", 0x555561553c05 "-D", 0x555561553c08 "CARES_STATICLIB", 0x555561553c18 "-D", 0x555561553c1b "DATE_HEADER_ONLY", 0x555561553c2c "-D", 0x555561553c2f "DEBUG", 0x555561553c35 "-D", 0x555561553c38 "ENABLE_TESTS", 0x555561553c45 "-D", 0x555561553c48 "GIT_COMMIT_HASH=\\\"ed9064ce3f6de6da6b63417e59f3100c8e6c4c6d\\\"", 0x555561553c85 "-D", 0x555561553c88 "HAS_UNCAUGHT_EXCEPTIONS=1", 0x555561553ca2 "-D", 0x555561553ca5 "OPENSSL_NO_SSL2", 0x555561553cb5 "-D", 0x555561553cb8 "_DEBUG", 0x555561553cbf "-Wdeprecated", 0x555561553ccc "-Wextra", 0x555561553cd4 "-Wno-unused-parameter", 0x555561553cea "-Wnon-virtual-dtor", 0x555561553cfd "-Wno-sign-compare", 0x555561553d0f "-Wno-char-subscripts", 0x555561553d24 "-Wno-format", 0x555561553d30 "-Wno-unused-local-typedefs", 0x555561553d4b "-std=c++20", 0x555561553d56 "-fdeprecated-macro", 0x555561553d69 "-fdebug-compilation-dir=/home/swd/projs/pasta-debugging", 0x555561553da1 "-ferror-limit", 0x555561553daf "19", 0x555561553db2 "-fmessage-length=100", 0x555561553dc7 "-stack-protector", 0x555561553dd8 "1", 0x555561553dda "-fgnuc-version=4.2.1", 0x555561553def "-fno-implicit-modules", 0x555561553e05 "-fcxx-exceptions", 0x555561553e16 "-fexceptions", 0x555561553e23 "-nostdinc++", 0x555561553e2f "-nobuiltininc", 0x555561553e3d "-nostdsysteminc", 0x555561553e4d "-faddrsig", 0x555561553e57 "-D__GCC_HAVE_DWARF2_CFI_ASM=1", 0x555561553e75 "-o", 0x555561553e78 "/dev/null", 0x555561553e82 "-x", 0x555561553e85 "c++", 0x555561553e89 "/home/swd/projs/ripple/mine/src/ripple/app/ledger/impl/LedgerReplay.cpp"},
          data = std::unique_ptr<char []> = {
            get() = 0x555561552f20 "-cc1"
          }
        }
        argv_arr = {
          Data = 0x555561552370,
          Length = 158
        }
        invocation_is_valid = true
        diags_to_ignore = {101, 4765, 4846, 6144}
        pp_options = @0x55556153e770: {
          Macros = std::vector of length 19, capacity 32 = {{
              first = "BOOST_ASIO_DISABLE_HANDLER_TYPE_REQUIREMENTS",
              second = false
            }, {
              first = "BOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT",
              second = false
            }, {
              first = "BOOST_BEAST_ALLOW_DEPRECATED",
              second = false
            }, {
              first = "BOOST_CONTAINER_FWD_BAD_DEQUE",
              second = false
            }, {
              first = "BOOST_COROUTINES_NO_DEPRECATION_WARNING",
              second = false
            }, {
              first = "BOOST_FILESYSTEM_DEPRECATED",
              second = false
            }, {
              first = "BOOST_STACKTRACE_ADDR2LINE_LOCATION=\\\"/usr/bin/addr2line\\\"",
              second = false
            }, {
              first = "BOOST_STACKTRACE_USE_ADDR2LINE",
              second = false
            }, {
              first = "BOOST_STACKTRACE_USE_BACKTRACE",
              second = false
            }, {
              first = "BOOST_STACKTRACE_USE_NOOP",
              second = false
            }, {
              first = "CARES_STATICLIB",
              second = false
            }, {
              first = "DATE_HEADER_ONLY",
              second = false
            }, {
              first = "DEBUG",
              second = false
            }, {
              first = "ENABLE_TESTS",
              second = false
            }, {
              first = "GIT_COMMIT_HASH=\\\"ed9064ce3f6de6da6b63417e59f3100c8e6c4c6d\\\"",
              second = false
            }, {
              first = "HAS_UNCAUGHT_EXCEPTIONS=1",
              second = false
            }, {
              first = "OPENSSL_NO_SSL2",
              second = false
            }, {
              first = "_DEBUG",
              second = false
            }, {
              first = "__GCC_HAVE_DWARF2_CFI_ASM=1",
              second = false
            }},
          Includes = std::vector of length 0, capacity 0,
          MacroIncludes = std::vector of length 0, capacity 0,
          UsePredefines = true,
          DetailedRecord = true,
          PCHWithHdrStop = false,
          PCHWithHdrStopCreate = false,
          PCHThroughHeader = "",
          ImplicitPCHInclude = "",
          ChainedIncludes = std::vector of length 0, capacity 0,
          DisablePCHOrModuleValidation = clang::DisableValidationForModuleKind::None,
          AllowPCHWithCompilerErrors = false,
          AllowPCHWithDifferentModulesCachePath = false,
          DumpDeserializedPCHDecls = false,
          DeserializedPCHDeclsToErrorOn = std::set with 0 elements,
          PrecompiledPreambleBytes = {
            first = 0,
            second = false
          },
          GeneratePreamble = false,
          WriteCommentListToPCH = true,
          SingleFileParseMode = true,
          LexEditorPlaceholders = false,
          RemappedFilesKeepOriginalName = true,
          RemappedFiles = std::vector of length 0, capacity 0,
          RemappedFileBuffers = std::vector of length 0, capacity 0,
          RetainRemappedFileBuffers = true,
          RetainExcludedConditionalBlocks = false,
          ObjCXXARCStandardLibrary = clang::ARCXX_nolib,
          FailedModules = std::shared_ptr<clang::PreprocessorOptions::FailedModulesSet> (empty) = {
            get() = 0x0
          },
          DependencyDirectivesForFile = {
            <std::_Maybe_unary_or_binary_function<std::optional<llvm::ArrayRef<clang::dependency_directives_scan::Directive> >, clang::FileEntryRef>> = {
              <std::unary_function<clang::FileEntryRef, std::optional<llvm::ArrayRef<clang::dependency_directives_scan::Directive> > >> = {<No data fields>}, <No data fields>}, 
            <std::_Function_base> = {
              _M_functor = {
                _M_unused = {
                  _M_object = 0x0,
                  _M_const_object = 0x0,
                  _M_function_pointer = 0x0,
                  _M_member_pointer = NULL
                },
                _M_pod_data = '\000' <repeats 15 times>
              },
              _M_manager = 0x0
            }, 
            members of std::function<std::optional<llvm::ArrayRef<clang::dependency_directives_scan::Directive> >(clang::FileEntryRef)>:
            _M_invoker = 0x0
          },
          SetUpStaticAnalyzer = false,
          DisablePragmaDebugCrash = false,
          SourceDateEpoch = std::optional<unsigned long> [no contained value]
        }
        ppo_options = @0x555561556d50: {
          ShowCPP = 0,
          ShowComments = 0,
          ShowLineMarkers = 1,
          UseLineDirectives = 0,
          ShowMacroComments = 0,
          ShowMacros = 0,
          ShowIncludeDirectives = 0,
          RewriteIncludes = 0,
          RewriteImports = 0,
          MinimizeWhitespace = 0,
          DirectivesOnly = 0
        }
        lang_opts = 0x55556152eb00
        frontend_opts = @0x5555615569f0: {
          DisableFree = 1,
          RelocatablePCH = 0,
          ShowHelp = 0,
          ShowStats = 0,
          PrintSupportedCPUs = 0,
          TimeTrace = 0,
          ShowVersion = 0,
          FixWhatYouCan = 0,
          FixOnlyWarnings = 0,
          FixAndRecompile = 0,
          FixToTemporaries = 0,
          ARCMTMigrateEmitARCErrors = 0,
          SkipFunctionBodies = 0,
          UseGlobalModuleIndex = 1,
          GenerateGlobalModuleIndex = 1,
          ASTDumpDecls = 0,
          ASTDumpAll = 0,
          ASTDumpLookups = 0,
          ASTDumpDeclTypes = 0,
          BuildingImplicitModule = 0,
          BuildingImplicitModuleUsesLock = 1,
          ModulesEmbedAllFiles = 0,
          IncludeTimestamps = 1,
          UseTemporary = 1,
          IsSystemModule = 0,
          AllowPCMWithCompilerErrors = 0,
          ModulesShareFileManager = 1,
          CodeCompleteOpts = {
            IncludeMacros = 0,
            IncludeCodePatterns = 0,
            IncludeGlobals = 1,
            IncludeNamespaceLevelDecls = 1,
            IncludeBriefComments = 0,
            LoadExternal = 1,
            IncludeFixIts = 0
          },
          ASTDumpFormat = clang::ADOF_Default,
          ARCMTAction = clang::FrontendOptions::ARCMT_None,
          ObjCMTAction = 0,
          ObjCMTAllowListPath = "",
          MTMigrateDir = "",
          ARCMTMigrateReportOut = "",
          DashX = {
            Lang = clang::Language::CXX,
            Fmt = 0,
            Preprocessed = 0,
            HeaderUnit = 0,
            IsHeader = 0
          },
          Inputs = {
            <llvm::SmallVectorImpl<clang::FrontendInputFile>> = {
              <llvm::SmallVectorTemplateBase<clang::FrontendInputFile, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::FrontendInputFile, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x555561558060,
                    Size = 1,
                    Capacity = 1
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::FrontendInputFile, 0>> = {<No data fields>}, <No data fields>},
          OriginalModuleMap = "",
          OutputFile = "/dev/null",
          FixItSuffix = "",
          ASTDumpFilter = "",
          CodeCompletionAt = {
            FileName = "",
            Line = 0,
            Column = 0
          },
          ProgramAction = clang::frontend::EmitObj,
          ActionName = "",
          ProductName = "",
          ExtractAPIIgnoresFile = "",
          PluginArgs = std::map with 0 elements,
          AddPluginActions = std::vector of length 0, capacity 0,
          Plugins = std::vector of length 0, capacity 0,
          ModuleFileExtensions = std::vector of length 0, capacity 0,
          ModuleMapFiles = std::vector of length 0, capacity 0,
          ModuleFiles = std::vector of length 0, capacity 0,
          ModulesEmbedFiles = std::vector of length 0, capacity 0,
          ASTMergeFiles = std::vector of length 0, capacity 0,
          LLVMArgs = std::vector of length 1, capacity 1 = {"-treat-scalable-fixed-error-as-warning"},
          OverrideRecordLayoutsFile = "",
          AuxTriple = "",
          AuxTargetCPU = std::optional<std::string> [no contained value],
          AuxTargetFeatures = std::optional<std::vector<std::string>> [no contained value],
          StatsFile = "",
          TimeTraceGranularity = 500,
          TimeTracePath = ""
        }
        input_files = @0x555561556a70: {
          <llvm::SmallVectorImpl<clang::FrontendInputFile>> = {
            <llvm::SmallVectorTemplateBase<clang::FrontendInputFile, false>> = {
              <llvm::SmallVectorTemplateCommon<clang::FrontendInputFile, void>> = {
                <llvm::SmallVectorBase<unsigned int>> = {
                  BeginX = 0x555561558060,
                  Size = 1,
                  Capacity = 1
                }, <No data fields>}, 
            }, <No data fields>}, 
          <llvm::SmallVectorStorage<clang::FrontendInputFile, 0>> = {<No data fields>}, <No data fields>}
        invocation_target = @0x555561539bc0: {
          <clang::TransferrableTargetInfo> = {
            PointerWidth = 64 '@',
            PointerAlign = 64 '@',
            BoolWidth = 8 '\b',
            BoolAlign = 8 '\b',
            IntWidth = 32 ' ',
            IntAlign = 32 ' ',
            HalfWidth = 16 '\020',
            HalfAlign = 16 '\020',
            BFloat16Width = 16 '\020',
            BFloat16Align = 16 '\020',
            FloatWidth = 32 ' ',
            FloatAlign = 32 ' ',
            DoubleWidth = 64 '@',
            DoubleAlign = 64 '@',
            LongDoubleWidth = 128 '\200',
            LongDoubleAlign = 128 '\200',
            Float128Align = 128 '\200',
            Ibm128Align = 128 '\200',
            LargeArrayMinWidth = 128 '\200',
            LargeArrayAlign = 128 '\200',
            LongWidth = 64 '@',
            LongAlign = 64 '@',
            LongLongWidth = 64 '@',
            LongLongAlign = 64 '@',
            Int128Align = 128 '\200',
            ShortAccumWidth = 16 '\020',
            ShortAccumAlign = 16 '\020',
            AccumWidth = 32 ' ',
            AccumAlign = 32 ' ',
            LongAccumWidth = 64 '@',
            LongAccumAlign = 64 '@',
            ShortFractWidth = 8 '\b',
            ShortFractAlign = 8 '\b',
            FractWidth = 16 '\020',
            FractAlign = 16 '\020',
            LongFractWidth = 32 ' ',
            LongFractAlign = 32 ' ',
            PaddingOnUnsignedFixedPoint = false,
            ShortAccumScale = 7 '\a',
            AccumScale = 15 '\017',
            LongAccumScale = 31 '\037',
            DefaultAlignForAttributeAligned = 128 '\200',
            MinGlobalAlign = 0 '\000',
            SuitableAlign = 128,
            NewAlign = 128,
            MaxVectorAlign = 0,
            MaxTLSAlign = 0,
            HalfFormat = 0x55555f0cd4d0 <llvm::semIEEEhalf>,
            BFloat16Format = 0x55555f0cd4f0 <llvm::semBFloat>,
            FloatFormat = 0x61,
            DoubleFormat = 0x5616df483d40,
            LongDoubleFormat = 0x5616df5bc810,
            Float128Format = 0x5616df483d50,
            Ibm128Format = 0x5616df483d80,
            SizeType = 3753567048,
            IntMaxType = 22038,
            PtrDiffType = 49,
            IntPtrType = clang::TransferrableTargetInfo::NoInt,
            WCharType = 1954137152,
            WIntType = 22038,
            Char16Type = 1995174400,
            Char32Type = 22038,
            Int64Type = clang::TransferrableTargetInfo::NoInt,
            Int16Type = clang::TransferrableTargetInfo::NoInt,
            SigAtomicType = clang::TransferrableTargetInfo::NoInt,
            ProcessIDType = clang::TransferrableTargetInfo::NoInt,
            UseSignedCharForObjCBool = 0,
            UseBitFieldTypeAlignment = 0,
            UseZeroLengthBitfieldAlignment = 0,
            UseLeadingZeroLengthBitfield = 0,
            UseExplicitBitFieldAlignment = 0,
            ZeroLengthBitfieldBoundary = 0,
            MaxAlignedAttribute = 62144
          }, 
          <llvm::RefCountedBase<clang::TargetInfo>> = {
            RefCount = 1
          }, 
          members of clang::TargetInfo:
          _vptr.TargetInfo = 0x5555612f5288 <vtable for clang::targets::LinuxTargetInfo<clang::targets::X86_64TargetInfo>+24>,
          TargetOpts = std::shared_ptr<clang::TargetOptions> (use count 2, weak count 0) = {
            get() = 0x55556154ac80
          },
          Triple = {
            Data = "x86_64-pc-linux-gnu",
            Arch = llvm::Triple::x86_64,
            SubArch = llvm::Triple::NoSubArch,
            Vendor = llvm::Triple::PC,
            OS = llvm::Triple::Linux,
            Environment = llvm::Triple::GNU,
            ObjectFormat = llvm::Triple::ELF
          },
          BigEndian = false,
          TLSSupported = true,
          VLASupported = true,
          NoAsmVariants = false,
          HasLegalHalfType = true,
          HalfArgsAndReturns = false,
          HasFloat128 = true,
          HasFloat16 = true,
          HasBFloat16 = true,
          HasIbm128 = true,
          HasLongDouble = true,
          HasFPReturn = true,
          HasStrictFP = true,
          MaxAtomicPromoteWidth = 128 '\200',
          MaxAtomicInlineWidth = 64 '@',
          SimdDefaultAlign = 128,
          DataLayoutString = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128",
          UserLabelPrefix = 0x55555efdbd56 "",
          MCountName = 0x55555efd9ed0 "mcount",
          RegParmMax = 6 '\006',
          SSERegParmMax = 0 '\000',
          TheCXXABI = {
            TheKind = clang::TargetCXXABI::GenericItanium
          },
          AddrSpaceMap = 0x55555efde7c0 <clang::targets::X86AddrSpaceMap>,
          PlatformName = {
            Data = 0x55555efd9ed9 "unknown",
            Length = 7
          },
          PlatformMinVersion = {
            Major = 0,
            Minor = 0,
            HasMinor = 0,
            Subminor = 0,
            HasSubminor = 0,
            Build = 0,
            HasBuild = 0
          },
          HasAlignMac68kSupport = 0,
          RealTypeUsesObjCFPRetMask = 8,
          ComplexLongDoubleUsesFP2Ret = 1,
          HasBuiltinMSVaList = 1,
          IsRenderScriptTarget = 0,
          HasAArch64SVETypes = 0,
          HasRISCVVTypes = 0,
          AllowAMDGPUUnsafeFPAtomics = 0,
          ARMCDECoprocMask = 0,
          MaxOpenCLWorkGroupSize = 1024,
          MaxBitIntWidth = std::optional<unsigned int> [no contained value],
          DarwinTargetVariantTriple = std::optional<llvm::Triple> [no contained value],
          UseAddrSpaceMapMangling = false
        }
        dep_opts = @0x5555615568e8: {
          IncludeSystemHeaders = 0,
          ShowHeaderIncludes = 0,
          UsePhonyTargets = 0,
          AddMissingHeaderDeps = 0,
          IncludeModuleFiles = 0,
          ShowSkippedHeaderIncludes = 0,
          HeaderIncludeFormat = clang::HIFMT_Textual,
          HeaderIncludeFiltering = clang::HIFIL_None,
          ShowIncludesDest = clang::ShowIncludesDestination::None,
          OutputFormat = clang::DependencyOutputFormat::Make,
          OutputFile = "",
          HeaderIncludeOutputFile = "",
          Targets = std::vector of length 0, capacity 0,
          ExtraDeps = std::vector of length 0, capacity 0,
          ShowIncludesPretendHeader = "",
          DOTOutputFile = "",
          ModuleDependencyOutputDir = ""
        }
        pp = @0x55556153bf60: {
          OnToken = {
            <llvm::detail::UniqueFunctionBase<void, clang::Token const&>> = {
              StorageUnion = {
                OutOfLineStorage = {
                  StoragePtr = 0x55556153bf40,
                  Size = 93825193459520,
                  Alignment = 8011187308317715744
                },
                InlineStorage = {
                  __data = "@\277SaUU\000\000@\277SaUU\000\000 -emit-o",
                  __align = {<No data fields>}
                }
              },
              CallbackAndInlineFlag = {
                Value = 0
              }
            }, <No data fields>},
          PPOpts = std::shared_ptr<clang::PreprocessorOptions> (use count 3, weak count 0) = {
            get() = 0x55556153e770
          },
          Diags = 0x5555615324b0,
          LangOpts = @0x55556152eb00,
          Target = 0x555561539bc0,
          AuxTarget = 0x0,
          FileMgr = @0x55556155a650,
          SourceMgr = @0x55556153b630,
          ScratchBuf = std::unique_ptr<clang::ScratchBuffer> = {
            get() = 0x555561558af0
          },
          HeaderInfo = @0x5555615498c0,
          TheModuleLoader = @0x555561537f70,
          ExternalSource = 0x0,
          BP = {
            <llvm::AllocatorBase<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {<No data fields>}, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            members of llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>:
            CurPtr = 0x5555a16f5dc8 "",
            End = 0x5555a16fc620 "",
            Slabs = {
              <llvm::SmallVectorImpl<void*>> = {
                <llvm::SmallVectorTemplateBase<void*, true>> = {
                  <llvm::SmallVectorTemplateCommon<void*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x555575c74d90,
                      Size = 465,
                      Capacity = 639
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<void*, 4>> = {
                InlineElts = "0\272TaUU\000\000 \253ZaUU\000\000\300\a[aUU\000\000@\234[aUU\000"
              }, <No data fields>},
            CustomSizedSlabs = {
              <llvm::SmallVectorImpl<std::pair<void*, unsigned long> >> = {
                <llvm::SmallVectorTemplateBase<std::pair<void*, unsigned long>, true>> = {
                  <llvm::SmallVectorTemplateCommon<std::pair<void*, unsigned long>, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x55559b9856e0,
                      Size = 11,
                      Capacity = 15
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<std::pair<void*, unsigned long>, 0>> = {<No data fields>}, <No data fields>},
            BytesAllocated = 6312960,
            RedZoneSize = 1
          },
          Ident__LINE__ = 0x55556153d3f0,
          Ident__FILE__ = 0x55556153d428,
          Ident__DATE__ = 0x55556153d460,
          Ident__TIME__ = 0x55556153d498,
          Ident__INCLUDE_LEVEL__ = 0x55556153d5f8,
          Ident__BASE_FILE__ = 0x55556153d5b8,
          Ident__FILE_NAME__ = 0x55556153d668,
          Ident__TIMESTAMP__ = 0x55556153d630,
          Ident__COUNTER__ = 0x55556153d4d0,
          Ident_Pragma = 0x55556153d500,
          Ident__pragma = 0x0,
          Ident__identifier = 0x0,
          Ident__VA_ARGS__ = 0x55556153d380,
          Ident__VA_OPT__ = 0x55556153d3b8,
          Ident__has_feature = 0x55556153d6a0,
          Ident__has_extension = 0x55556153d6d8,
          Ident__has_builtin = 0x55556153d710,
          Ident__has_constexpr_builtin = 0x55556153d750,
          Ident__has_attribute = 0x55556153d788,
          Ident__has_include = 0x55556153d808,
          Ident__has_include_next = 0x55556153d848,
          Ident__has_warning = 0x55556153d880,
          Ident__is_identifier = 0x55556153d8b8,
          Ident__building_module = 0x55556153da78,
          Ident__MODULE__ = 0x0,
          Ident__has_cpp_attribute = 0x55556153d580,
          Ident__has_c_attribute = 0x0,
          Ident__has_declspec = 0x55556153d7d0,
          Ident__is_target_arch = 0x55556153d8f8,
          Ident__is_target_vendor = 0x55556153d938,
          Ident__is_target_os = 0x55556153d970,
          Ident__is_target_environment = 0x55556153d9b0,
          Ident__is_target_variant_os = 0x55556153d9f0,
          Ident__is_target_variant_environment = 0x55556153da38,
          Ident__FLT_EVAL_METHOD__ = 0x55556153d540,
          ArgMacro = 0x0,
          DATELoc = {
            ID = 0
          },
          TIMELoc = {
            ID = 0
          },
          CurrentFPEvalMethod = clang::LangOptions::FEM_Source,
          LastFPEvalPragmaLocation = {
            ID = 0
          },
          TUFPEvalMethod = clang::LangOptions::FEM_Source,
          CounterValue = 2994829312,
          KeepComments = false,
          KeepMacroComments = false,
          SuppressIncludeNotFoundError = false,
          InMacroArgs = false,
          OwnsHeaderSearch = true,
          DisableMacroExpansion = false,
          MacroExpansionInDirectivesOverride = false,
          ReadMacrosFromExternalSource = false,
          PragmasEnabled = true,
          PreprocessedOutput = false,
          ParsingIfOrElifDirective = false,
          InMacroArgPreExpansion = false,
          Identifiers = {
            HashTable = {
              <llvm::StringMapImpl> = {
                TheTable = 0x55559f3e0b70,
                NumBuckets = 131072,
                NumItems = 53204,
                NumTombstones = 0,
                ItemSize = 16
              }, 
              <llvm::detail::AllocatorHolder<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {
                <llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>> = {
                  <llvm::AllocatorBase<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {<No data fields>}, 
                  <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
                    <llvm::MallocAllocator> = {
                      <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
                  members of llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>:
                  CurPtr = 0x5555a18c5828 "",
                  End = 0x5555a18c9290 "",
                  Slabs = {
                    <llvm::SmallVectorImpl<void*>> = {
                      <llvm::SmallVectorTemplateBase<void*, true>> = {
                        <llvm::SmallVectorTemplateCommon<void*, void>> = {
                          <llvm::SmallVectorBase<unsigned int>> = {
                            BeginX = 0x55559da087e0,
                            Size = 364,
                            Capacity = 639
                          }, <No data fields>}, 
                      }, <No data fields>}, 
                    <llvm::SmallVectorStorage<void*, 4>> = {
                      InlineElts = "`\323SaUU\000\000 LSaUU\000\000\320\351UaUU\000\000\340\371UaUU\000"
                    }, <No data fields>},
                  CustomSizedSlabs = {
                    <llvm::SmallVectorImpl<std::pair<void*, unsigned long> >> = {
                      <llvm::SmallVectorTemplateBase<std::pair<void*, unsigned long>, true>> = {
                        <llvm::SmallVectorTemplateCommon<std::pair<void*, unsigned long>, void>> = {
                          <llvm::SmallVectorBase<unsigned int>> = {
                            BeginX = 0x55556153c1e8,
                            Size = 0,
                            Capacity = 0
                          }, <No data fields>}, 
                      }, <No data fields>}, 
                    <llvm::SmallVectorStorage<std::pair<void*, unsigned long>, 0>> = {<No data fields>}, <No data fields>},
                  BytesAllocated = 3139482,
                  RedZoneSize = 1
                }, <No data fields>}, <No data fields>},
            ExternalLookup = 0x0
          },
          Selectors = {
            Impl = 0x555561545070
          },
          BuiltinInfo = std::unique_ptr<clang::Builtin::Context> = {
            get() = 0x55556153d020
          },
          PragmaHandlers = std::unique_ptr<clang::PragmaNamespace> = {
            get() = 0x55556153bd00
          },
          PragmaHandlersBackup = std::unique_ptr<clang::PragmaNamespace> = {
            get() = 0x0
          },
          CommentHandlers = std::vector of length 0, capacity 0,
          Emptyline = 0x0,
          TUKind = clang::TU_Complete,
          CodeComplete = 0x0,
          CodeCompletionFile = 0x0,
          CodeCompletionOffset = 0,
          CodeCompletionLoc = {
            ID = 0
          },
          CodeCompletionFileLoc = {
            ID = 0
          },
          ModuleImportLoc = {
            ID = 0
          },
          NamedModuleImportPath = {
            <llvm::SmallVectorImpl<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::IdentifierInfo*, clang::SourceLocation>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::IdentifierInfo*, clang::SourceLocation>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556153c278,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::IdentifierInfo*, clang::SourceLocation>, 2>> = {
              InlineElts = "/.conan/data/libarchive/3.6.2/_/"
            }, <No data fields>},
          IsAtImport = false,
          LastTokenWasAt = false,
          StdCXXImportSeqState = {
            S = clang::Preprocessor::StdCXXImportSeq::AtTopLevel,
            AfterHeaderName = false
          },
          TrackGMFState = {
            S = clang::Preprocessor::TrackGMF::BeforeGMFIntroducer
          },
          ModuleDeclState = {
            State = clang::Preprocessor::ModuleDeclSeq::NotAModuleDecl,
            Name = ""
          },
          ModuleImportExpectsIdentifier = false,
          PragmaARCCFCodeAuditedInfo = {
            first = 0x0,
            second = {
              ID = 0
            }
          },
          PragmaAssumeNonNullLoc = {
            ID = 0
          },
          PreambleRecordedPragmaAssumeNonNullLoc = {
            ID = 0
          },
          CodeCompletionReached = false,
          CodeCompletionII = 0x0,
          CodeCompletionTokenRange = {
            B = {
              ID = 0
            },
            E = {
              ID = 0
            }
          },
          MainFileDir = 0x0,
          SkipMainFilePreamble = {
            first = 0,
            second = false
          },
          HasReachedMaxIncludeDepth = false,
          LexLevel = 0,
          TokenCount = 1991974,
          PreprocessToken = false,
          MaxTokens = 0,
          MaxTokensOverrideLoc = {
            ID = 0
          },
          PreambleConditionalStack = {
            SkipInfo = std::optional<clang::Preprocessor::PreambleSkipInfo> [no contained value],
            ConditionalStack = {
              <llvm::SmallVectorImpl<clang::PPConditionalInfo>> = {
                <llvm::SmallVectorTemplateBase<clang::PPConditionalInfo, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::PPConditionalInfo, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x55556153c358,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::PPConditionalInfo, 4>> = {
                InlineElts = "/mine/cur_build/proto_gen_grpc -"
              }, <No data fields>},
            ConditionalStackState = clang::Preprocessor::PreambleConditionalStackStore::Off
          },
          CurLexer = std::unique_ptr<clang::Lexer> = {
            get() = 0x0
          },
          CurPPLexer = 0x0,
          CurDirLookup = {
            <llvm::iterator_facade_base<clang::detail::SearchDirIteratorImpl<true>, std::forward_iterator_tag, clang::DirectoryLookup const, long, clang::DirectoryLookup const*, clang::DirectoryLookup const&>> = {<No data fields>}, 
            members of clang::detail::SearchDirIteratorImpl<true>:
            HS = 0x0,
            Idx = 0
          },
          CurTokenLexer = std::unique_ptr<clang::TokenLexer> = {
            get() = 0x0
          },
          CurLexerKind = clang::Preprocessor::CLK_Lexer,
          CurLexerSubmodule = 0x0,
          IncludeMacroStack = std::vector of length 0, capacity 128,
          Callbacks = std::unique_ptr<clang::PPCallbacks> = {
            get() = 0x55556154dae0
          },
          PostLexAction = {
            <std::_Maybe_unary_or_binary_function<void, clang::Token const&>> = {
              <std::unary_function<clang::Token const&, void>> = {<No data fields>}, <No data fields>}, 
            <std::_Function_base> = {
              _M_functor = {
                _M_unused = {
                  _M_object = 0x0,
                  _M_const_object = 0x0,
                  _M_function_pointer = 0x0,
                  _M_member_pointer = NULL
                },
                _M_pod_data = '\000' <repeats 15 times>
              },
              _M_manager = 0x55555bcf82d4 <std::_Function_handler<void(const clang::Token&), clang::Preprocessor::Lex(clang::Token&)::<lambda(const clang::Token&)> >::_M_manager(std::_Any_data &, const std::_Any_data &, std::_Manager_operation)>
            }, 
            members of std::function<void(const clang::Token&)>:
            _M_invoker = 0x55555bcf8296 <std::_Function_handler<void(const clang::Token&), clang::Preprocessor::Lex(clang::Token&)::<lambda(const clang::Token&)> >::_M_invoke(const std::_Any_data &, const clang::Token &)>
          },
          DelayedMacroExpandsCallbacks = {
            <llvm::SmallVectorImpl<clang::Preprocessor::MacroExpandsInfo>> = {
              <llvm::SmallVectorTemplateBase<clang::Preprocessor::MacroExpandsInfo, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Preprocessor::MacroExpandsInfo, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556153c408,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Preprocessor::MacroExpandsInfo, 2>> = {
              InlineElts = "20623.0/_/_/package/e84b6d643e7f97d33bf72700134618fbae8bbbf6/include -isystem /home/swd/.conan/data/c-ares/1.19."
            }, <No data fields>},
          BuildingSubmoduleStack = {
            <llvm::SmallVectorImpl<clang::Preprocessor::BuildingSubmoduleInfo>> = {
              <llvm::SmallVectorTemplateBase<clang::Preprocessor::BuildingSubmoduleInfo, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Preprocessor::BuildingSubmoduleInfo, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556153c488,
                    Size = 0,
                    Capacity = 8
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Preprocessor::BuildingSubmoduleInfo, 8>> = {
              InlineElts = "86cef4487c6b9ce327a03d24ced8142000e8b9/include -isystem /home/swd/.conan/data/re2/20230301/_/_/package/e84b6d643e7f97d33bf72700134618fbae8bbbf6/include -isystem /home/swd/.conan/data/zlib/1.2.13/_/_/p"...
            }, <No data fields>},
          Submodules = std::map with 0 elements,
          NullSubmoduleState = {
            Macros = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo const*, clang::Preprocessor::MacroState, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroState> >, clang::IdentifierInfo const*, clang::Preprocessor::MacroState, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroState> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::IdentifierInfo const*, clang::Preprocessor::MacroState, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroState> >:
              Buckets = 0x55556bc98bc0,
              NumEntries = 18669,
              NumTombstones = 0,
              NumBuckets = 32768
            },
            VisibleModules = {
              ImportLocs = std::vector of length 0, capacity 0,
              Generation = 0
            }
          },
          CurSubmoduleState = 0x55556153c5b8,
          IncludedFiles = {
            <llvm::detail::DenseSetImpl<clang::FileEntry const*, llvm::DenseMap<clang::FileEntry const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseSetPair<clang::FileEntry const*> >, llvm::DenseMapInfo<clang::FileEntry const*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::FileEntry const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseSetPair<clang::FileEntry const*> >, clang::FileEntry const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseSetPair<clang::FileEntry const*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::FileEntry const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseSetPair<clang::FileEntry const*> >:
                Buckets = 0x55557b367fa0,
                NumEntries = 1794,
                NumTombstones = 0,
                NumBuckets = 4096
              }
            }, <No data fields>},
          AffectingClangModules = {
            <llvm::SetVector<clang::Module*, llvm::SmallVector<clang::Module*, 2>, llvm::SmallDenseSet<clang::Module*, 2, llvm::DenseMapInfo<clang::Module*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::Module*, llvm::SmallDenseMap<clang::Module*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >, llvm::DenseMapInfo<clang::Module*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::Module*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >, clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::Module*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::Module*>> = {
                  <llvm::SmallVectorTemplateBase<clang::Module*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::Module*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x55556153c638,
                        Size = 0,
                        Capacity = 2
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::Module*, 2>> = {
                  InlineElts = "ome/swd/projs/ri"
                }, <No data fields>}
            }, <No data fields>},
          ModuleMacros = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ModuleMacro>, clang::ModuleMacro>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556155e100,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          PendingModuleMacroNames = {
            <llvm::SmallVectorImpl<clang::IdentifierInfo const*>> = {
              <llvm::SmallVectorTemplateBase<clang::IdentifierInfo const*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::IdentifierInfo const*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556153c668,
                    Size = 0,
                    Capacity = 32
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::IdentifierInfo const*, 32>> = {
              InlineElts = "c/ripple/proto -isystem /home/swd/.conan/data/soci/4.0.3/_/_/package/dc82e3681e64ed36c447531c9e4883a5c616a774/include -isystem /home/swd/.conan/data/bzip2/1.0.8/_/_/package/5e357164f23f7c4e38ebe874338"...
            }, <No data fields>},
          LeafModuleMacros = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*>, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*> > >, clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*>, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*>, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*> > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          WarnUnusedMacroLocs = {
            <llvm::detail::DenseSetImpl<clang::SourceLocation, llvm::SmallDenseMap<clang::SourceLocation, llvm::detail::DenseSetEmpty, 32, llvm::DenseMapInfo<clang::SourceLocation, void>, llvm::detail::DenseSetPair<clang::SourceLocation> >, llvm::DenseMapInfo<clang::SourceLocation, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::SmallDenseMap<clang::SourceLocation, llvm::detail::DenseSetEmpty, 32, llvm::DenseMapInfo<clang::SourceLocation, void>, llvm::detail::DenseSetPair<clang::SourceLocation> >, clang::SourceLocation, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::SourceLocation, void>, llvm::detail::DenseSetPair<clang::SourceLocation> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::SmallDenseMap<clang::SourceLocation, llvm::detail::DenseSetEmpty, 32, llvm::DenseMapInfo<clang::SourceLocation, void>, llvm::detail::DenseSetPair<clang::SourceLocation> >:
                Small = 1,
                NumEntries = 0,
                NumTombstones = 0,
                storage = {
                  buffer = '\377' <repeats 128 times>
                }
              }
            }, <No data fields>},
          AnnotationInfos = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations> >, clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          MacroArgCache = 0x555561bd0720,
          PragmaPushMacroInfo = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> > > >, clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> > > >:
            Buckets = 0x5555771c7410,
            NumEntries = 0,
            NumTombstones = 3,
            NumBuckets = 64
          },
          NumDirectives = 58800,
          NumDefined = 19728,
          NumUndefined = 1808,
          NumPragma = 1276,
          NumIf = 15052,
          NumElse = 2018,
          NumEndif = 8548,
          NumEnteredSourceFiles = 2849,
          MaxIncludeStackDepth = 28,
          NumMacroExpanded = 58557,
          NumFnMacroExpanded = 191519,
          NumBuiltinMacroExpanded = 1056,
          NumFastMacroExpanded = 0,
          NumTokenPaste = 43191,
          NumFastTokenPaste = 8304,
          NumSkipped = 7921,
          Predefines = "# 1 \"<built-in>\" 3\n#define __llvm__ 1\n#define __clang__ 1\n#define __clang_major__ 16\n#define __clang_minor__ 0\n#define __clang_patchlevel__ 5\n#define __clang_version__ \"16.0.5 \"\n#define __GNUC__ 4\n#de"...,
          PredefinesFileID = {
            ID = 2
          },
          PCHThroughHeaderFileID = {
            ID = 0
          },
          SkippingUntilPragmaHdrStop = false,
          SkippingUntilPCHThroughHeader = false,
          NumCachedTokenLexers = 8,
          TokenLexerCache = {std::unique_ptr<clang::TokenLexer> = {
              get() = 0x555585c90510
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x555585d6e3c0
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x5555a0b450d0
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x5555a0ab8fa0
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x555585c8e8d0
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x5555a0b46b70
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x5555a0abc6b0
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x555585cd85d0
            }},
          MacroExpandedTokens = {
            <llvm::SmallVectorImpl<clang::Token>> = {
              <llvm::SmallVectorTemplateBase<clang::Token, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Token, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55559c1772b0,
                    Size = 0,
                    Capacity = 5271
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Token, 16>> = {
              InlineElts = "sr/include/c++/13.1.1 -isystem /usr/include/c++/13.1.1/x86_64-pc-linux-gnu -isystem /usr/include/c++/13.1.1/backward -isystem /usr/lib/gcc/x86_64-pc-linux-gnu/13.1.1/include -iwithsysroot /usr/local/i"...
            }, <No data fields>},
          MacroExpandingLexersStack = std::vector of length 0, capacity 64,
          Record = 0x555561533170,
          CachedTokens = {
            <llvm::SmallVectorImpl<clang::Token>> = {
              <llvm::SmallVectorTemplateBase<clang::Token, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Token, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556153cab0,
                    Size = 0,
                    Capacity = 1
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Token, 1>> = {
              InlineElts = "c -D BOOST_ASIO_DISABLE_"
            }, <No data fields>},
          CachedLexPos = 0,
          BacktrackPositions = std::vector of length 0, capacity 0,
          SkippingExcludedConditionalBlock = false,
          RecordedSkippedRanges = {
            <llvm::DenseMapBase<llvm::DenseMap<char const*, unsigned int, llvm::DenseMapInfo<char const*, void>, llvm::detail::DenseMapPair<char const*, unsigned int> >, char const*, unsigned int, llvm::DenseMapInfo<char const*, void>, llvm::detail::DenseMapPair<char const*, unsigned int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<char const*, unsigned int, llvm::DenseMapInfo<char const*, void>, llvm::detail::DenseMapPair<char const*, unsigned int> >:
            Buckets = 0x5555a12815c0,
            NumEntries = 6386,
            NumTombstones = 0,
            NumBuckets = 16384
          },
          PoisonReasons = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >, clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >:
            Buckets = 0x5555615329d0,
            NumEntries = 2,
            NumTombstones = 0,
            NumBuckets = 64
          },
          Ident__exception_code = 0x0,
          Ident___exception_code = 0x0,
          Ident_GetExceptionCode = 0x0,
          Ident__exception_info = 0x0,
          Ident___exception_info = 0x0,
          Ident_GetExceptionInfo = 0x0,
          Ident__abnormal_termination = 0x0,
          Ident___abnormal_termination = 0x0,
          Ident_AbnormalTermination = 0x0
        }
        sm = @0x55556153b630: {
          <llvm::RefCountedBase<clang::SourceManager>> = {
            RefCount = 1
          }, 
          members of clang::SourceManager:
          Diag = @0x5555615324b0,
          FileMgr = @0x55556155a650,
          ContentCacheAlloc = {
            <llvm::AllocatorBase<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {<No data fields>}, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            members of llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>:
            CurPtr = 0x5555a1736f90 "td::uint8_t, SHAMapHash*, std::shared_ptr<SHAMapTreeNode>*>\n        getHashesAndChildren() const;\n\n    /** Get the `hashes` array */\n    [[nodiscard]] SHAMapHash*\n    getHashes() const;\n\n    /** Get t"...,
            End = 0x5555a1737460 "nal will1\001",
            Slabs = {
              <llvm::SmallVectorImpl<void*>> = {
                <llvm::SmallVectorTemplateBase<void*, true>> = {
                  <llvm::SmallVectorTemplateCommon<void*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x555577232480,
                      Size = 237,
                      Capacity = 319
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<void*, 4>> = {
                InlineElts = "\360\034ZaUU\000\000p\212aaUU\000\000\340tbaUU\000\000\300#maUU\000"
              }, <No data fields>},
            CustomSizedSlabs = {
              <llvm::SmallVectorImpl<std::pair<void*, unsigned long> >> = {
                <llvm::SmallVectorTemplateBase<std::pair<void*, unsigned long>, true>> = {
                  <llvm::SmallVectorTemplateCommon<std::pair<void*, unsigned long>, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x55556c6b2f80,
                      Size = 108,
                      Capacity = 127
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<std::pair<void*, unsigned long>, 0>> = {<No data fields>}, <No data fields>},
            BytesAllocated = 37881228,
            RedZoneSize = 1
          },
          FileInfos = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::FileEntry const*, clang::SrcMgr::ContentCache*, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseMapPair<clang::FileEntry const*, clang::SrcMgr::ContentCache*> >, clang::FileEntry const*, clang::SrcMgr::ContentCache*, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseMapPair<clang::FileEntry const*, clang::SrcMgr::ContentCache*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::FileEntry const*, clang::SrcMgr::ContentCache*, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseMapPair<clang::FileEntry const*, clang::SrcMgr::ContentCache*> >:
            Buckets = 0x55557b36ffb0,
            NumEntries = 1795,
            NumTombstones = 0,
            NumBuckets = 4096
          },
          OverridenFilesKeepOriginalName = true,
          UserFilesAreVolatile = false,
          FilesAreTransient = false,
          OverriddenFilesInfo = std::unique_ptr<clang::SourceManager::OverriddenFilesInfoTy> = {
            get() = 0x0
          },
          MemBufferInfos = std::vector of length 270, capacity 512 = {0x5555615a1df0, 0x555561627948, 0x555561bce820, 0x555563b90af8, 0x5555652a69b0, 0x5555638d87d0, 0x5555638d8808, 0x5555638d8840, 0x5555638d8878, 0x5555638d88b0, 0x5555638d88e8, 0x555567df1910, 0x5555683152b0, 0x5555685b81f0, 0x5555685b8228, 0x5555685b8260, 0x5555685b8298, 0x5555685b82d0, 0x5555685b8308, 0x5555685b8340, 0x5555685b8378, 0x5555685b83b0, 0x5555685b83e8, 0x5555685b8420, 0x5555685b8458, 0x5555685b8490, 0x5555685b84c8, 0x5555685b8500, 0x5555685b8538, 0x5555685b8570, 0x5555685b85a8, 0x5555685b85e0, 0x5555685b8618, 0x5555685b8650, 0x5555685b8688, 0x55556ac98ed0, 0x55556adc4bb8, 0x55556adc50a8, 0x55556adc50e0, 0x555564d26bb0, 0x555564d8de90, 0x5555644f9500, 0x55556ceeb4e8, 0x55556e6f94b0, 0x55556e6f94e8, 0x55556f26bea8, 0x55556f26bee0, 0x55556f26bf18, 0x55556f26bf50, 0x55556f26bf88, 0x55556f26c0b8, 0x55556f26c0f0, 0x55556f26c128, 0x55556f26c160, 0x55556f26cfb0, 0x55556f26cfe8, 0x55556f26d020, 0x55557240ae78, 0x55557240aeb0, 0x555572d73230, 0x555572de8688, 0x555572de86c0, 0x555572de86f8, 0x555572de8730, 0x555572de8768, 0x555572de88c0, 0x555572de88f8, 0x555572de9238, 0x555574abd710, 0x555574abd748, 0x555574abd780, 0x555574abd7b8, 0x555574abd7f0, 0x555574abe9a0, 0x555574abe9d8, 0x555574abecf8, 0x5555768bffd8, 0x555577231d70, 0x555577cae680, 0x55556ade8ce8, 0x555578a055e8, 0x555578ac1280, 0x555578ac12b8, 0x555578ac12f0, 0x555578ac1328, 0x555578ac1360, 0x555578ac1398, 0x555578ac13d0, 0x555570cbc0a0, 0x55556c230d40, 0x55556c230d78, 0x55556c230db0, 0x55556c230de8, 0x55556c230e20, 0x55556c230e58, 0x55556c230e90, 0x55556c230ec8, 0x55556c230f00, 0x55556c230f38, 0x55556c230f70, 0x55556c230fa8, 0x55556c230fe0, 0x55556c231018, 0x55556c231050, 0x55556c231088, 0x55556c2310c0, 0x55556c2310f8, 0x55556c231130, 0x55556c231168, 0x55556c2311a0, 0x55556c2311d8, 0x55556c231210, 0x55556c231248, 0x55556c231280, 0x55556c2312b8, 0x55556c2312f0, 0x55556c231328, 0x55556c231360, 0x55556c231398, 0x55556c2313d0, 0x55556c231408, 0x55556c231440, 0x55556c231478, 0x55556c2314b0, 0x55556c2314e8, 0x55556c231520, 0x55556c231558, 0x55556c231590, 0x55556c2315c8, 0x55556c231600, 0x55556c231638, 0x55556c231670, 0x55556c2316a8, 0x55556c2316e0, 0x55556c231718, 0x55556c231750, 0x55556c231788, 0x55556c2317c0, 0x55556c2317f8, 0x55556c231830, 0x55556c231868, 0x55556c2318a0, 0x55556c2318d8, 0x55556c231910, 0x55556c231948, 0x55556c231980, 0x55556c2319b8, 0x55556c2319f0, 0x55558996ecd0, 0x55558996ed08, 0x55558996ed40, 0x55558996ed78, 0x55558996edb0, 0x55558996ede8, 0x55558996ee20, 0x55558996ee58, 0x55558996ee90, 0x55558996eec8, 0x55558996ef00, 0x55558996ef38, 0x55558996ef70, 0x55558996efa8, 0x55558996efe0, 0x55558996f018, 0x55558996f050, 0x55558996f088, 0x55558996f0c0, 0x55558996f0f8, 0x55558996f130, 0x55558996f168, 0x55558996f1a0, 0x55558996f1d8, 0x55558996f210, 0x55558996f248, 0x55558996f280, 0x55558996f2b8, 0x55558996f2f0, 0x55558996f328, 0x55558996f360, 0x55558996f398, 0x55558996f3d0, 0x55558996f408, 0x55558996f440, 0x55558996f478, 0x55558996f4b0, 0x55558996f4e8, 0x55558996f520, 0x55558996f558, 0x55558996f590, 0x55558996f5c8, 0x55558996f600, 0x55558996f638, 0x55558996f670, 0x55558996f6a8, 0x55558996f6e0, 0x55558996f718, 0x55558996f750, 0x55558996f788, 0x55558996f7c0, 0x55558996f7f8...},
          LocalSLocEntryTable = {
            <llvm::SmallVectorImpl<clang::SrcMgr::SLocEntry>> = {
              <llvm::SmallVectorTemplateBase<clang::SrcMgr::SLocEntry, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::SrcMgr::SLocEntry, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55558b529b10,
                    Size = 852395,
                    Capacity = 1048575
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::SrcMgr::SLocEntry, 0>> = {<No data fields>}, <No data fields>},
          LoadedSLocEntryTable = {
            <llvm::SmallVectorImpl<clang::SrcMgr::SLocEntry>> = {
              <llvm::SmallVectorTemplateBase<clang::SrcMgr::SLocEntry, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::SrcMgr::SLocEntry, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556153b708,
                    Size = 0,
                    Capacity = 0
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::SrcMgr::SLocEntry, 0>> = {<No data fields>}, <No data fields>},
          NextLocalOffset = 58269054,
          CurrentLoadedOffset = 2147483648,
          SLocEntryLoaded = {
            Bits = {
              <llvm::SmallVectorImpl<unsigned long>> = {
                <llvm::SmallVectorTemplateBase<unsigned long, true>> = {
                  <llvm::SmallVectorTemplateCommon<unsigned long, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x55556153b720,
                      Size = 0,
                      Capacity = 6
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<unsigned long, 6>> = {
                InlineElts = "\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\0000vSaUU\000\000\000\034\277\367\377\177\000\000\000\000\000\000\000\000\000\000\245\242SaUU\000"
              }, <No data fields>},
            Size = 0
          },
          ExternalSLocEntries = 0x0,
          LastFileIDLookup = {
            ID = 851074
          },
          LineTable = std::unique_ptr<clang::LineTableInfo> = {
            get() = 0x55556152e3f0
          },
          LastLineNoFileIDQuery = {
            ID = 851074
          },
          LastLineNoContentCache = 0x5555a1736788,
          LastLineNoFilePos = 5065699,
          LastLineNoResult = 1715398,
          MainFileID = {
            ID = 851074
          },
          PreambleFileID = {
            ID = 0
          },
          NumLinearScans = 21062346,
          NumBinaryProbes = 233333775,
          IncludedLocMap = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::FileID, std::pair<clang::FileID, unsigned int>, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::pair<clang::FileID, unsigned int> > >, clang::FileID, std::pair<clang::FileID, unsigned int>, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::pair<clang::FileID, unsigned int> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::FileID, std::pair<clang::FileID, unsigned int>, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::pair<clang::FileID, unsigned int> > >:
            Buckets = 0x555598189470,
            NumEntries = 26540,
            NumTombstones = 0,
            NumBuckets = 65536
          },
          IBTUCache = {
            <llvm::DenseMapBase<llvm::DenseMap<std::pair<clang::FileID, clang::FileID>, clang::InBeforeInTUCacheEntry, llvm::DenseMapInfo<std::pair<clang::FileID, clang::FileID>, void>, llvm::detail::DenseMapPair<std::pair<clang::FileID, clang::FileID>, clang::InBeforeInTUCacheEntry> >, std::pair<clang::FileID, clang::FileID>, clang::InBeforeInTUCacheEntry, llvm::DenseMapInfo<std::pair<clang::FileID, clang::FileID>, void>, llvm::detail::DenseMapPair<std::pair<clang::FileID, clang::FileID>, clang::InBeforeInTUCacheEntry> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<std::pair<clang::FileID, clang::FileID>, clang::InBeforeInTUCacheEntry, llvm::DenseMapInfo<std::pair<clang::FileID, clang::FileID>, void>, llvm::detail::DenseMapPair<std::pair<clang::FileID, clang::FileID>, clang::InBeforeInTUCacheEntry> >:
            Buckets = 0x55556209ce20,
            NumEntries = 300,
            NumTombstones = 0,
            NumBuckets = 512
          },
          IBTUCacheOverflow = {
            LQueryFID = {
              ID = 851073
            },
            RQueryFID = {
              ID = 1
            },
            LChildBeforeRChild = false,
            CommonFID = {
              ID = 1
            },
            LCommonOffset = 1085,
            RCommonOffset = 1076
          },
          FakeBufferForRecovery = std::unique_ptr<llvm::MemoryBuffer> = {
            get() = 0x0
          },
          FakeContentCacheForRecovery = std::unique_ptr<clang::SrcMgr::ContentCache> = {
            get() = 0x0
          },
          FakeSLocEntryForRecovery = std::unique_ptr<clang::SrcMgr::SLocEntry> = {
            get() = 0x0
          },
          MacroArgsCacheMap = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::FileID, std::unique_ptr<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > >, std::default_delete<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > > > >, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::unique_ptr<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > >, std::default_delete<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > > > > > >, clang::FileID, std::unique_ptr<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > >, std::default_delete<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > > > >, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::unique_ptr<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > >, std::default_delete<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > > > > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::FileID, std::unique_ptr<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > >, std::default_delete<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > > > >, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::unique_ptr<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > >, std::default_delete<std::map<unsigned int, clang::SourceLocation, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::SourceLocation> > > > > > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          StoredModuleBuildStack = {
            <llvm::SmallVectorImpl<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, clang::FullSourceLoc> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, clang::FullSourceLoc>, false>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, clang::FullSourceLoc>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556153b820,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, clang::FullSourceLoc>, 2>> = {
              InlineElts = "0\270SaUU\000\000\001\000\000\000\002\000\000\000\177\243SaUU\000\000\000\034\277\367\377\177\000\000\000\000\000\000\000\000\000\000Q\000\000\000\000\000\000\000\000\255SaUU\000\0000^UaUU\000\000lang-15.0.136c447531c9e4!\000\000\000\000\000\000"
            }, <No data fields>}
        }
        macro_tracker_ptr = 0x5555615305a0
        file_tracker_ptr = 0x5555615382c0
        __PRETTY_FUNCTION__ = "pasta::Result<pasta::AST, std::__cxx11::basic_string<char> > pasta::CompileJob::Run() const"
        fd = 4
        main_file_name = "/home/swd/projs/ripple/mine/src/ripple/app/ledger/impl/LedgerReplay.cpp"
        added_file = true
        file_entry = {
          {
            TStorage = {
              buffer = "\370\344m\241UU\000"
            },
            ErrorStorage = {
              buffer = "\370\344m\241UU\000\000\t\000\000\000\000\000\000"
            }
          },
          HasError = false
        }
        prev_main_file_id = {
          ID = 1
        }
        main_file_id = {
          ID = 851074
        }
        ast_context = @0x5555a18d0ae0: {
          <llvm::RefCountedBase<clang::ASTContext>> = {
            RefCount = 1
          }, 
          members of clang::ASTContext:
          Types = {
            <llvm::SmallVectorImpl<clang::Type*>> = {
              <llvm::SmallVectorTemplateBase<clang::Type*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Type*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a41b45d0,
                    Size = 244850,
                    Capacity = 262143
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Type*, 0>> = {<No data fields>}, <No data fields>},
          ExtQualNodes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ExtQuals>, clang::ExtQuals>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555564c0cbd0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          ComplexTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ComplexType>, clang::ComplexType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555572d9f9e0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          PointerTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::PointerType>, clang::PointerType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a5a338c0,
                NumBuckets = 8192,
                NumNodes = 9406
              }, <No data fields>}, <No data fields>},
          AdjustedTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::AdjustedType>, clang::AdjustedType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555979f1d40,
                NumBuckets = 128,
                NumNodes = 250
              }, <No data fields>}, <No data fields>},
          BlockPointerTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::BlockPointerType>, clang::BlockPointerType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556cccba00,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          LValueReferenceTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::LValueReferenceType>, clang::LValueReferenceType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a47646c0,
                NumBuckets = 8192,
                NumNodes = 13247
              }, <No data fields>}, <No data fields>},
          RValueReferenceTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::RValueReferenceType>, clang::RValueReferenceType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a2d8eeb0,
                NumBuckets = 2048,
                NumNodes = 3788
              }, <No data fields>}, <No data fields>},
          MemberPointerTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::MemberPointerType>, clang::MemberPointerType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555597a0b430,
                NumBuckets = 128,
                NumNodes = 208
              }, <No data fields>}, <No data fields>},
          ConstantArrayTypes = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::ConstantArrayType, clang::ASTContext&>, clang::ConstantArrayType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a369a000,
                NumBuckets = 512,
                NumNodes = 594
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::ConstantArrayType, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          IncompleteArrayTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::IncompleteArrayType>, clang::IncompleteArrayType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3ac2b0,
                NumBuckets = 64,
                NumNodes = 125
              }, <No data fields>}, <No data fields>},
          VariableArrayTypes = std::vector of length 0, capacity 0,
          DependentSizedArrayTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentSizedArrayType>, clang::DependentSizedArrayType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d378720,
                NumBuckets = 64,
                NumNodes = 34
              }, <No data fields>}, <No data fields>},
          DependentSizedExtVectorTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentSizedExtVectorType>, clang::DependentSizedExtVectorType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555563cc7e30,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          DependentAddressSpaceTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentAddressSpaceType>, clang::DependentAddressSpaceType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d360040,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          VectorTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::VectorType>, clang::VectorType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d35f7c0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          DependentVectorTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentVectorType>, clang::DependentVectorType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d35e8a0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          MatrixTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ConstantMatrixType>, clang::ConstantMatrixType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3a8a80,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          DependentSizedMatrixTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentSizedMatrixType>, clang::DependentSizedMatrixType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d2aa070,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          FunctionNoProtoTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::FunctionNoProtoType>, clang::FunctionNoProtoType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d36cc40,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          FunctionProtoTypes = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::FunctionProtoType, clang::ASTContext&>, clang::FunctionProtoType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a6091b40,
                NumBuckets = 32768,
                NumNodes = 35081
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::FunctionProtoType, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          DependentTypeOfExprTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentTypeOfExprType>, clang::DependentTypeOfExprType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d379b80,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          DependentDecltypeTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentDecltypeType>, clang::DependentDecltypeType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55559dfb71a0,
                NumBuckets = 256,
                NumNodes = 329
              }, <No data fields>}, <No data fields>},
          TemplateTypeParmTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::TemplateTypeParmType>, clang::TemplateTypeParmType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a590d850,
                NumBuckets = 16384,
                NumNodes = 21055
              }, <No data fields>}, <No data fields>},
          ObjCTypeParamTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ObjCTypeParamType>, clang::ObjCTypeParamType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3c6f10,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          SubstTemplateTypeParmTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::SubstTemplateTypeParmType>, clang::SubstTemplateTypeParmType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a2fddca0,
                NumBuckets = 8192,
                NumNodes = 13247
              }, <No data fields>}, <No data fields>},
          SubstTemplateTypeParmPackTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::SubstTemplateTypeParmPackType>, clang::SubstTemplateTypeParmPackType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d36e0a0,
                NumBuckets = 64,
                NumNodes = 16
              }, <No data fields>}, <No data fields>},
          TemplateSpecializationTypes = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::TemplateSpecializationType, clang::ASTContext&>, clang::TemplateSpecializationType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a51fa9c0,
                NumBuckets = 4096,
                NumNodes = 6598
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::TemplateSpecializationType, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          ParenTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ParenType>, clang::ParenType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556e4cd0c0,
                NumBuckets = 512,
                NumNodes = 337
              }, <No data fields>}, <No data fields>},
          UsingTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::UsingType>, clang::UsingType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a36fac80,
                NumBuckets = 1024,
                NumNodes = 1350
              }, <No data fields>}, <No data fields>},
          TypedefTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::TypedefType>, clang::TypedefType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555564a1ebf0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          ElaboratedTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ElaboratedType>, clang::ElaboratedType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a4c74830,
                NumBuckets = 32768,
                NumNodes = 49804
              }, <No data fields>}, <No data fields>},
          DependentNameTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentNameType>, clang::DependentNameType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a5ef9ab0,
                NumBuckets = 8192,
                NumNodes = 8885
              }, <No data fields>}, <No data fields>},
          DependentTemplateSpecializationTypes = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::DependentTemplateSpecializationType, clang::ASTContext&>, clang::DependentTemplateSpecializationType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d900400,
                NumBuckets = 256,
                NumNodes = 306
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::DependentTemplateSpecializationType, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          PackExpansionTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::PackExpansionType>, clang::PackExpansionType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a5887810,
                NumBuckets = 1024,
                NumNodes = 1381
              }, <No data fields>}, <No data fields>},
          ObjCObjectTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ObjCObjectTypeImpl>, clang::ObjCObjectTypeImpl>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3c8da0,
                NumBuckets = 64,
                NumNodes = 2
              }, <No data fields>}, <No data fields>},
          ObjCObjectPointerTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ObjCObjectPointerType>, clang::ObjCObjectPointerType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d2a70c0,
                NumBuckets = 64,
                NumNodes = 2
              }, <No data fields>}, <No data fields>},
          DependentUnaryTransformTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentUnaryTransformType>, clang::DependentUnaryTransformType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3b7510,
                NumBuckets = 64,
                NumNodes = 3
              }, <No data fields>}, <No data fields>},
          AutoTypes = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::AutoType, clang::ASTContext&>, clang::AutoType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a402c560,
                NumBuckets = 512,
                NumNodes = 554
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::AutoType, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          DeducedTemplateSpecializationTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DeducedTemplateSpecializationType>, clang::DeducedTemplateSpecializationType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3affd0,
                NumBuckets = 64,
                NumNodes = 76
              }, <No data fields>}, <No data fields>},
          AtomicTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::AtomicType>, clang::AtomicType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d386780,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          AttributedTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::AttributedType>, clang::AttributedType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d360730,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          PipeTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::PipeType>, clang::PipeType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3b5f00,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          BitIntTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::BitIntType>, clang::BitIntType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3b93a0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          DependentBitIntTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentBitIntType>, clang::DependentBitIntType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3a7b10,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          BTFTagAttributedTypes = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::BTFTagAttributedType>, clang::BTFTagAttributedType>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3cead0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          QualifiedTemplateNames = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::QualifiedTemplateName>, clang::QualifiedTemplateName>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a5e31a50,
                NumBuckets = 1024,
                NumNodes = 1145
              }, <No data fields>}, <No data fields>},
          DependentTemplateNames = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::DependentTemplateName>, clang::DependentTemplateName>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55559e7c05c0,
                NumBuckets = 256,
                NumNodes = 308
              }, <No data fields>}, <No data fields>},
          SubstTemplateTemplateParms = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::SubstTemplateTemplateParmStorage>, clang::SubstTemplateTemplateParmStorage>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3c19e0,
                NumBuckets = 64,
                NumNodes = 19
              }, <No data fields>}, <No data fields>},
          SubstTemplateTemplateParmPacks = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::SubstTemplateTemplateParmPackStorage, clang::ASTContext&>, clang::SubstTemplateTemplateParmPackStorage>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3c7c80,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::SubstTemplateTemplateParmPackStorage, clang::ASTContext&>:
            Context = @0x5555a18d0ae0
          },
          NestedNameSpecifiers = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::NestedNameSpecifier>, clang::NestedNameSpecifier>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a1c02320,
                NumBuckets = 16384,
                NumNodes = 26962
              }, <No data fields>}, <No data fields>},
          GlobalNestedNameSpecifier = 0x5555a1970f68,
          ASTRecordLayouts = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::RecordDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::RecordDecl const*, void>, llvm::detail::DenseMapPair<clang::RecordDecl const*, clang::ASTRecordLayout const*> >, clang::RecordDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::RecordDecl const*, void>, llvm::detail::DenseMapPair<clang::RecordDecl const*, clang::ASTRecordLayout const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::RecordDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::RecordDecl const*, void>, llvm::detail::DenseMapPair<clang::RecordDecl const*, clang::ASTRecordLayout const*> >:
            Buckets = 0x5555a3dc83c0,
            NumEntries = 686,
            NumTombstones = 0,
            NumBuckets = 1024
          },
          ObjCLayouts = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::ObjCContainerDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*> >, clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::ObjCContainerDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*, llvm::DenseMapInfo<clang::ObjCContainerDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl const*, clang::ASTRecordLayout const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          MemoizedTypeInfo = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Type const*, clang::TypeInfo, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, clang::TypeInfo> >, clang::Type const*, clang::TypeInfo, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, clang::TypeInfo> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Type const*, clang::TypeInfo, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, clang::TypeInfo> >:
            Buckets = 0x5555a45b4650,
            NumEntries = 5685,
            NumTombstones = 0,
            NumBuckets = 8192
          },
          MemoizedUnadjustedAlign = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Type const*, unsigned int, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, unsigned int> >, clang::Type const*, unsigned int, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, unsigned int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Type const*, unsigned int, llvm::DenseMapInfo<clang::Type const*, void>, llvm::detail::DenseMapPair<clang::Type const*, unsigned int> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          KeyFunctions = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl>, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl> > >, clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl>, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl>, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, clang::LazyOffsetPtr<clang::Decl, unsigned int, &clang::ExternalASTSource::GetExternalDecl> > >:
            Buckets = 0x55557705b930,
            NumEntries = 18,
            NumTombstones = 0,
            NumBuckets = 64
          },
          ObjCImpls = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ObjCContainerDecl*, clang::ObjCImplDecl*, llvm::DenseMapInfo<clang::ObjCContainerDecl*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl*, clang::ObjCImplDecl*> >, clang::ObjCContainerDecl*, clang::ObjCImplDecl*, llvm::DenseMapInfo<clang::ObjCContainerDecl*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl*, clang::ObjCImplDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ObjCContainerDecl*, clang::ObjCImplDecl*, llvm::DenseMapInfo<clang::ObjCContainerDecl*, void>, llvm::detail::DenseMapPair<clang::ObjCContainerDecl*, clang::ObjCImplDecl*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          ObjCMethodRedecls = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*, llvm::DenseMapInfo<clang::ObjCMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*> >, clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*, llvm::DenseMapInfo<clang::ObjCMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*, llvm::DenseMapInfo<clang::ObjCMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::ObjCMethodDecl const*, clang::ObjCMethodDecl const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          BlockVarCopyInits = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, clang::BlockVarCopyInit, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, clang::BlockVarCopyInit> >, clang::VarDecl const*, clang::BlockVarCopyInit, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, clang::BlockVarCopyInit> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::VarDecl const*, clang::BlockVarCopyInit, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, clang::BlockVarCopyInit> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          MSGuidDecls = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::MSGuidDecl>, clang::MSGuidDecl>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555618a00b0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          UnnamedGlobalConstantDecls = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::UnnamedGlobalConstantDecl>, clang::UnnamedGlobalConstantDecl>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555572d50c20,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          TemplateParamObjectDecls = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::TemplateParamObjectDecl>, clang::TemplateParamObjectDecl>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d35f0d0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          StringLiteralCache = {
            <llvm::StringMapImpl> = {
              TheTable = 0x0,
              NumBuckets = 0,
              NumItems = 0,
              NumTombstones = 0,
              ItemSize = 16
            }, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},
          CUIDHash = "",
          CanonTemplateTemplateParms = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::ASTContext::CanonicalTemplateTemplateParm, clang::ASTContext const&>, clang::ASTContext::CanonicalTemplateTemplateParm>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x555576cec0f0,
                NumBuckets = 64,
                NumNodes = 10
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::ASTContext::CanonicalTemplateTemplateParm, clang::ASTContext const&>:
            Context = @0x5555a18d0ae0
          },
          Int128Decl = 0x55556e4ed608,
          UInt128Decl = 0x55556e4ed680,
          BuiltinVaListDecl = 0x5555a190e660,
          BuiltinMSVaListDecl = 0x55556e4edac8,
          ObjCIdDecl = 0x5555a2337bd0,
          ObjCSelDecl = 0x5555a2337dc8,
          ObjCClassDecl = 0x5555a2337cf0,
          ObjCProtocolClassDecl = 0x5555a2337e50,
          BOOLDecl = 0x0,
          ObjCIdRedefinitionType = {
            Value = {
              Value = 0
            }
          },
          ObjCClassRedefinitionType = {
            Value = {
              Value = 0
            }
          },
          ObjCSelRedefinitionType = {
            Value = {
              Value = 0
            }
          },
          BoolName = 0x0,
          NSObjectName = 0x0,
          NSCopyingName = 0x0,
          MakeIntegerSeqName = 0x5555a192e260,
          TypePackElementName = 0x5555a192e2a0,
          ObjCConstantStringType = {
            Value = {
              Value = 0
            }
          },
          CFConstantStringTagDecl = 0x55556e4ed6e0,
          CFConstantStringTypeDecl = 0x55556e4eda20,
          ObjCSuperType = {
            Value = {
              Value = 0
            }
          },
          ObjCNSStringType = {
            Value = {
              Value = 0
            }
          },
          ObjCInstanceTypeDecl = 0x5555a3ddc430,
          FILEDecl = 0x5555a197b7e0,
          jmp_bufDecl = 0x0,
          sigjmp_bufDecl = 0x0,
          ucontext_tDecl = 0x0,
          BlockDescriptorType = 0x0,
          BlockDescriptorExtendedType = 0x0,
          cudaConfigureCallDecl = 0x0,
          DeclAttrs = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*> >, clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, llvm::SmallVector<clang::Attr*, 4>*> >:
            Buckets = 0x5555a318b0a0,
            NumEntries = 5895,
            NumTombstones = 0,
            NumBuckets = 8192
          },
          MergedDecls = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl*, clang::Decl*, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*> >, clang::Decl*, clang::Decl*, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl*, clang::Decl*, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, clang::Decl*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          MergedDefModules = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*>, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*> > >, clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*>, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*>, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, llvm::TinyPtrVector<clang::Module*> > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          ModuleInitializers = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Module*, clang::ASTContext::PerModuleInitializers*, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseMapPair<clang::Module*, clang::ASTContext::PerModuleInitializers*> >, clang::Module*, clang::ASTContext::PerModuleInitializers*, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseMapPair<clang::Module*, clang::ASTContext::PerModuleInitializers*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Module*, clang::ASTContext::PerModuleInitializers*, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseMapPair<clang::Module*, clang::ASTContext::PerModuleInitializers*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          TopLevelModule = 0x0,
          TemplateOrInstantiation = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*>, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*> > >, clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*>, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*>, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, llvm::PointerUnion<clang::VarTemplateDecl*, clang::MemberSpecializationInfo*> > >:
            Buckets = 0x5555a36fcc90,
            NumEntries = 868,
            NumTombstones = 0,
            NumBuckets = 2048
          },
          InstantiatedFromUsingDecl = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >, clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >:
            Buckets = 0x5555a1c22330,
            NumEntries = 111,
            NumTombstones = 0,
            NumBuckets = 256
          },
          InstantiatedFromUsingEnumDecl = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::UsingEnumDecl*, clang::UsingEnumDecl*, llvm::DenseMapInfo<clang::UsingEnumDecl*, void>, llvm::detail::DenseMapPair<clang::UsingEnumDecl*, clang::UsingEnumDecl*> >, clang::UsingEnumDecl*, clang::UsingEnumDecl*, llvm::DenseMapInfo<clang::UsingEnumDecl*, void>, llvm::detail::DenseMapPair<clang::UsingEnumDecl*, clang::UsingEnumDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::UsingEnumDecl*, clang::UsingEnumDecl*, llvm::DenseMapInfo<clang::UsingEnumDecl*, void>, llvm::detail::DenseMapPair<clang::UsingEnumDecl*, clang::UsingEnumDecl*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          InstantiatedFromUsingShadowDecl = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::UsingShadowDecl*, clang::UsingShadowDecl*, llvm::DenseMapInfo<clang::UsingShadowDecl*, void>, llvm::detail::DenseMapPair<clang::UsingShadowDecl*, clang::UsingShadowDecl*> >, clang::UsingShadowDecl*, clang::UsingShadowDecl*, llvm::DenseMapInfo<clang::UsingShadowDecl*, void>, llvm::detail::DenseMapPair<clang::UsingShadowDecl*, clang::UsingShadowDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::UsingShadowDecl*, clang::UsingShadowDecl*, llvm::DenseMapInfo<clang::UsingShadowDecl*, void>, llvm::detail::DenseMapPair<clang::UsingShadowDecl*, clang::UsingShadowDecl*> >:
            Buckets = 0x5555a1b050a0,
            NumEntries = 8,
            NumTombstones = 0,
            NumBuckets = 64
          },
          InstantiatedFromUnnamedFieldDecl = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::FieldDecl*, clang::FieldDecl*, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, clang::FieldDecl*> >, clang::FieldDecl*, clang::FieldDecl*, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, clang::FieldDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::FieldDecl*, clang::FieldDecl*, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, clang::FieldDecl*> >:
            Buckets = 0x55559b591f60,
            NumEntries = 7,
            NumTombstones = 0,
            NumBuckets = 64
          },
          OverriddenMethods = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*>, llvm::DenseMapInfo<clang::CXXMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*> > >, clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*>, llvm::DenseMapInfo<clang::CXXMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*>, llvm::DenseMapInfo<clang::CXXMethodDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXMethodDecl const*, llvm::TinyPtrVector<clang::CXXMethodDecl const*> > >:
            Buckets = 0x5555a3e0e400,
            NumEntries = 259,
            NumTombstones = 0,
            NumBuckets = 512
          },
          MangleNumberingContexts = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::DeclContext const*, void>, llvm::detail::DenseMapPair<clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >, clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::DeclContext const*, void>, llvm::detail::DenseMapPair<clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::DeclContext const*, void>, llvm::detail::DenseMapPair<clang::DeclContext const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >:
            Buckets = 0x5555615637b0,
            NumEntries = 173,
            NumTombstones = 0,
            NumBuckets = 256
          },
          ExtraMangleNumberingContexts = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >, clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          MangleNumbers = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl const*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, unsigned int> >, clang::NamedDecl const*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::NamedDecl const*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, unsigned int> >:
              Buckets = 0x5555639600a0,
              NumEntries = 20,
              NumTombstones = 0,
              NumBuckets = 64
            },
            Vector = std::vector of length 20, capacity 32 = {{
                first = 0x5555a2562c58,
                second = 2
              }, {
                first = 0x5555a260ecd0,
                second = 2
              }, {
                first = 0x5555a2681100,
                second = 2
              }, {
                first = 0x5555a26eb1c0,
                second = 2
              }, {
                first = 0x5555a27539f0,
                second = 2
              }, {
                first = 0x5555a27a31d0,
                second = 2
              }, {
                first = 0x5555a289cb80,
                second = 2
              }, {
                first = 0x5555a2518730,
                second = 2
              }, {
                first = 0x5555a37cd138,
                second = 2
              }, {
                first = 0x5555a3802068,
                second = 2
              }, {
                first = 0x5555a3802548,
                second = 2
              }, {
                first = 0x5555a381aed8,
                second = 3
              }, {
                first = 0x5555a38534c8,
                second = 4
              }, {
                first = 0x5555a59f56e8,
                second = 2
              }, {
                first = 0x5555a59fa968,
                second = 3
              }, {
                first = 0x5555a59fb290,
                second = 2
              }, {
                first = 0x5555a5b9d968,
                second = 2
              }, {
                first = 0x5555a5c331f0,
                second = 2
              }, {
                first = 0x5555a5ec5658,
                second = 2
              }, {
                first = 0x5555a194a9e8,
                second = 3
              }}
          },
          StaticLocalNumbers = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >, clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          DeviceLambdaManglingNumbers = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CXXRecordDecl const*, unsigned int, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, unsigned int> >, clang::CXXRecordDecl const*, unsigned int, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, unsigned int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CXXRecordDecl const*, unsigned int, llvm::DenseMapInfo<clang::CXXRecordDecl const*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl const*, unsigned int> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          ParamIndices = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >, clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::VarDecl const*, unsigned int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, unsigned int> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          FirstLocalImport = 0x0,
          LastLocalImport = 0x0,
          TUDecl = 0x55556e4ecd98,
          ExternCContext = 0x5555a190f468,
          MakeIntegerSeqDecl = 0x5555a2005220,
          TypePackElementDecl = 0x0,
          SourceMgr = @0x55556153b630,
          LangOpts = @0x55556152eb00,
          NoSanitizeL = std::unique_ptr<clang::NoSanitizeList> = {
            get() = 0x55556585fbe0
          },
          XRayFilter = std::unique_ptr<clang::XRayFunctionFilter> = {
            get() = 0x555564e0e120
          },
          ProfList = std::unique_ptr<clang::ProfileList> = {
            get() = 0x555576d8cbe0
          },
          BumpAlloc = {
            <llvm::AllocatorBase<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {<No data fields>}, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            members of llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>:
            CurPtr = 0x5555a64f2510 "",
            End = 0x5555a6511c00 "",
            Slabs = {
              <llvm::SmallVectorImpl<void*>> = {
                <llvm::SmallVectorTemplateBase<void*, true>> = {
                  <llvm::SmallVectorTemplateCommon<void*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a2ce8650,
                      Size = 901,
                      Capacity = 1279
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<void*, 4>> = {
                InlineElts = "\220\315NnUU\000\000P吡UU\000\000\360\006\223\241UU\000\000\020'\223\241UU\000"
              }, <No data fields>},
            CustomSizedSlabs = {
              <llvm::SmallVectorImpl<std::pair<void*, unsigned long> >> = {
                <llvm::SmallVectorTemplateBase<std::pair<void*, unsigned long>, true>> = {
                  <llvm::SmallVectorTemplateCommon<std::pair<void*, unsigned long>, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18d12e8,
                      Size = 0,
                      Capacity = 0
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<std::pair<void*, unsigned long>, 0>> = {<No data fields>}, <No data fields>},
            BytesAllocated = 67318119,
            RedZoneSize = 1
          },
          DiagAllocator = {
            Cached = {{
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d14a8,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1518,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1848,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d18b8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1be8,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1c58,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1f88,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d1ff8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2328,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2398,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d26c8,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2738,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2a68,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2ad8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2e08,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d2e78,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 0 '\000',
                DiagArgumentsKind = "\000\000\000\000\000\000\000\000\000",
                DiagArgumentsVal = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d31a8,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = '\000' <repeats 95 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d3218,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 1 '\001',
                DiagArgumentsKind = "\000\b\n\n\000\000\000\000\000",
                DiagArgumentsVal = {93826281386144, 93826324465712, 93826289069840, 93826320210240, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"&abbrev->~basic_string()", "0", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d3548,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "\f\344\200\002\303\344\200\002\001d\377\377\244I\177\002\244I\177\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d35b8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 2 '\002',
                DiagArgumentsKind = "\b\b\n\n\000\000\000\000\000",
                DiagArgumentsVal = {93826271794144, 93826350590624, 93826284746408, 93826350697816, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"__and_<std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1>> &, long>, std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<std::ch"..., "", "[with _Tp = std::__format::_Sink_iter<wchar_t>]", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d38e8,
                          Size = 2,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "З\304\002З\304\002\001i\377\377Ǘ\304\002Ǘ\304\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d3958,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 1 '\001',
                DiagArgumentsKind = "\000\002\n\n\000\000\000\000\000",
                DiagArgumentsVal = {93826350657376, 0, 93826284746408, 93826347046832, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"__and_<std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1>> &, long>, std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<std::ch"..., "", "[with _Tp = std::__format::_Sink_iter<wchar_t>]", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d3c88,
                          Size = 1,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "{Uy\002\223Uy\002\001\310\376\377g\201\304\002g\201\304\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d3cf8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = "\264Gz\002\264Gz\002\0010\377\377\000\000\000\000\000\000\000\000\000\177\000\000 =\215\241UU\000\000\002\000\000\000\000\000\000\000->", '\000' <repeats 341 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 1 '\001',
                DiagArgumentsKind = "\000\b\002\n\000\000\000\000\000",
                DiagArgumentsVal = {93826281386144, 93826348952656, 1, 93826347046832, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"_TupleConstraints<true, std::thread::_State *, std::default_delete<std::thread::_State>>::__is_explicitly_constructible()", "", "[with _Tp = std::__format::_Sink_iter<wchar_t>]", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4028,
                          Size = 1,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "i\217\203\002\262\217\203\002\001\035\377\3772\035\304\0022\035\304\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4098,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 1 '\001',
                DiagArgumentsKind = "\000\b\n\000\000\000\000\000\000",
                DiagArgumentsVal = {93826283786768, 93826284777712, 93826284746408, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"&__info->~local_info()", "", "", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d43c8,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "\f\344\200\002\303\344\200\002\001^\377\3778#\202\0028#\202\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4438,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 2 '\002',
                DiagArgumentsKind = "\b\b\n\n\000\000\000\000\000",
                DiagArgumentsVal = {93826271794144, 93826350590624, 93826284746408, 93826350697816, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"__and_<std::is_convertible<const std::chrono::duration<long, std::ratio<1, 1>> &, long>, std::__or_<std::chrono::treat_as_floating_point<long>, std::__not_<std::chrono::treat_as_floating_point<std::ch"..., "", "[with _Tp = std::__format::_Sink_iter<wchar_t>]", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4768,
                          Size = 2,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "З\304\002З\304\002\001i\377\377Ǘ\304\002Ǘ\304\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d47d8,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = "\177\025\247\002\177\025\247\002\000\005\305X\000\000\000\000\000\000\000\000\000\177\000\000\000H\215\241UU\000\000\a\000\000\000\000\000\000\000static ", '\000' <repeats 336 times>
                  }, <No data fields>}
              }, {
                NumDiagArgs = 1 '\001',
                DiagArgumentsKind = "\000\003\n\000\002\000\000\000\000",
                DiagArgumentsVal = {0, 0, 93826312595960, 0, 0, 0, 0, 0, 0, 0},
                DiagArgumentsStr = {"basic_string(&\"UTC\"[0], std::allocator<char>())", "", "[with _Tp = std::__format::_Sink_iter<wchar_t>]", "", "", "", "", "", "", ""},
                DiagRanges = {
                  <llvm::SmallVectorImpl<clang::CharSourceRange>> = {
                    <llvm::SmallVectorTemplateBase<clang::CharSourceRange, true>> = {
                      <llvm::SmallVectorTemplateCommon<clang::CharSourceRange, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4b08,
                          Size = 0,
                          Capacity = 8
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::CharSourceRange, 8>> = {
                    InlineElts = "\f\344\200\002\303\344\200\002\001V\377\377ѥ}\002ѥ}\002\001\353OX", '\000' <repeats 71 times>
                  }, <No data fields>},
                FixItHints = {
                  <llvm::SmallVectorImpl<clang::FixItHint>> = {
                    <llvm::SmallVectorTemplateBase<clang::FixItHint, false>> = {
                      <llvm::SmallVectorTemplateCommon<clang::FixItHint, void>> = {
                        <llvm::SmallVectorBase<unsigned int>> = {
                          BeginX = 0x5555a18d4b78,
                          Size = 0,
                          Capacity = 6
                        }, <No data fields>}, 
                    }, <No data fields>}, 
                  <llvm::SmallVectorStorage<clang::FixItHint, 6>> = {
                    InlineElts = '\000' <repeats 383 times>
                  }, <No data fields>}
              }},
            FreeList = {0x5555a18d12f8, 0x5555a18d1698, 0x5555a18d1a38, 0x5555a18d1dd8, 0x5555a18d2178, 0x5555a18d2518, 0x5555a18d28b8, 0x5555a18d2c58, 0x5555a18d2ff8, 0x5555a18d4218, 0x5555a18d4958, 0x5555a18d3398, 0x5555a18d3e78, 0x5555a18d3ad8, 0x5555a18d3738, 0x5555a18d45b8},
            NumFreeListEntries = 16
          },
          ABI = std::unique_ptr<clang::CXXABI> = {
            get() = 0x55559dfa7da0
          },
          AddrSpaceMapMangling = false,
          Target = 0x555561539bc0,
          AuxTarget = 0x0,
          PrintingPolicy = {
            Indentation = 2,
            SuppressSpecifiers = 0,
            SuppressTagKeyword = 1,
            IncludeTagDefinition = 0,
            SuppressScope = 0,
            SuppressUnwrittenScope = 0,
            SuppressInlineNamespace = 1,
            SuppressInitializers = 0,
            ConstantArraySizeAsWritten = 0,
            AnonymousTagLocations = 1,
            SuppressStrongLifetime = 0,
            SuppressLifetimeQualifiers = 0,
            SuppressTemplateArgsInCXXConstructors = 0,
            SuppressDefaultTemplateArgs = 1,
            Bool = 1,
            Nullptr = 1,
            NullptrTypeInNamespace = 1,
            Restrict = 0,
            Alignof = 1,
            UnderscoreAlignof = 0,
            UseVoidForZeroParams = 0,
            SplitTemplateClosers = 0,
            TerseOutput = 0,
            PolishForDeclaration = 0,
            Half = 0,
            MSWChar = 0,
            IncludeNewlines = 1,
            MSVCFormatting = 0,
            ConstantsAsWritten = 0,
            SuppressImplicitBase = 0,
            FullyQualifiedName = 0,
            PrintCanonicalTypes = 0,
            PrintInjectedClassNameWithArguments = 1,
            UsePreferredNames = 1,
            AlwaysIncludeTypeForTemplateArgument = 0,
            CleanUglifiedParameters = 0,
            EntireContentsOfLargeArray = 0,
            UseEnumerators = 1,
            PrintAdjustedArrayType = 1,
            PrintSubstitutedTemplateParameters = 0,
            Callbacks = 0x0
          },
          InterpContext = std::unique_ptr<clang::interp::Context> = {
            get() = 0x0
          },
          ParentMapCtx = std::unique_ptr<clang::ParentMapContext> = {
            get() = 0x0
          },
          ListNodeFreeList = 0x0,
          Idents = @0x5555a1bf38c0,
          Selectors = @0x5555a1bf3940,
          BuiltinInfo = @0x5555a1860160,
          TUKind = clang::TU_Complete,
          DeclarationNames = {
            Ctx = @0x5555a18d0ae0,
            CXXConstructorNames = {
              <llvm::FoldingSetImpl<llvm::FoldingSet<clang::detail::CXXSpecialNameExtra>, clang::detail::CXXSpecialNameExtra>> = {
                <llvm::FoldingSetBase> = {
                  Buckets = 0x5555a5e73a70,
                  NumBuckets = 1024,
                  NumNodes = 1180
                }, <No data fields>}, <No data fields>},
            CXXDestructorNames = {
              <llvm::FoldingSetImpl<llvm::FoldingSet<clang::detail::CXXSpecialNameExtra>, clang::detail::CXXSpecialNameExtra>> = {
                <llvm::FoldingSetBase> = {
                  Buckets = 0x5555a2ff5cc0,
                  NumBuckets = 4096,
                  NumNodes = 6746
                }, <No data fields>}, <No data fields>},
            CXXConversionFunctionNames = {
              <llvm::FoldingSetImpl<llvm::FoldingSet<clang::detail::CXXSpecialNameExtra>, clang::detail::CXXSpecialNameExtra>> = {
                <llvm::FoldingSetBase> = {
                  Buckets = 0x55556d37f3c0,
                  NumBuckets = 64,
                  NumNodes = 66
                }, <No data fields>}, <No data fields>},
            CXXOperatorNames = {{
                Kind = clang::OO_None,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_New,
                FETokenInfo = 0x5555a193b5f9
              }, {
                Kind = clang::OO_Delete,
                FETokenInfo = 0x5555a193b639
              }, {
                Kind = clang::OO_Array_New,
                FETokenInfo = 0x5555a193b619
              }, {
                Kind = clang::OO_Array_Delete,
                FETokenInfo = 0x5555a193b659
              }, {
                Kind = clang::OO_Plus,
                FETokenInfo = 0x5555a1f7e079
              }, {
                Kind = clang::OO_Minus,
                FETokenInfo = 0x5555a1939619
              }, {
                Kind = clang::OO_Star,
                FETokenInfo = 0x5555a193c6b9
              }, {
                Kind = clang::OO_Slash,
                FETokenInfo = 0x5555a2bbf269
              }, {
                Kind = clang::OO_Percent,
                FETokenInfo = 0x5555a2bbf289
              }, {
                Kind = clang::OO_Caret,
                FETokenInfo = 0x5555a2bbc569
              }, {
                Kind = clang::OO_Amp,
                FETokenInfo = 0x5555a2bbc529
              }, {
                Kind = clang::OO_Pipe,
                FETokenInfo = 0x5555a2bbc549
              }, {
                Kind = clang::OO_Tilde,
                FETokenInfo = 0x5555a2bbc589
              }, {
                Kind = clang::OO_Exclaim,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_Equal,
                FETokenInfo = 0x5555a193b539
              }, {
                Kind = clang::OO_Less,
                FETokenInfo = 0x5555a2bbf329
              }, {
                Kind = clang::OO_Greater,
                FETokenInfo = 0x5555a2bbf369
              }, {
                Kind = clang::OO_PlusEqual,
                FETokenInfo = 0x5555a1f7fc79
              }, {
                Kind = clang::OO_MinusEqual,
                FETokenInfo = 0x5555a1f816f9
              }, {
                Kind = clang::OO_StarEqual,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_SlashEqual,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_PercentEqual,
                FETokenInfo = 0x5555a2bbf249
              }, {
                Kind = clang::OO_CaretEqual,
                FETokenInfo = 0x5555a1f81759
              }, {
                Kind = clang::OO_AmpEqual,
                FETokenInfo = 0x5555a1f81719
              }, {
                Kind = clang::OO_PipeEqual,
                FETokenInfo = 0x5555a1f81739
              }, {
                Kind = clang::OO_LessLess,
                FETokenInfo = 0x5555a2bbcfc9
              }, {
                Kind = clang::OO_GreaterGreater,
                FETokenInfo = 0x5555a2bbd0c9
              }, {
                Kind = clang::OO_LessLessEqual,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_GreaterGreaterEqual,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_EqualEqual,
                FETokenInfo = 0x5555a193c479
              }, {
                Kind = clang::OO_ExclaimEqual,
                FETokenInfo = 0x5555a28fb479
              }, {
                Kind = clang::OO_LessEqual,
                FETokenInfo = 0x5555a2bbf349
              }, {
                Kind = clang::OO_GreaterEqual,
                FETokenInfo = 0x5555a2bbf389
              }, {
                Kind = clang::OO_Spaceship,
                FETokenInfo = 0x5555a193c499
              }, {
                Kind = clang::OO_AmpAmp,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_PipePipe,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_PlusPlus,
                FETokenInfo = 0x5555a193c419
              }, {
                Kind = clang::OO_MinusMinus,
                FETokenInfo = 0x5555a193c439
              }, {
                Kind = clang::OO_Comma,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_ArrowStar,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_Arrow,
                FETokenInfo = 0x5555a28fb419
              }, {
                Kind = clang::OO_Call,
                FETokenInfo = 0x5555a193b199
              }, {
                Kind = clang::OO_Subscript,
                FETokenInfo = 0x5555a1f7fbf9
              }, {
                Kind = clang::OO_Conditional,
                FETokenInfo = 0x0
              }, {
                Kind = clang::OO_Coawait,
                FETokenInfo = 0x0
              }},
            CXXLiteralOperatorNames = {
              <llvm::FoldingSetImpl<llvm::FoldingSet<clang::detail::CXXLiteralOperatorIdName>, clang::detail::CXXLiteralOperatorIdName>> = {
                <llvm::FoldingSetBase> = {
                  Buckets = 0x555563d31a50,
                  NumBuckets = 64,
                  NumNodes = 11
                }, <No data fields>}, <No data fields>},
            CXXDeductionGuideNames = {
              <llvm::FoldingSetImpl<llvm::FoldingSet<clang::detail::CXXDeductionGuideNameExtra>, clang::detail::CXXDeductionGuideNameExtra>> = {
                <llvm::FoldingSetBase> = {
                  Buckets = 0x5555773b20e0,
                  NumBuckets = 64,
                  NumNodes = 27
                }, <No data fields>}, <No data fields>}
          },
          ExternalSource = {
            Obj = 0x0
          },
          Listener = 0x0,
          CUDAConstantEvalCtx = {
            NoWrongSidedVars = false
          },
          Comments = {
            SourceMgr = @0x55556153b630,
            OrderedComments = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > >, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > > > >, clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > >, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > > > >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > >, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, std::map<unsigned int, clang::RawComment*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, clang::RawComment*> > > > >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            CommentBeginLine = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >, clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            CommentEndOffset = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >, clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::RawComment*, unsigned int, llvm::DenseMapInfo<clang::RawComment*, void>, llvm::detail::DenseMapPair<clang::RawComment*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            }
          },
          CommentsLoaded = false,
          DeclRawComments = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, clang::RawComment const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::RawComment const*> >, clang::Decl const*, clang::RawComment const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::RawComment const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, clang::RawComment const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::RawComment const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          RedeclChainComments = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >, clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          CommentlessRedeclChains = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >, clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, clang::Decl const*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::Decl const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          ParsedComments = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl const*, clang::comments::FullComment*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::comments::FullComment*> >, clang::Decl const*, clang::comments::FullComment*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::comments::FullComment*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl const*, clang::comments::FullComment*, llvm::DenseMapInfo<clang::Decl const*, void>, llvm::detail::DenseMapPair<clang::Decl const*, clang::comments::FullComment*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          CommentCommandTraits = {
            NextID = 199,
            Allocator = @0x5555a18d1298,
            RegisteredCommands = {
              <llvm::SmallVectorImpl<clang::comments::CommandInfo*>> = {
                <llvm::SmallVectorTemplateBase<clang::comments::CommandInfo*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::comments::CommandInfo*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18d5210,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::comments::CommandInfo*, 4>> = {
                InlineElts = '\000' <repeats 31 times>
              }, <No data fields>}
          },
          VoidTy = {
            Stored = {
              Value = {
                Value = 93825411239424
              }
            }
          },
          BoolTy = {
            Stored = {
              Value = {
                Value = 93825411239456
              }
            }
          },
          CharTy = {
            Stored = {
              Value = {
                Value = 93825411239488
              }
            }
          },
          WCharTy = {
            Stored = {
              Value = {
                Value = 93825411240864
              }
            }
          },
          WideCharTy = {
            Stored = {
              Value = {
                Value = 93825411240864
              }
            }
          },
          WIntTy = {
            Stored = {
              Value = {
                Value = 93825411239744
              }
            }
          },
          Char8Ty = {
            Stored = {
              Value = {
                Value = 93825411240896
              }
            }
          },
          Char16Ty = {
            Stored = {
              Value = {
                Value = 93825411240928
              }
            }
          },
          Char32Ty = {
            Stored = {
              Value = {
                Value = 93825411240960
              }
            }
          },
          SignedCharTy = {
            Stored = {
              Value = {
                Value = 93825411239520
              }
            }
          },
          ShortTy = {
            Stored = {
              Value = {
                Value = 93825411239552
              }
            }
          },
          IntTy = {
            Stored = {
              Value = {
                Value = 93825411239584
              }
            }
          },
          LongTy = {
            Stored = {
              Value = {
                Value = 93825411239616
              }
            }
          },
          LongLongTy = {
            Stored = {
              Value = {
                Value = 93825411239648
              }
            }
          },
          Int128Ty = {
            Stored = {
              Value = {
                Value = 93825411240800
              }
            }
          },
          UnsignedCharTy = {
            Stored = {
              Value = {
                Value = 93825411239680
              }
            }
          },
          UnsignedShortTy = {
            Stored = {
              Value = {
                Value = 93825411239712
              }
            }
          },
          UnsignedIntTy = {
            Stored = {
              Value = {
                Value = 93825411239744
              }
            }
          },
          UnsignedLongTy = {
            Stored = {
              Value = {
                Value = 93825411239776
              }
            }
          },
          UnsignedLongLongTy = {
            Stored = {
              Value = {
                Value = 93825411239808
              }
            }
          },
          UnsignedInt128Ty = {
            Stored = {
              Value = {
                Value = 93825411240832
              }
            }
          },
          FloatTy = {
            Stored = {
              Value = {
                Value = 93825411239840
              }
            }
          },
          DoubleTy = {
            Stored = {
              Value = {
                Value = 93825411239872
              }
            }
          },
          LongDoubleTy = {
            Stored = {
              Value = {
                Value = 93825411239904
              }
            }
          },
          Float128Ty = {
            Stored = {
              Value = {
                Value = 93825411239936
              }
            }
          },
          Ibm128Ty = {
            Stored = {
              Value = {
                Value = 93825411239968
              }
            }
          },
          ShortAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240032
              }
            }
          },
          AccumTy = {
            Stored = {
              Value = {
                Value = 93825411240064
              }
            }
          },
          LongAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240096
              }
            }
          },
          UnsignedShortAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240128
              }
            }
          },
          UnsignedAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240160
              }
            }
          },
          UnsignedLongAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240192
              }
            }
          },
          ShortFractTy = {
            Stored = {
              Value = {
                Value = 93825411240224
              }
            }
          },
          FractTy = {
            Stored = {
              Value = {
                Value = 93825411240256
              }
            }
          },
          LongFractTy = {
            Stored = {
              Value = {
                Value = 93825411240288
              }
            }
          },
          UnsignedShortFractTy = {
            Stored = {
              Value = {
                Value = 93825411240320
              }
            }
          },
          UnsignedFractTy = {
            Stored = {
              Value = {
                Value = 93825411240352
              }
            }
          },
          UnsignedLongFractTy = {
            Stored = {
              Value = {
                Value = 93825411240384
              }
            }
          },
          SatShortAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240416
              }
            }
          },
          SatAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240448
              }
            }
          },
          SatLongAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240480
              }
            }
          },
          SatUnsignedShortAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240512
              }
            }
          },
          SatUnsignedAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240544
              }
            }
          },
          SatUnsignedLongAccumTy = {
            Stored = {
              Value = {
                Value = 93825411240576
              }
            }
          },
          SatShortFractTy = {
            Stored = {
              Value = {
                Value = 93825411240608
              }
            }
          },
          SatFractTy = {
            Stored = {
              Value = {
                Value = 93825411240640
              }
            }
          },
          SatLongFractTy = {
            Stored = {
              Value = {
                Value = 93825411240672
              }
            }
          },
          SatUnsignedShortFractTy = {
            Stored = {
              Value = {
                Value = 93825411240704
              }
            }
          },
          SatUnsignedFractTy = {
            Stored = {
              Value = {
                Value = 93825411240736
              }
            }
          },
          SatUnsignedLongFractTy = {
            Stored = {
              Value = {
                Value = 93825411240768
              }
            }
          },
          HalfTy = {
            Stored = {
              Value = {
                Value = 93825411241392
              }
            }
          },
          BFloat16Ty = {
            Stored = {
              Value = {
                Value = 93825411241424
              }
            }
          },
          Float16Ty = {
            Stored = {
              Value = {
                Value = 93825411240000
              }
            }
          },
          VoidPtrTy = {
            Stored = {
              Value = {
                Value = 93825411241312
              }
            }
          },
          NullPtrTy = {
            Stored = {
              Value = {
                Value = 93825411241360
              }
            }
          },
          DependentTy = {
            Stored = {
              Value = {
                Value = 93825411240992
              }
            }
          },
          OverloadTy = {
            Stored = {
              Value = {
                Value = 93825411241024
              }
            }
          },
          BoundMemberTy = {
            Stored = {
              Value = {
                Value = 93825411241056
              }
            }
          },
          UnknownAnyTy = {
            Stored = {
              Value = {
                Value = 93825411241120
              }
            }
          },
          BuiltinFnTy = {
            Stored = {
              Value = {
                Value = 93825411241184
              }
            }
          },
          PseudoObjectTy = {
            Stored = {
              Value = {
                Value = 93825411241088
              }
            }
          },
          ARCUnbridgedCastTy = {
            Stored = {
              Value = {
                Value = 93825411241152
              }
            }
          },
          ObjCBuiltinIdTy = {
            Stored = {
              Value = {
                Value = 93825411241216
              }
            }
          },
          ObjCBuiltinClassTy = {
            Stored = {
              Value = {
                Value = 93825411241248
              }
            }
          },
          ObjCBuiltinSelTy = {
            Stored = {
              Value = {
                Value = 93825411241280
              }
            }
          },
          ObjCBuiltinBoolTy = {
            Stored = {
              Value = {
                Value = 93825411239520
              }
            }
          },
          OCLImage1dROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dArrayROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dBufferROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dDepthROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayDepthROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAAROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAAROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAADepthROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAADepthROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage3dROTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dArrayWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dBufferWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dDepthWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayDepthWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAAWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAAWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAADepthWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAADepthWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage3dWOTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dArrayRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage1dBufferRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dDepthRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayDepthRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAARWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAARWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dMSAADepthRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage2dArrayMSAADepthRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLImage3dRWTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLSamplerTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLEventTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLClkEventTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLQueueTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLReserveIDTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          IncompleteMatrixIdxTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OMPArraySectionTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OMPArrayShapingTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OMPIteratorTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCMcePayloadTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImePayloadTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCRefPayloadTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCSicPayloadTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCMceResultTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImeResultTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCRefResultTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCSicResultTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImeResultSingleRefStreamoutTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImeResultDualRefStreamoutTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImeSingleRefStreaminTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          OCLIntelSubgroupAVCImeDualRefStreaminTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt16Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt32Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt64Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint16Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint32Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint64Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat16Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat32Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat64Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveBFloat16Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt8x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt16x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt32x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt64x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint8x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint16x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint32x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint64x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat16x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat32x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat64x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveBFloat16x2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt8x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt16x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt32x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt64x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint8x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint16x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint32x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint64x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat16x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat32x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat64x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveBFloat16x3Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt8x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt16x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt32x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveInt64x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint8x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint16x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint32x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveUint64x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat16x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat32x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveFloat64x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveBFloat16x4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          SveBoolTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          VectorQuadTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          VectorPairTy = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8mf8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8mf4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt8m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8mf8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8mf4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint8m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16mf4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt16m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16mf4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint16m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt32mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt32m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt32m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt32m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt32m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint32mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint32m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint32m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint32m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint32m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt64m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt64m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt64m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvInt64m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint64m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint64m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint64m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvUint64m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16mf4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat16m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat32mf2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat32m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat32m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat32m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat32m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat64m1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat64m2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat64m4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvFloat64m8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool1Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool2Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool4Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool8Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool16Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool32Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          RvvBool64Ty = {
            Stored = {
              Value = {
                Value = 0
              }
            }
          },
          AutoDeductTy = {
            Value = {
              Value = 93826271841504
            }
          },
          AutoRRefDeductTy = {
            Value = {
              Value = 93826276624832
            }
          },
          VaListTagDecl = 0x55556e4edb28,
          MSGuidTagDecl = 0x0,
          CUDADeviceVarODRUsedByHost = {
            <llvm::detail::DenseSetImpl<clang::VarDecl const*, llvm::DenseMap<clang::VarDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseSetPair<clang::VarDecl const*> >, llvm::DenseMapInfo<clang::VarDecl const*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseSetPair<clang::VarDecl const*> >, clang::VarDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseSetPair<clang::VarDecl const*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::VarDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseSetPair<clang::VarDecl const*> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          CUDAExternalDeviceDeclODRUsedByHost = {
            <llvm::detail::DenseSetImpl<clang::ValueDecl const*, llvm::DenseMap<clang::ValueDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::ValueDecl const*, void>, llvm::detail::DenseSetPair<clang::ValueDecl const*> >, llvm::DenseMapInfo<clang::ValueDecl const*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::ValueDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::ValueDecl const*, void>, llvm::detail::DenseSetPair<clang::ValueDecl const*> >, clang::ValueDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::ValueDecl const*, void>, llvm::detail::DenseSetPair<clang::ValueDecl const*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::ValueDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::ValueDecl const*, void>, llvm::detail::DenseSetPair<clang::ValueDecl const*> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          CompCategories = {
            Ctx = @0x5555a18d0ae0,
            Data = {
              <llvm::DenseMapBase<llvm::DenseMap<char, clang::ComparisonCategoryInfo, llvm::DenseMapInfo<char, void>, llvm::detail::DenseMapPair<char, clang::ComparisonCategoryInfo> >, char, clang::ComparisonCategoryInfo, llvm::DenseMapInfo<char, void>, llvm::detail::DenseMapPair<char, clang::ComparisonCategoryInfo> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<char, clang::ComparisonCategoryInfo, llvm::DenseMapInfo<char, void>, llvm::detail::DenseMapPair<char, clang::ComparisonCategoryInfo> >:
              Buckets = 0x5555a1d53550,
              NumEntries = 1,
              NumTombstones = 0,
              NumBuckets = 64
            },
            StdNS = 0x5555a1d340f8
          },
          NumImplicitDefaultConstructors = 3869,
          NumImplicitDefaultConstructorsDeclared = 148,
          NumImplicitCopyConstructors = 4175,
          NumImplicitCopyConstructorsDeclared = 404,
          NumImplicitMoveConstructors = 4055,
          NumImplicitMoveConstructorsDeclared = 295,
          NumImplicitCopyAssignmentOperators = 4194,
          NumImplicitCopyAssignmentOperatorsDeclared = 270,
          NumImplicitMoveAssignmentOperators = 4044,
          NumImplicitMoveAssignmentOperatorsDeclared = 139,
          NumImplicitDestructors = 4152,
          NumImplicitDestructorsDeclared = 425,
          Deallocations = {
            <llvm::SmallVectorImpl<std::pair<void (*)(void*), void*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<void (*)(void*), void*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<void (*)(void*), void*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a546bac0,
                    Size = 6075,
                    Capacity = 8703
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<void (*)(void*), void*>, 16>> = {
              InlineElts = "\005\300bZUU\000\000(v\227\241UU\000\000\005\300bZUU\000\000\370{\227\241UU\000\000\005\300bZUU\000\000X\177\227\241UU\000\000\005\300bZUU\000\000h\203\227\241UU\000\000\005\300bZUU\000\000x\223\227\241UU\000\000\005\300bZUU\000\000\030֙\241UU\000\000\033\272bZUU\000\000H0\232\241UU\000\000\033\272bZUU\000\000\2306\232\241UU\000\000\005\300bZUU\000\000HC\232\241UU\000\000\005\300bZUU\000\000@G\232\241UU\000\000\005\300bZUU\000\000X^\232\241UU\000\000\005\300bZUU\000\000\350k\232\241UU\000\000\005\300bZUU\000\000\210"...
            }, <No data fields>},
          LastSDM = {
            Value = 93825572835840
          },
          TraversalScope = std::vector of length 1, capacity 1 = {0x55556e4ecd98},
          VTContext = std::unique_ptr<clang::VTableContextBase> = {
            get() = 0x0
          },
          SectionInfos = {
            <llvm::StringMapImpl> = {
              TheTable = 0x0,
              NumBuckets = 0,
              NumItems = 0,
              NumTombstones = 0,
              ItemSize = 24
            }, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},
          OMPTraitInfoVector = {
            <llvm::SmallVectorImpl<std::unique_ptr<clang::OMPTraitInfo, std::default_delete<clang::OMPTraitInfo> > >> = {
              <llvm::SmallVectorTemplateBase<std::unique_ptr<clang::OMPTraitInfo, std::default_delete<clang::OMPTraitInfo> >, false>> = {
                <llvm::SmallVectorTemplateCommon<std::unique_ptr<clang::OMPTraitInfo, std::default_delete<clang::OMPTraitInfo> >, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18d5bb8,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::unique_ptr<clang::OMPTraitInfo, std::default_delete<clang::OMPTraitInfo> >, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>}
        }
        ast_consumer = @0x555561544820: {
          _vptr.ASTConsumer = 0x5555612695d8 <vtable for clang::ASTConsumer+16>,
          SemaConsumer = false
        }
        sema = @0x5555a18ddbf0: {
          _vptr.Sema = 0x555561261828 <vtable for clang::Sema+16>,
          ExternalSource = {
            Obj = 0x0
          },
          OpenCLFeatures = {
            OptMap = {
              <llvm::StringMapImpl> = {
                TheTable = 0x555565132610,
                NumBuckets = 64,
                NumItems = 38,
                NumTombstones = 0,
                ItemSize = 32
              }, 
              <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
                <llvm::MallocAllocator> = {
                  <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}
          },
          CurFPFeatures = {
            Value = 249
          },
          LangOpts = @0x55556152eb00,
          PP = @0x5555a1bf36a0,
          Context = @0x5555a18d0ae0,
          Consumer = @0x555561544820,
          Diags = @0x5555615324b0,
          SourceMgr = @0x55556153b630,
          CollectStats = false,
          CodeCompleter = 0x0,
          CurContext = 0x5555a64f20d8,
          OriginalLexicalContext = 0x0,
          VAListTagName = {
            Ptr = 93826271132024
          },
          MSStructPragmaOn = false,
          MSPointerToMemberRepresentationMethod = clang::LangOptions::PPTMK_BestCase,
          CurrentSEHFinally = {
            <llvm::SmallVectorImpl<clang::Scope*>> = {
              <llvm::SmallVectorTemplateBase<clang::Scope*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Scope*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18ddc90,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Scope*, 2>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          ImplicitMSInheritanceAttrLoc = {
            ID = 0
          },
          TypoExprs = {
            <llvm::SmallVectorImpl<clang::TypoExpr*>> = {
              <llvm::SmallVectorTemplateBase<clang::TypoExpr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::TypoExpr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18ddcb8,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::TypoExpr*, 2>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          PragmaClangBSSSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangDataSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangRodataSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangRelroSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          PragmaClangTextSection = {
            SectionName = "",
            Valid = false,
            PragmaLocation = {
              ID = 0
            }
          },
          VtorDispStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18ddda0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::MSVtorDispMode>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023\000\000\000\000\000\000\000\001", '\000' <repeats 15 times>, "%`\236]UU\000\000\023\000\000\000\000\000\000\000\001", '\000' <repeats 14 times>
              }, <No data fields>},
            DefaultValue = clang::MSVtorDispMode::ForVBaseOverride,
            CurrentValue = clang::MSVtorDispMode::ForVBaseOverride,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          AlignPackStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18dde00,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::Sema::AlignPackInfo>::Slot, 2>> = {
                InlineElts = '\000' <repeats 63 times>
              }, <No data fields>},
            DefaultValue = {
              PackAttr = false,
              AlignMode = clang::Sema::AlignPackInfo::Native,
              PackNumber = 255 '\377',
              XLStack = false
            },
            CurrentValue = {
              PackAttr = false,
              AlignMode = clang::Sema::AlignPackInfo::Native,
              PackNumber = 255 '\377',
              XLStack = false
            },
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          AlignPackIncludeStack = {
            <llvm::SmallVectorImpl<clang::Sema::AlignPackIncludeState>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::AlignPackIncludeState, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::AlignPackIncludeState, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18dde60,
                    Size = 0,
                    Capacity = 8
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::AlignPackIncludeState, 8>> = {
              InlineElts = '\000' <repeats 95 times>
            }, <No data fields>},
          DataSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18dded0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          BSSSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18ddf38,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          ConstSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18ddfa0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          CodeSegStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de008,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::StringLiteral*>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = 0x0,
            CurrentValue = 0x0,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          StrictGuardStackCheckStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<bool>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<bool>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<bool>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de070,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<bool>::Slot, 2>> = {
                InlineElts = "%`\236]UU\000\000\023", '\000' <repeats 23 times>, "%`\236]UU\000\000\023", '\000' <repeats 22 times>
              }, <No data fields>},
            DefaultValue = false,
            CurrentValue = false,
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          FpPragmaStack = {
            Stack = {
              <llvm::SmallVectorImpl<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot>> = {
                <llvm::SmallVectorTemplateBase<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de0c8,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Sema::PragmaStack<clang::FPOptionsOverride>::Slot, 2>> = {
                InlineElts = '\000' <repeats 63 times>
              }, <No data fields>},
            DefaultValue = {
              Options = {
                Value = 0
              },
              OverrideMask = 0
            },
            CurrentValue = {
              Options = {
                Value = 0
              },
              OverrideMask = 0
            },
            CurrentPragmaLocation = {
              ID = 0
            }
          },
          NullabilityMap = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FileID, clang::FileNullability, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, clang::FileNullability> >, clang::FileID, clang::FileNullability, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, clang::FileNullability> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FileID, clang::FileNullability, llvm::DenseMapInfo<clang::FileID, void>, llvm::detail::DenseMapPair<clang::FileID, clang::FileNullability> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Cache = {
              File = {
                ID = 0
              },
              Nullability = {
                PointerLoc = {
                  ID = 0
                },
                PointerEndLoc = {
                  ID = 0
                },
                PointerKind = 0 '\000',
                SawTypeNullability = false
              }
            }
          },
          CurInitSeg = 0x0,
          CurInitSegLoc = {
            ID = 0
          },
          FunctionToSectionMap = {
            <llvm::StringMapImpl> = {
              TheTable = 0x0,
              NumBuckets = 0,
              NumItems = 0,
              NumTombstones = 0,
              ItemSize = 32
            }, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>},
          VisContext = 0x55557703a220,
          PragmaAttributeStack = {
            <llvm::SmallVectorImpl<clang::Sema::PragmaAttributeGroup>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::PragmaAttributeGroup, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::PragmaAttributeGroup, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de188,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::PragmaAttributeGroup, 2>> = {
              InlineElts = '\000' <repeats 287 times>
            }, <No data fields>},
          PragmaAttributeCurrentTargetDecl = 0x0,
          OptimizeOffPragmaLocation = {
            ID = 0
          },
          MSPragmaOptimizeIsOn = true,
          MSFunctionNoBuiltins = {
            <llvm::SetVector<llvm::StringRef, llvm::SmallVector<llvm::StringRef, 4>, llvm::SmallDenseSet<llvm::StringRef, 4, llvm::DenseMapInfo<llvm::StringRef, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<llvm::StringRef, llvm::SmallDenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >, llvm::DenseMapInfo<llvm::StringRef, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >, llvm::StringRef, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<llvm::StringRef, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<llvm::StringRef, void>, llvm::detail::DenseSetPair<llvm::StringRef> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000\000\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000\000\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000\000\377\377\377\377\377\377\377\377\000\000\000\000\000\000\000"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<llvm::StringRef>> = {
                  <llvm::SmallVectorTemplateBase<llvm::StringRef, true>> = {
                    <llvm::SmallVectorTemplateCommon<llvm::StringRef, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18de310,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<llvm::StringRef, 4>> = {
                  InlineElts = '\000' <repeats 63 times>
                }, <No data fields>}
            }, <No data fields>},
          IsBuildingRecoveryCallExpr = false,
          Cleanup = {
            ExprNeedsCleanups = false,
            CleanupsHaveSideEffects = false
          },
          ExprCleanupObjects = {
            <llvm::SmallVectorImpl<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*> >> = {
              <llvm::SmallVectorTemplateBase<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*>, true>> = {
                <llvm::SmallVectorTemplateCommon<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de368,
                    Size = 0,
                    Capacity = 8
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<llvm::PointerUnion<clang::BlockDecl*, clang::CompoundLiteralExpr*>, 8>> = {
              InlineElts = '\000' <repeats 63 times>
            }, <No data fields>},
          MaybeODRUseExprs = {
            set_ = {
              <llvm::SmallPtrSetImpl<clang::Expr*>> = {
                <llvm::SmallPtrSetImplBase> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, 
                  members of llvm::SmallPtrSetImplBase:
                  SmallArray = 0x5555a18de3c8,
                  CurArray = 0x5555a18de3c8,
                  CurArraySize = 4,
                  NumNonEmpty = 0,
                  NumTombstones = 0
                }, <No data fields>}, 
              members of llvm::SmallPtrSet<clang::Expr*, 4>:
              SmallStorage = {0x5555a64e7878, 0xfffffffffffffffe, 0x0, 0x0}
            },
            vector_ = {
              <llvm::SmallVectorImpl<clang::Expr*>> = {
                <llvm::SmallVectorTemplateBase<clang::Expr*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::Expr*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de3f8,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::Expr*, 4>> = {
                InlineElts = "xxN\246UU\000\000شM\246UU", '\000' <repeats 17 times>
              }, <No data fields>}
          },
          CachedFunctionScope = std::unique_ptr<clang::sema::FunctionScopeInfo> = {
            get() = 0x55559de6e1a0
          },
          FunctionScopes = {
            <llvm::SmallVectorImpl<clang::sema::FunctionScopeInfo*>> = {
              <llvm::SmallVectorTemplateBase<clang::sema::FunctionScopeInfo*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::sema::FunctionScopeInfo*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556e56ad90,
                    Size = 0,
                    Capacity = 9
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::sema::FunctionScopeInfo*, 4>> = {
              InlineElts = "\260\251\240\235UU\000\000\000\270\221\236UU\000\000\360\b\215\235UU\000\000\300u\222xUU\000"
            }, <No data fields>},
          FunctionScopesStart = 0,
          InventedParameterInfos = {
            <llvm::SmallVectorImpl<clang::InventedTemplateParameterInfo>> = {
              <llvm::SmallVectorTemplateBase<clang::InventedTemplateParameterInfo, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::InventedTemplateParameterInfo, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de468,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::InventedTemplateParameterInfo, 4>> = {
              InlineElts = "\000\000\000\000\000\000\000\000\200䍡UU\000\000\000\000\000\000\004", '\000' <repeats 202 times>
            }, <No data fields>},
          InventedParameterInfosStart = 0,
          ExtVectorDecls = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::TypedefNameDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::TypedefNameDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::TypedefNameDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de560,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::TypedefNameDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::TypedefNameDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::TypedefNameDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::TypedefNameDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de580,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::TypedefNameDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>}
          },
          FieldCollector = std::unique_ptr<clang::CXXFieldCollector> = {
            get() = 0x55559b969200
          },
          UnusedPrivateFields = {
            <llvm::SetVector<clang::NamedDecl*, llvm::SmallVector<clang::NamedDecl*, 16>, llvm::SmallDenseSet<clang::NamedDecl*, 16, llvm::DenseMapInfo<clang::NamedDecl*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::NamedDecl*, llvm::SmallDenseMap<clang::NamedDecl*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >, llvm::DenseMapInfo<clang::NamedDecl*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::NamedDecl*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >, clang::NamedDecl*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::NamedDecl*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseSetPair<clang::NamedDecl*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::NamedDecl*>> = {
                  <llvm::SmallVectorTemplateBase<clang::NamedDecl*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::NamedDecl*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18de630,
                        Size = 0,
                        Capacity = 16
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::NamedDecl*, 16>> = {
                  InlineElts = '\000' <repeats 127 times>
                }, <No data fields>}
            }, <No data fields>},
          UnusedLocalTypedefNameCandidates = {
            <llvm::SetVector<clang::TypedefNameDecl const*, llvm::SmallVector<clang::TypedefNameDecl const*, 4>, llvm::SmallDenseSet<clang::TypedefNameDecl const*, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::TypedefNameDecl const*, llvm::SmallDenseMap<clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >, clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::TypedefNameDecl const*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::TypedefNameDecl const*, void>, llvm::detail::DenseSetPair<clang::TypedefNameDecl const*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::TypedefNameDecl const*>> = {
                  <llvm::SmallVectorTemplateBase<clang::TypedefNameDecl const*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::TypedefNameDecl const*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18de6e8,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::TypedefNameDecl const*, 4>> = {
                  InlineElts = '\000' <repeats 31 times>
                }, <No data fields>}
            }, <No data fields>},
          DeleteExprs = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FieldDecl*, unsigned int, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, unsigned int> >, clang::FieldDecl*, unsigned int, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FieldDecl*, unsigned int, llvm::DenseMapInfo<clang::FieldDecl*, void>, llvm::detail::DenseMapPair<clang::FieldDecl*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          PureVirtualClassDiagSet = std::unique_ptr<llvm::SmallPtrSet<clang::CXXRecordDecl const*, 8>> = {
            get() = 0x0
          },
          ParsingInitForAutoVars = {
            <llvm::SmallPtrSetImpl<clang::Decl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18de760,
                CurArray = 0x5555a18de760,
                CurArraySize = 4,
                NumNonEmpty = 3,
                NumTombstones = 3
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::Decl const*, 4>:
            SmallStorage = {0xfffffffffffffffe, 0xfffffffffffffffe, 0xfffffffffffffffe, 0x0}
          },
          TentativeDefinitions = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::VarDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::VarDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::VarDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de790,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::VarDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::VarDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::VarDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::VarDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de7b0,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::VarDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>}
          },
          ExternalDeclarations = {
            <llvm::SmallVectorImpl<clang::VarDecl*>> = {
              <llvm::SmallVectorTemplateBase<clang::VarDecl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::VarDecl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de7d0,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::VarDecl*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          UnusedFileScopedDecls = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::DeclaratorDecl const*>> = {
                <llvm::SmallVectorTemplateBase<clang::DeclaratorDecl const*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::DeclaratorDecl const*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de800,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::DeclaratorDecl const*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::DeclaratorDecl const*>> = {
                <llvm::SmallVectorTemplateBase<clang::DeclaratorDecl const*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::DeclaratorDecl const*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x55556bff3700,
                      Size = 102,
                      Capacity = 191
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::DeclaratorDecl const*, 2>> = {
                InlineElts = "\260d\224\241UU\000\000\000\212\224\241UU\000"
              }, <No data fields>}
          },
          DelegatingCtorDecls = {
            Loaded = {
              <llvm::SmallVectorImpl<clang::CXXConstructorDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::CXXConstructorDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::CXXConstructorDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18de840,
                      Size = 0,
                      Capacity = 2
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::CXXConstructorDecl*, 2>> = {
                InlineElts = '\000' <repeats 15 times>
              }, <No data fields>},
            Local = {
              <llvm::SmallVectorImpl<clang::CXXConstructorDecl*>> = {
                <llvm::SmallVectorTemplateBase<clang::CXXConstructorDecl*, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::CXXConstructorDecl*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x555576d1b790,
                      Size = 25,
                      Capacity = 47
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::CXXConstructorDecl*, 2>> = {
                InlineElts = "`\322\035\242UU\000\0000\234\343\242UU\000"
              }, <No data fields>}
          },
          DelayedOverridingExceptionSpecChecks = {
            <llvm::SmallVectorImpl<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de880,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::CXXMethodDecl const*, clang::CXXMethodDecl const*>, 2>> = {
              InlineElts = "h\350&\245UU\000\000h\253&\245UU\000\000\300\304\023\243UU\000\000\340Z\r\243UU\000"
            }, <No data fields>},
          DelayedEquivalentExceptionSpecChecks = {
            <llvm::SmallVectorImpl<std::pair<clang::FunctionDecl*, clang::FunctionDecl*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::FunctionDecl*, clang::FunctionDecl*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::FunctionDecl*, clang::FunctionDecl*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de8b0,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::FunctionDecl*, clang::FunctionDecl*>, 2>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          LateParsedTemplateMap = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FunctionDecl const*, unsigned int, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, unsigned int> >, clang::FunctionDecl const*, unsigned int, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FunctionDecl const*, unsigned int, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          LateTemplateParser = 0x0,
          LateTemplateParserCleanup = 0x0,
          OpaqueParser = 0x0,
          DelayedDiagnostics = {
            CurPool = 0x7fffffff8298
          },
          RebuildingImmediateInvocation = false,
          isConstantEvaluatedOverride = false,
          WeakUndeclaredIdentifiers = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >, clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          ExtnameUndeclaredIdentifiers = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, clang::AsmLabelAttr*, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, clang::AsmLabelAttr*> >, clang::IdentifierInfo*, clang::AsmLabelAttr*, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, clang::AsmLabelAttr*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo*, clang::AsmLabelAttr*, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, clang::AsmLabelAttr*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          WeakTopLevelDecl = {
            <llvm::SmallVectorImpl<clang::Decl*>> = {
              <llvm::SmallVectorTemplateBase<clang::Decl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Decl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18de980,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Decl*, 2>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          IdResolver = {
            LangOpt = @0x55556152eb00,
            PP = @0x5555a1bf36a0,
            IdDeclInfos = 0x55556cc87d50
          },
          TUScope = 0x55556154e2c0,
          StdNamespace = {
            Ptr = 93826271209152
          },
          StdBadAlloc = {
            Ptr = 93826275870352
          },
          StdAlignValT = {
            Ptr = 93826275876624
          },
          StdExperimentalNamespaceCache = 0x0,
          StdInitializerList = 0x5555a2128f00,
          StdCoroutineTraitsCache = 0x0,
          CoroTraitsNamespaceCache = 0x0,
          CXXTypeInfoDecl = 0x5555a2986d18,
          MSVCGuidDecl = 0x0,
          StdSourceLocationImplDecl = 0x0,
          NSAPIObj = std::unique_ptr<clang::NSAPI> = {
            get() = 0x0
          },
          NSNumberDecl = 0x0,
          NSValueDecl = 0x0,
          NSNumberPointer = {
            Value = {
              Value = 0
            }
          },
          NSValuePointer = {
            Value = {
              Value = 0
            }
          },
          NSNumberLiteralMethods = {0x0 <repeats 15 times>},
          NSStringDecl = 0x0,
          NSStringPointer = {
            Value = {
              Value = 0
            }
          },
          StringWithUTF8StringMethod = 0x0,
          ValueWithBytesObjCTypeMethod = 0x0,
          NSArrayDecl = 0x0,
          ArrayWithObjectsMethod = 0x0,
          NSDictionaryDecl = 0x0,
          DictionaryWithObjectsMethod = 0x0,
          QIDNSCopying = {
            Value = {
              Value = 0
            }
          },
          RespondsToSelectorSel = {
            InfoPtr = 0
          },
          GlobalNewDeleteDeclared = true,
          ExprEvalContexts = {
            <llvm::SmallVectorImpl<clang::Sema::ExpressionEvaluationContextRecord>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::ExpressionEvaluationContextRecord, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::ExpressionEvaluationContextRecord, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a22b6f40,
                    Size = 1,
                    Capacity = 71
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::ExpressionEvaluationContextRecord, 8>> = {
              InlineElts = "\006", '\000' <repeats 15 times>, "8덡UU\000\0008덡UU\000\000\004", '\000' <repeats 47 times>, "h덡UU\000\000\000\000\000\000\004", '\000' <repeats 35 times>, "\230덡UU\000\000\000\000\000\000\002", '\000' <repeats 27 times>, "\300덡UU\000\000\000\000\000\000\b", '\000' <repeats 67 times>...
            }, <No data fields>},
          FailedImmediateInvocations = {
            <llvm::SmallPtrSetImpl<clang::ConstantExpr*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18dfe28,
                CurArray = 0x5555a18dfe28,
                CurArraySize = 4,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::ConstantExpr*, 4>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0}
          },
          SpecialMemberCache = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::Sema::SpecialMemberOverloadResultEntry>, clang::Sema::SpecialMemberOverloadResultEntry>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a51b6990,
                NumBuckets = 1024,
                NumNodes = 1412
              }, <No data fields>}, <No data fields>},
          FlagBitsCache = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::EnumDecl const*, llvm::APInt, llvm::DenseMapInfo<clang::EnumDecl const*, void>, llvm::detail::DenseMapPair<clang::EnumDecl const*, llvm::APInt> >, clang::EnumDecl const*, llvm::APInt, llvm::DenseMapInfo<clang::EnumDecl const*, void>, llvm::detail::DenseMapPair<clang::EnumDecl const*, llvm::APInt> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::EnumDecl const*, llvm::APInt, llvm::DenseMapInfo<clang::EnumDecl const*, void>, llvm::detail::DenseMapPair<clang::EnumDecl const*, llvm::APInt> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          TUKind = clang::TU_Complete,
          BumpAlloc = {
            <llvm::AllocatorBase<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {<No data fields>}, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            members of llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>:
            CurPtr = 0x5555a3a80530 "`V\377\377\377\177",
            End = 0x5555a3a82270 "\240i\032\242UU",
            Slabs = {
              <llvm::SmallVectorImpl<void*>> = {
                <llvm::SmallVectorTemplateBase<void*, true>> = {
                  <llvm::SmallVectorTemplateCommon<void*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x55556d49f1f0,
                      Size = 290,
                      Capacity = 319
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<void*, 4>> = {
                InlineElts = "0x\224\241UU\000\000\340ݚ\241UU\000\000 \377\233\241UU\000\000\360Ϝ\241UU\000"
              }, <No data fields>},
            CustomSizedSlabs = {
              <llvm::SmallVectorImpl<std::pair<void*, unsigned long> >> = {
                <llvm::SmallVectorTemplateBase<std::pair<void*, unsigned long>, true>> = {
                  <llvm::SmallVectorTemplateCommon<std::pair<void*, unsigned long>, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a18dfec8,
                      Size = 0,
                      Capacity = 0
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<std::pair<void*, unsigned long>, 0>> = {<No data fields>}, <No data fields>},
            BytesAllocated = 2120352,
            RedZoneSize = 1
          },
          NumSFINAEErrors = 0,
          UnparsedDefaultArgInstantiations = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*>, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*> > >, clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*>, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*>, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, llvm::TinyPtrVector<clang::ParmVarDecl*> > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          UnparsedDefaultArgLocs = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::ParmVarDecl*, clang::SourceLocation, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, clang::SourceLocation> >, clang::ParmVarDecl*, clang::SourceLocation, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, clang::SourceLocation> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::ParmVarDecl*, clang::SourceLocation, llvm::DenseMapInfo<clang::ParmVarDecl*, void>, llvm::detail::DenseMapPair<clang::ParmVarDecl*, clang::SourceLocation> >:
            Buckets = 0x5555a53cdfb0,
            NumEntries = 1,
            NumTombstones = 156,
            NumBuckets = 256
          },
          UndefinedButUsed = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, unsigned int> >, clang::NamedDecl*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::NamedDecl*, unsigned int, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, unsigned int> >:
              Buckets = 0x5555a3806080,
              NumEntries = 242,
              NumTombstones = 0,
              NumBuckets = 512
            },
            Vector = std::vector of length 242, capacity 256 = {{
                first = 0x5555a1e52168,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e5dbb8,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e65a78,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e70c38,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e77598,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e83988,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e8a608,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a1e9a718,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a2183df0,
                second = {
                  ID = 41929392
                }
              }, {
                first = 0x5555a2184e20,
                second = {
                  ID = 41929595
                }
              }, {
                first = 0x5555a2661138,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2610f20,
                second = {
                  ID = 42010290
                }
              }, {
                first = 0x5555a2663b38,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a1eaf7b0,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a2666730,
                second = {
                  ID = 42010433
                }
              }, {
                first = 0x5555a26bfaf8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a1eb6fb0,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a26d2130,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a26d9fa8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a26db3c0,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a273f688,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2740e60,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a2742bc8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a26dd5f0,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a278ee88,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2790660,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a27923c8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2745e20,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a27de6c8,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a27dfea0,
                second = {
                  ID = 42009577
                }
              }, {
                first = 0x5555a27e1c08,
                second = {
                  ID = 41595328
                }
              }, {
                first = 0x5555a2795600,
                second = {
                  ID = 41668938
                }
              }, {
                first = 0x5555a1eaf490,
                second = {
                  ID = 41668709
                }
              }, {
                first = 0x5555a2611db8,
                second = {
                  ID = 42103689
                }
              }, {
                first = 0x5555a2ae8998,
                second = {
                  ID = 42391378
                }
              }, {
                first = 0x5555a2ae8b88,
                second = {
                  ID = 42391467
                }
              }, {
                first = 0x5555a2aeae88,
                second = {
                  ID = 42391542
                }
              }, {
                first = 0x5555a2aeb078,
                second = {
                  ID = 42391616
                }
              }, {
                first = 0x5555a2aea658,
                second = {
                  ID = 42391685
                }
              }, {
                first = 0x5555a2aea718,
                second = {
                  ID = 42391771
                }
              }, {
                first = 0x5555a2aea988,
                second = {
                  ID = 42391948
                }
              }, {
                first = 0x5555a2aeac78,
                second = {
                  ID = 42392068
                }
              }, {
                first = 0x5555a2aeb3f8,
                second = {
                  ID = 42392408
                }
              }, {
                first = 0x5555a2aeb6c8,
                second = {
                  ID = 42392541
                }
              }, {
                first = 0x5555a2aebaf8,
                second = {
                  ID = 42392691
                }
              }, {
                first = 0x5555a2aebef8,
                second = {
                  ID = 42392879
                }
              }, {
                first = 0x5555a2aec278,
                second = {
                  ID = 42393060
                }
              }, {
                first = 0x5555a2aec5f8,
                second = {
                  ID = 42393242
                }
              }, {
                first = 0x5555a2aec968,
                second = {
                  ID = 42393415
                }
              }, {
                first = 0x5555a2aeccd0,
                second = {
                  ID = 42393607
                }
              }, {
                first = 0x5555a2aecfd0,
                second = {
                  ID = 42393792
                }
              }, {
                first = 0x5555a2aed2c8,
                second = {
                  ID = 42393978
                }
              }, {
                first = 0x5555a2aed568,
                second = {
                  ID = 42394128
                }
              }, {
                first = 0x5555a2aed690,
                second = {
                  ID = 42394194
                }
              }, {
                first = 0x5555a2aed7a8,
                second = {
                  ID = 42394254
                }
              }, {
                first = 0x5555a2dc94d0,
                second = {
                  ID = 41830397
                }
              }, {
                first = 0x5555a2e25b30,
                second = {
                  ID = 42543461
                }
              }, {
                first = 0x5555a2e22408,
                second = {
                  ID = 42543607
                }
              }, {
                first = 0x5555a2e227e8,
                second = {
                  ID = 42543663
                }
              }, {
                first = 0x5555a2b39bc8,
                second = {
                  ID = 42543693
                }
              }, {
                first = 0x5555a2b39e10,
                second = {
                  ID = 42543840
                }
              }, {
                first = 0x5555a2b3b7a8,
                second = {
                  ID = 42543904
                }
              }, {
                first = 0x5555a2e2dc88,
                second = {
                  ID = 0
                }
              }, {
                first = 0x5555a2e2de68,
                second = {
                  ID = 0
                }
              }, {
                first = 0x5555a2ec4110,
                second = {
                  ID = 42590669
                }
              }, {
                first = 0x5555a2ec47c0,
                second = {
                  ID = 42590724
                }
              }, {
                first = 0x5555a37353b0,
                second = {
                  ID = 43208330
                }
              }, {
                first = 0x5555a3798ad8,
                second = {
                  ID = 43242857
                }
              }, {
                first = 0x5555a3794030,
                second = {
                  ID = 43243308
                }
              }, {
                first = 0x5555a3796678,
                second = {
                  ID = 43243507
                }
              }, {
                first = 0x5555a3798220,
                second = {
                  ID = 43244435
                }
              }, {
                first = 0x5555a3798810,
                second = {
                  ID = 43244564
                }
              }, {
                first = 0x5555a387f010,
                second = {
                  ID = 43310867
                }
              }, {
                first = 0x5555a38b20e0,
                second = {
                  ID = 43311784
                }
              }, {
                first = 0x5555a39a23d8,
                second = {
                  ID = 43343848
                }
              }, {
                first = 0x5555a39a2548,
                second = {
                  ID = 43344914
                }
              }, {
                first = 0x5555a3c02358,
                second = {
                  ID = 43269921
                }
              }, {
                first = 0x5555a3dfa268,
                second = {
                  ID = 43427665
                }
              }, {
                first = 0x5555a3dfa360,
                second = {
                  ID = 43427633
                }
              }, {
                first = 0x5555a3e00408,
                second = {
                  ID = 43428926
                }
              }, {
                first = 0x5555a3e00500,
                second = {
                  ID = 43428894
                }
              }, {
                first = 0x5555a3e06588,
                second = {
                  ID = 43430201
                }
              }, {
                first = 0x5555a3e06680,
                second = {
                  ID = 43430169
                }
              }, {
                first = 0x5555a3e106b8,
                second = {
                  ID = 43431474
                }
              }, {
                first = 0x5555a3e107b0,
                second = {
                  ID = 43431442
                }
              }, {
                first = 0x5555a3e39058,
                second = {
                  ID = 42092058
                }
              }, {
                first = 0x5555a2f78390,
                second = {
                  ID = 41806806
                }
              }, {
                first = 0x5555a2f796f8,
                second = {
                  ID = 41805217
                }
              }, {
                first = 0x5555a2f83318,
                second = {
                  ID = 41805949
                }
              }, {
                first = 0x5555a2fac238,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a2fadec0,
                second = {
                  ID = 43669872
                }
              }, {
                first = 0x5555a2fb0e68,
                second = {
                  ID = 41637555
                }
              }, {
                first = 0x5555a447a088,
                second = {
                  ID = 41798924
                }
              }, {
                first = 0x5555a447ac98,
                second = {
                  ID = 41798968
                }
              }, {
                first = 0x5555a447f948,
                second = {
                  ID = 41798924
                }
              }, {
                first = 0x5555a44808f8,
                second = {
                  ID = 41798968
                }
              }, {
                first = 0x5555a4492208,
                second = {
                  ID = 41798968
                }
              }, {
                first = 0x5555a449fd90,
                second = {
                  ID = 41806806
                }
              }, {
                first = 0x5555a45af2a8,
                second = {
                  ID = 43735962
                }
              }, {
                first = 0x5555a45b2a18,
                second = {
                  ID = 43702947
                }
              }, {
                first = 0x5555a45b3670,
                second = {
                  ID = 43735977
                }
              }, {
                first = 0x5555a4609c20,
                second = {
                  ID = 43736041
                }
              }, {
                first = 0x5555a45af8d0,
                second = {
                  ID = 43736058
                }
              }, {
                first = 0x5555a46223d8,
                second = {
                  ID = 43736192
                }
              }, {
                first = 0x5555a462bb08,
                second = {
                  ID = 43702947
                }
              }, {
                first = 0x5555a462c790,
                second = {
                  ID = 43736207
                }
              }, {
                first = 0x5555a4652e70,
                second = {
                  ID = 43736271
                }
              }, {
                first = 0x5555a4622a00,
                second = {
                  ID = 43736288
                }
              }, {
                first = 0x5555a4654020,
                second = {
                  ID = 43736454
                }
              }, {
                first = 0x5555a46555b0,
                second = {
                  ID = 43736715
                }
              }, {
                first = 0x5555a4a08920,
                second = {
                  ID = 44223232
                }
              }, {
                first = 0x5555a4a09450,
                second = {
                  ID = 44223352
                }
              }, {
                first = 0x5555a4a09f40,
                second = {
                  ID = 44223493
                }
              }, {
                first = 0x5555a4ad6410,
                second = {
                  ID = 44305306
                }
              }, {
                first = 0x5555a4ad6ee0,
                second = {
                  ID = 44305471
                }
              }, {
                first = 0x5555a4ada6f0,
                second = {
                  ID = 44306500
                }
              }, {
                first = 0x5555a4adafe0,
                second = {
                  ID = 44306619
                }
              }, {
                first = 0x5555a4af5980,
                second = {
                  ID = 44312356
                }
              }, {
                first = 0x5555a4af6060,
                second = {
                  ID = 44312455
                }
              }, {
                first = 0x5555a4af7230,
                second = {
                  ID = 44312790
                }
              }, {
                first = 0x5555a4af7b30,
                second = {
                  ID = 44312921
                }
              }, {
                first = 0x5555a4af8e10,
                second = {
                  ID = 44313301
                }
              }, {
                first = 0x5555a4af96a0,
                second = {
                  ID = 44313429
                }
              }, {
                first = 0x5555a4bd4c08,
                second = {
                  ID = 44375466
                }
              }, {
                first = 0x5555a4bd0988,
                second = {
                  ID = 44404529
                }
              }, {
                first = 0x5555a4bd0e20,
                second = {
                  ID = 44404647
                }
              }, {
                first = 0x5555a4bd2550,
                second = {
                  ID = 44407015
                }
              }, {
                first = 0x5555a4bd26c8,
                second = {
                  ID = 44407247
                }
              }, {
                first = 0x5555a4bd38a8,
                second = {
                  ID = 44407505
                }
              }, {
                first = 0x5555a4bd3d50,
                second = {
                  ID = 44407629
                }
              }, {
                first = 0x5555a4bd73d8,
                second = {
                  ID = 44410581
                }
              }, {
                first = 0x5555a4bd7880,
                second = {
                  ID = 44410702
                }
              }, {
                first = 0x5555a4bd9470,
                second = {
                  ID = 44413975
                }
              }, {
                first = 0x5555a4bd95e8,
                second = {
                  ID = 44414213
                }
              }, {
                first = 0x5555a4bda6c8,
                second = {
                  ID = 44414475
                }
              }, {
                first = 0x5555a4bdba00,
                second = {
                  ID = 44414601
                }
              }, {
                first = 0x5555a4be2508,
                second = {
                  ID = 44422640
                }
              }, {
                first = 0x5555a4be29b0,
                second = {
                  ID = 44422775
                }
              }, {
                first = 0x5555a4bc8098,
                second = {
                  ID = 44424013
                }
              }, {
                first = 0x5555a4bf1588,
                second = {
                  ID = 44432885
                }
              }, {
                first = 0x5555a4bf1e10,
                second = {
                  ID = 44433036
                }
              }, {
                first = 0x5555a4bcb468,
                second = {
                  ID = 44434013
                }
              }, {
                first = 0x5555a4beb6e8,
                second = {
                  ID = 44433992
                }
              }, {
                first = 0x5555a4beb858,
                second = {
                  ID = 44434136
                }
              }, {
                first = 0x5555a4bcc458,
                second = {
                  ID = 44436122
                }
              }, {
                first = 0x5555a4bebb38,
                second = {
                  ID = 44437398
                }
              }, {
                first = 0x5555a4bed918,
                second = {
                  ID = 44438289
                }
              }, {
                first = 0x5555a4beddc0,
                second = {
                  ID = 44438430
                }
              }, {
                first = 0x5555a4bf4548,
                second = {
                  ID = 44443617
                }
              }, {
                first = 0x5555a4bf57b8,
                second = {
                  ID = 44444294
                }
              }, {
                first = 0x5555a4bf6040,
                second = {
                  ID = 44444443
                }
              }, {
                first = 0x5555a4bf4628,
                second = {
                  ID = 44445086
                }
              }, {
                first = 0x5555a4bcb6f8,
                second = {
                  ID = 44445539
                }
              }, {
                first = 0x5555a4bcd1b8,
                second = {
                  ID = 44447291
                }
              }, {
                first = 0x5555a4bf91f8,
                second = {
                  ID = 44448844
                }
              }, {
                first = 0x5555a4bf9a80,
                second = {
                  ID = 44449003
                }
              }, {
                first = 0x5555a4bf81b8,
                second = {
                  ID = 44449556
                }
              }, {
                first = 0x5555a4bcdf18,
                second = {
                  ID = 44451113
                }
              }, {
                first = 0x5555a58e9cc8,
                second = {
                  ID = 45775897
                }
              }, {
                first = 0x5555a58ea7f8,
                second = {
                  ID = 45776071
                }
              }, {
                first = 0x5555a58eb298,
                second = {
                  ID = 45776242
                }
              }, {
                first = 0x5555a58ebcd8,
                second = {
                  ID = 45776410
                }
              }, {
                first = 0x5555a58ec7a8,
                second = {
                  ID = 45776581
                }
              }, {
                first = 0x5555a58ed2d8,
                second = {
                  ID = 45776755
                }
              }, {
                first = 0x5555a58edd78,
                second = {
                  ID = 45776926
                }
              }, {
                first = 0x5555a58ee7b8,
                second = {
                  ID = 45777094
                }
              }, {
                first = 0x5555a58ef1f8,
                second = {
                  ID = 45777265
                }
              }, {
                first = 0x5555a58efc38,
                second = {
                  ID = 45777439
                }
              }, {
                first = 0x5555a58f0678,
                second = {
                  ID = 45777610
                }
              }, {
                first = 0x5555a58f10b8,
                second = {
                  ID = 45777778
                }
              }, {
                first = 0x5555a58f1b88,
                second = {
                  ID = 45777949
                }
              }, {
                first = 0x5555a58f26b8,
                second = {
                  ID = 45778123
                }
              }, {
                first = 0x5555a58f3158,
                second = {
                  ID = 45778294
                }
              }, {
                first = 0x5555a58f3b98,
                second = {
                  ID = 45778462
                }
              }, {
                first = 0x5555a58f45d8,
                second = {
                  ID = 45778633
                }
              }, {
                first = 0x5555a58f5018,
                second = {
                  ID = 45778807
                }
              }, {
                first = 0x5555a58f5a58,
                second = {
                  ID = 45778978
                }
              }, {
                first = 0x5555a58f6498,
                second = {
                  ID = 45779146
                }
              }, {
                first = 0x5555a58f6ed8,
                second = {
                  ID = 45779317
                }
              }, {
                first = 0x5555a58f7918,
                second = {
                  ID = 45779491
                }
              }, {
                first = 0x5555a58f8358,
                second = {
                  ID = 45779662
                }
              }, {
                first = 0x5555a58f8d98,
                second = {
                  ID = 45779830
                }
              }, {
                first = 0x5555a58f97d8,
                second = {
                  ID = 45780001
                }
              }, {
                first = 0x5555a58fa218,
                second = {
                  ID = 45780175
                }
              }, {
                first = 0x5555a58fac58,
                second = {
                  ID = 45780346
                }
              }, {
                first = 0x5555a58fb698,
                second = {
                  ID = 45780514
                }
              }, {
                first = 0x5555a58fc408,
                second = {
                  ID = 45780670
                }
              }, {
                first = 0x5555a58fd1a8,
                second = {
                  ID = 45780834
                }
              }, {
                first = 0x5555a58fde30,
                second = {
                  ID = 45780995
                }
              }, {
                first = 0x5555a58fea60,
                second = {
                  ID = 45781153
                }
              }, {
                first = 0x5555a58ff7a8,
                second = {
                  ID = 45781314
                }
              }, {
                first = 0x5555a5900548,
                second = {
                  ID = 45781478
                }
              }, {
                first = 0x5555a59011d0,
                second = {
                  ID = 45781639
                }
              }, {
                first = 0x5555a5901e00,
                second = {
                  ID = 45781797
                }
              }, {
                first = 0x5555a5902a30,
                second = {
                  ID = 45781958
                }
              }, {
                first = 0x5555a5903660,
                second = {
                  ID = 45782122
                }
              }, {
                first = 0x5555a5904290,
                second = {
                  ID = 45782283
                }
              }, {
                first = 0x5555a5904ec0,
                second = {
                  ID = 45782441
                }
              }, {
                first = 0x5555a5905c08,
                second = {
                  ID = 45782602
                }
              }, {
                first = 0x5555a59069a8,
                second = {
                  ID = 45782766
                }
              }...}
          },
          MethodPool = {
            Methods = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList>, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList> > >, clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList>, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList> > >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList>, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, std::pair<clang::ObjCMethodList, clang::ObjCMethodList> > >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            }
          },
          ReferencedSelectors = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::Selector, unsigned int, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, unsigned int> >, clang::Selector, unsigned int, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::Selector, unsigned int, llvm::DenseMapInfo<clang::Selector, void>, llvm::detail::DenseMapPair<clang::Selector, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          ImplicitlyRetainedSelfLocs = {
            <llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::BlockDecl const*> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::SourceLocation, clang::BlockDecl const*>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::SourceLocation, clang::BlockDecl const*>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18dff98,
                    Size = 0,
                    Capacity = 1
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::SourceLocation, clang::BlockDecl const*>, 1>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          SpecialMembersBeingDeclared = {
            <llvm::SmallPtrSetImpl<llvm::PointerIntPair<clang::CXXRecordDecl*, 3, clang::Sema::CXXSpecialMember, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*>, llvm::PointerIntPairInfo<clang::CXXRecordDecl*, 3, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*> > > >> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18dffc8,
                CurArray = 0x5555a18dffc8,
                CurArraySize = 4,
                NumNonEmpty = 4,
                NumTombstones = 4
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<llvm::PointerIntPair<clang::CXXRecordDecl*, 3, clang::Sema::CXXSpecialMember, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*>, llvm::PointerIntPairInfo<clang::CXXRecordDecl*, 3, llvm::PointerLikeTypeTraits<clang::CXXRecordDecl*> > >, 4>:
            SmallStorage = {0xfffffffffffffffe, 0xfffffffffffffffe, 0xfffffffffffffffe, 0xfffffffffffffffe}
          },
          TypoCorrectedFunctionDefinitions = {
            <llvm::SmallPtrSetImpl<clang::NamedDecl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e0008,
                CurArray = 0x5555a18e0008,
                CurArraySize = 4,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::NamedDecl const*, 4>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0}
          },
          CurrentParameterCopyTypes = {
            <llvm::SmallVectorImpl<clang::QualType>> = {
              <llvm::SmallVectorTemplateBase<clang::QualType, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::QualType, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e0038,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::QualType, 4>> = {
              InlineElts = "\3200N\246UU", '\000' <repeats 25 times>
            }, <No data fields>},
          WarnedStackExhausted = false,
          RefsMinusAssignments = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::VarDecl const*, int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, int> >, clang::VarDecl const*, int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::VarDecl const*, int, llvm::DenseMapInfo<clang::VarDecl const*, void>, llvm::detail::DenseMapPair<clang::VarDecl const*, int> >:
            Buckets = 0x5555a5d61a10,
            NumEntries = 2199,
            NumTombstones = 1168,
            NumBuckets = 4096
          },
          DeclareRISCVVBuiltins = false,
          RVIntrinsicManager = std::unique_ptr<clang::sema::RISCVIntrinsicManager> = {
            get() = 0x0
          },
          CachedDarwinSDKInfo = std::optional<std::unique_ptr<clang::DarwinSDKInfo>> [no contained value],
          WarnedDarwinSDKInfoMissing = false,
          IsLastErrorImmediate = true,
          DeferDiags = false,
          DeclsToCheckForDeferredDiags = {
            <llvm::SetVector<clang::Decl*, llvm::SmallVector<clang::Decl*, 4>, llvm::SmallDenseSet<clang::Decl*, 4, llvm::DenseMapInfo<clang::Decl*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::Decl*, llvm::SmallDenseMap<clang::Decl*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >, llvm::DenseMapInfo<clang::Decl*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::Decl*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >, clang::Decl*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::Decl*, llvm::detail::DenseSetEmpty, 4, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseSetPair<clang::Decl*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::Decl*>> = {
                  <llvm::SmallVectorTemplateBase<clang::Decl*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::Decl*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a18e00d8,
                        Size = 0,
                        Capacity = 4
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::Decl*, 4>> = {
                  InlineElts = '\000' <repeats 31 times>
                }, <No data fields>}
            }, <No data fields>},
          ModuleScopes = {
            <llvm::SmallVectorImpl<clang::Sema::ModuleScope>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::ModuleScope, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::ModuleScope, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e0108,
                    Size = 0,
                    Capacity = 16
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::ModuleScope, 16>> = {
              InlineElts = '\000' <repeats 895 times>
            }, <No data fields>},
          GlobalModuleFragment = 0x0,
          DirectModuleImports = {
            <llvm::SmallPtrSetImpl<clang::Module*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e04b0,
                CurArray = 0x5555a18e04b0,
                CurArraySize = 8,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::Module*, 8>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
          },
          DeferredExportedNamespaces = {
            <llvm::SmallPtrSetImpl<clang::NamespaceDecl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e0510,
                CurArray = 0x5555a18e0510,
                CurArraySize = 8,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::NamespaceDecl const*, 8>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
          },
          PendingInlineFuncDecls = {
            <llvm::SmallPtrSetImpl<clang::FunctionDecl const*>> = {
              <llvm::SmallPtrSetImplBase> = {
                <llvm::DebugEpochBase> = {<No data fields>}, 
                members of llvm::SmallPtrSetImplBase:
                SmallArray = 0x5555a18e0570,
                CurArray = 0x5555a18e0570,
                CurArraySize = 8,
                NumNonEmpty = 0,
                NumTombstones = 0
              }, <No data fields>}, 
            members of llvm::SmallPtrSet<clang::FunctionDecl const*, 8>:
            SmallStorage = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
          },
          VisibleModules = {
            ImportLocs = std::vector of length 0, capacity 0,
            Generation = 0
          },
          UsableModuleUnitsCache = {
            <llvm::detail::DenseSetImpl<clang::Module const*, llvm::DenseMap<clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >, llvm::DenseMapInfo<clang::Module const*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >, clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::Module const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module const*, void>, llvm::detail::DenseSetPair<clang::Module const*> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          ShadowingDecls = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl const*, clang::NamedDecl const*, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, clang::NamedDecl const*> >, clang::NamedDecl const*, clang::NamedDecl const*, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, clang::NamedDecl const*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl const*, clang::NamedDecl const*, llvm::DenseMapInfo<clang::NamedDecl const*, void>, llvm::detail::DenseMapPair<clang::NamedDecl const*, clang::NamedDecl const*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          DelayedTypos = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::TypoExpr*, unsigned int, llvm::DenseMapInfo<clang::TypoExpr*, void>, llvm::detail::DenseMapPair<clang::TypoExpr*, unsigned int> >, clang::TypoExpr*, unsigned int, llvm::DenseMapInfo<clang::TypoExpr*, void>, llvm::detail::DenseMapPair<clang::TypoExpr*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::TypoExpr*, unsigned int, llvm::DenseMapInfo<clang::TypoExpr*, void>, llvm::detail::DenseMapPair<clang::TypoExpr*, unsigned int> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            Vector = std::vector of length 0, capacity 0
          },
          KnownNamespaces = {
            Map = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::NamespaceDecl*, unsigned int, llvm::DenseMapInfo<clang::NamespaceDecl*, void>, llvm::detail::DenseMapPair<clang::NamespaceDecl*, unsigned int> >, clang::NamespaceDecl*, unsigned int, llvm::DenseMapInfo<clang::NamespaceDecl*, void>, llvm::detail::DenseMapPair<clang::NamespaceDecl*, unsigned int> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::NamespaceDecl*, unsigned int, llvm::DenseMapInfo<clang::NamespaceDecl*, void>, llvm::detail::DenseMapPair<clang::NamespaceDecl*, unsigned int> >:
              Buckets = 0x55559f10de10,
              NumEntries = 76,
              NumTombstones = 0,
              NumBuckets = 128
            },
            Vector = std::vector of length 76, capacity 128 = {{
                first = 0x5555a190e6c0,
                second = false
              }, {
                first = 0x5555a190ef80,
                second = false
              }, {
                first = 0x5555a19a8270,
                second = false
              }, {
                first = 0x5555a1cbfde8,
                second = false
              }, {
                first = 0x5555a1cc3e80,
                second = false
              }, {
                first = 0x5555a1d21738,
                second = false
              }, {
                first = 0x5555a1d217b0,
                second = false
              }, {
                first = 0x5555a1d341c8,
                second = false
              }, {
                first = 0x5555a1d556a0,
                second = false
              }, {
                first = 0x5555a1d92d90,
                second = false
              }, {
                first = 0x5555a1d9f608,
                second = false
              }, {
                first = 0x5555a1da9d70,
                second = false
              }, {
                first = 0x5555a1e1e198,
                second = false
              }, {
                first = 0x5555a1e292f8,
                second = false
              }, {
                first = 0x5555a1efa160,
                second = false
              }, {
                first = 0x5555a205afe0,
                second = false
              }, {
                first = 0x5555a205b658,
                second = false
              }, {
                first = 0x5555a2187080,
                second = false
              }, {
                first = 0x5555a27e32f0,
                second = false
              }, {
                first = 0x5555a2845230,
                second = false
              }, {
                first = 0x5555a296f880,
                second = false
              }, {
                first = 0x5555a29a18f8,
                second = false
              }, {
                first = 0x5555a2aa3848,
                second = false
              }, {
                first = 0x5555a2bd64f0,
                second = false
              }, {
                first = 0x5555a2e14998,
                second = false
              }, {
                first = 0x5555a2e2b690,
                second = false
              }, {
                first = 0x5555a2e99720,
                second = false
              }, {
                first = 0x5555a31ca100,
                second = false
              }, {
                first = 0x5555a32486e8,
                second = false
              }, {
                first = 0x5555a34bfdf8,
                second = false
              }, {
                first = 0x5555a34bfe70,
                second = false
              }, {
                first = 0x5555a34c44d0,
                second = false
              }, {
                first = 0x5555a35a9ed0,
                second = false
              }, {
                first = 0x5555a35c1128,
                second = false
              }, {
                first = 0x5555a35c3640,
                second = false
              }, {
                first = 0x5555a35c37a8,
                second = false
              }, {
                first = 0x5555a35db130,
                second = false
              }, {
                first = 0x5555a2f4c390,
                second = false
              }, {
                first = 0x5555a4b8b1c8,
                second = false
              }, {
                first = 0x5555a4b8b240,
                second = false
              }, {
                first = 0x5555a5190668,
                second = false
              }, {
                first = 0x5555a5190aa0,
                second = false
              }, {
                first = 0x5555a5191f38,
                second = false
              }, {
                first = 0x5555a5191fb0,
                second = false
              }, {
                first = 0x5555a5192118,
                second = false
              }, {
                first = 0x5555a5192398,
                second = false
              }, {
                first = 0x5555a51a38e8,
                second = false
              }, {
                first = 0x5555a51a3f00,
                second = false
              }, {
                first = 0x5555a51a4390,
                second = false
              }, {
                first = 0x5555a5218a58,
                second = false
              }, {
                first = 0x5555a523a488,
                second = false
              }, {
                first = 0x5555a523e930,
                second = false
              }, {
                first = 0x5555a52765e8,
                second = false
              }, {
                first = 0x5555a5285c50,
                second = false
              }, {
                first = 0x5555a528f100,
                second = false
              }, {
                first = 0x5555a545ca90,
                second = false
              }, {
                first = 0x5555a545cec8,
                second = false
              }, {
                first = 0x5555a54d03b8,
                second = false
              }, {
                first = 0x5555a5530e90,
                second = false
              }, {
                first = 0x5555a5601ea8,
                second = false
              }, {
                first = 0x5555a56e7800,
                second = false
              }, {
                first = 0x5555a56e8a70,
                second = false
              }, {
                first = 0x5555a56eb9b8,
                second = false
              }, {
                first = 0x5555a56eef40,
                second = false
              }, {
                first = 0x5555a5708950,
                second = false
              }, {
                first = 0x5555a575ec38,
                second = false
              }, {
                first = 0x5555a5813ea8,
                second = false
              }, {
                first = 0x5555a5813f20,
                second = false
              }, {
                first = 0x5555a5816990,
                second = false
              }, {
                first = 0x5555a5817250,
                second = false
              }, {
                first = 0x5555a581f7a8,
                second = false
              }, {
                first = 0x5555a5821a28,
                second = false
              }, {
                first = 0x5555a582dd38,
                second = false
              }, {
                first = 0x5555a5c36e80,
                second = false
              }, {
                first = 0x5555a6339c10,
                second = false
              }, {
                first = 0x5555a640d9d8,
                second = false
              }}
          },
          LoadedExternalKnownNamespaces = false,
          FullyCheckedComparisonCategories = {
            X = 864691128455135241
          },
          CXXThisTypeOverride = {
            Value = {
              Value = 0
            }
          },
          SubsumptionCache = {
            <llvm::DenseMapBase<llvm::DenseMap<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool, llvm::DenseMapInfo<std::pair<clang::NamedDecl*, clang::NamedDecl*>, void>, llvm::detail::DenseMapPair<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool> >, std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool, llvm::DenseMapInfo<std::pair<clang::NamedDecl*, clang::NamedDecl*>, void>, llvm::detail::DenseMapPair<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool, llvm::DenseMapInfo<std::pair<clang::NamedDecl*, clang::NamedDecl*>, void>, llvm::detail::DenseMapPair<std::pair<clang::NamedDecl*, clang::NamedDecl*>, bool> >:
            Buckets = 0x55559f2756b0,
            NumEntries = 5,
            NumTombstones = 0,
            NumBuckets = 64
          },
          NormalizationCache = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, clang::NormalizedConstraint*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NormalizedConstraint*> >, clang::NamedDecl*, clang::NormalizedConstraint*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NormalizedConstraint*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl*, clang::NormalizedConstraint*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NormalizedConstraint*> >:
            Buckets = 0x55559a227cb0,
            NumEntries = 14,
            NumTombstones = 0,
            NumBuckets = 64
          },
          SatisfactionCache = {
            <llvm::FoldingSetImpl<llvm::ContextualFoldingSet<clang::ConstraintSatisfaction, clang::ASTContext const&>, clang::ConstraintSatisfaction>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x5555a2d92ec0,
                NumBuckets = 1024,
                NumNodes = 1458
              }, <No data fields>}, 
            members of llvm::ContextualFoldingSet<clang::ConstraintSatisfaction, clang::ASTContext const&>:
            Context = @0x5555a18d0ae0
          },
          SatisfactionStack = {
            <llvm::SmallVectorImpl<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID>, false>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55559dfe8060,
                    Size = 0,
                    Capacity = 21
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::NamedDecl const*, llvm::FoldingSetNodeID>, 10>> = {
              InlineElts = "\350I%\242UU\000\000\350\006\216\241UU\000\000\000\000\000\000 \000\000\000\241\000\000\000\035\000\000\000\310dߡUU\000\000\001\000\000\0000o\232\241UU\000\000\001\000\000\000\200\330NnUU\000\000\001\000\000\000`\317NnUU\000\000\001\000\000\000@\316NnUU\000\000\001\000\000\000\000\206\227\241UU", '\000' <repeats 54 times>, "\310dߡUU\000\000\200\a\216\241UU\000\000\000\000\000\000 \000\000\000\241\000\000\000\035\000\000\000\200FߡUU\000\000\001\000\000\000\300t\227\241UU\000\000"...
            }, <No data fields>},
          VTableUses = {
            <llvm::SmallVectorImpl<std::pair<clang::CXXRecordDecl*, clang::SourceLocation> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::CXXRecordDecl*, clang::SourceLocation>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::CXXRecordDecl*, clang::SourceLocation>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a29dd570,
                    Size = 158,
                    Capacity = 271
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::CXXRecordDecl*, clang::SourceLocation>, 16>> = {
              InlineElts = "\200\366סUU\000\000\234\213z\002\000\000\000\000\220\006ءUU\000\000a\215z\002\000\000\000\000\300\023ءUU\000\000|\216z\002\000\000\000\000ء\357\241UU\000\000n1|\002\000\000\000\000\370\370\226\242UU\000\000O\v\204\002\000\000\000\000\b%\230\242UU\000\000n.\204\002\000\000\000\000\030U\230\242UU\000\000\2214\204\002\000\000\000\000x_\230\242UU\000\00065\204\002\000\000\000\000(ᘢUU\000\000`J\204\002\000\000\000\000\360똢UU\000\000$K\204\002\000\000\000\000\260\366\230\242UU\000\000\326K\204\002\000\000\000\000\240\002\231\242UU\000\000\306L\204\002\000\000\000\000`\r\231\242UU\000\000uM\204\002\000\000\000\000"...
            }, <No data fields>},
          VTablesUsed = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CXXRecordDecl*, bool, llvm::DenseMapInfo<clang::CXXRecordDecl*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl*, bool> >, clang::CXXRecordDecl*, bool, llvm::DenseMapInfo<clang::CXXRecordDecl*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl*, bool> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CXXRecordDecl*, bool, llvm::DenseMapInfo<clang::CXXRecordDecl*, void>, llvm::detail::DenseMapPair<clang::CXXRecordDecl*, bool> >:
            Buckets = 0x5555a2ab9410,
            NumEntries = 158,
            NumTombstones = 0,
            NumBuckets = 256
          },
          AccessCheckingSFINAE = false,
          CodeSynthesisContexts = {
            <llvm::SmallVectorImpl<clang::Sema::CodeSynthesisContext>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::CodeSynthesisContext, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::CodeSynthesisContext, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55556e500ef0,
                    Size = 0,
                    Capacity = 67
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::CodeSynthesisContext, 16>> = {
              InlineElts = "\000\000\000\000\001\177\000\000\225Ā\002\377\177\000\000\300\377(\242UU\000\000\000\000\000\000\000\000\000\000\300<\377\377\377\177\000\000\002\000\000\000\377\177\000\000@G\377\377\377\177\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\177\000\000\225Ā\002UU\000\000\350I%\242UU\000\000\000\000\000\000\000\000\000\000\260\006%\242UU\000\000\002\000\000\000UU\000\000\000\000\000\000\000\000\000\000\225Ā\002\225Ā\002\017\000\000\000\000\000\000\000\226\210\200\002\377\177\000\000\350I%\242UU", '\000' <repeats 22 times>, "UU\000\000p1\377\377\377\177\000\000\226\210\200\002\226\210\200\002\016\000\000\000\000\177\000\000\226\210\200\002"...
            }, <No data fields>},
          InstantiatingSpecializations = {
            <llvm::detail::DenseSetImpl<std::pair<clang::Decl*, unsigned int>, llvm::DenseMap<std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >, std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<std::pair<clang::Decl*, unsigned int>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<std::pair<clang::Decl*, unsigned int>, void>, llvm::detail::DenseSetPair<std::pair<clang::Decl*, unsigned int> > >:
                Buckets = 0x55559ee22680,
                NumEntries = 0,
                NumTombstones = 50,
                NumBuckets = 64
              }
            }, <No data fields>},
          InstantiatedNonDependentTypes = {
            <llvm::detail::DenseSetImpl<clang::QualType, llvm::DenseMap<clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >, llvm::DenseMapInfo<clang::QualType, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >, clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::QualType, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::QualType, void>, llvm::detail::DenseSetPair<clang::QualType> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          CodeSynthesisContextLookupModules = {
            <llvm::SmallVectorImpl<clang::Module*>> = {
              <llvm::SmallVectorTemplateBase<clang::Module*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Module*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1240,
                    Size = 0,
                    Capacity = 16
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Module*, 16>> = {
              InlineElts = '\000' <repeats 127 times>
            }, <No data fields>},
          LookupModulesCache = {
            <llvm::detail::DenseSetImpl<clang::Module*, llvm::DenseMap<clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >, llvm::DenseMapInfo<clang::Module*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >, clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          VisibleNamespaceCache = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >, clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::NamedDecl*, clang::NamedDecl*, llvm::DenseMapInfo<clang::NamedDecl*, void>, llvm::detail::DenseMapPair<clang::NamedDecl*, clang::NamedDecl*> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          InNonInstantiationSFINAEContext = false,
          NonInstantiationEntries = 0,
          LastEmittedCodeSynthesisContextDepth = 0,
          TemplateInstCallbacks = std::vector of length 0, capacity 0,
          ArgumentPackSubstitutionIndex = -1,
          SuppressedDiagnostics = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1>, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1> > >, clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1>, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1>, llvm::DenseMapInfo<clang::Decl*, void>, llvm::detail::DenseMapPair<clang::Decl*, llvm::SmallVector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, 1> > >:
            Buckets = 0x55559b53d020,
            NumEntries = 13,
            NumTombstones = 0,
            NumBuckets = 64
          },
          CurrentInstantiationScope = 0x0,
          DisableTypoCorrection = false,
          TyposCorrected = 0,
          TypoCorrectionFailures = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> > > >, clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, llvm::SmallSet<clang::SourceLocation, 2, std::less<clang::SourceLocation> > > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          AnalysisWarnings = {
            S = @0x5555a18ddbf0,
            DefaultPolicy = {
              enableCheckFallThrough = 1,
              enableCheckUnreachable = 0,
              enableThreadSafetyAnalysis = 0,
              enableConsumedAnalysis = 0
            },
            IPData = std::unique_ptr<clang::sema::AnalysisBasedWarnings::InterProceduralData> = {
              get() = 0x5555773dcbc0
            },
            VisitedFD = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag> >, clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag, llvm::DenseMapInfo<clang::FunctionDecl const*, void>, llvm::detail::DenseMapPair<clang::FunctionDecl const*, clang::sema::AnalysisBasedWarnings::VisitFlag> >:
              Buckets = 0x0,
              NumEntries = 0,
              NumTombstones = 0,
              NumBuckets = 0
            },
            NumFunctionsAnalyzed = 0,
            NumFunctionsWithBadCFGs = 0,
            NumCFGBlocks = 0,
            MaxCFGBlocksPerFunction = 0,
            NumUninitAnalysisFunctions = 0,
            NumUninitAnalysisVariables = 0,
            MaxUninitAnalysisVariablesPerFunction = 0,
            NumUninitAnalysisBlockVisits = 0,
            MaxUninitAnalysisBlockVisitsPerFunction = 0
          },
          ThreadSafetyDeclCache = 0x0,
          PendingInstantiations = std::deque with 249 elements = {{
              first = 0x5555a2183df0,
              second = {
                ID = 41929392
              }
            }, {
              first = 0x5555a2184e20,
              second = {
                ID = 41929595
              }
            }, {
              first = 0x5555a2652980,
              second = {
                ID = 42080622
              }
            }, {
              first = 0x5555a26538d0,
              second = {
                ID = 42080817
              }
            }, {
              first = 0x5555a2654980,
              second = {
                ID = 42081007
              }
            }, {
              first = 0x5555a2655a30,
              second = {
                ID = 42081195
              }
            }, {
              first = 0x5555a2656b60,
              second = {
                ID = 42081393
              }
            }, {
              first = 0x5555a2657990,
              second = {
                ID = 42081560
              }
            }, {
              first = 0x5555a2658790,
              second = {
                ID = 42081715
              }
            }, {
              first = 0x5555a2659590,
              second = {
                ID = 42081876
              }
            }, {
              first = 0x5555a2610f20,
              second = {
                ID = 42010290
              }
            }, {
              first = 0x5555a1eaf7b0,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a2665b58,
              second = {
                ID = 42082253
              }
            }, {
              first = 0x5555a266c1c8,
              second = {
                ID = 42082893
              }
            }, {
              first = 0x5555a26706a8,
              second = {
                ID = 42083525
              }
            }, {
              first = 0x5555a2672ef8,
              second = {
                ID = 42084017
              }
            }, {
              first = 0x5555a26b62e0,
              second = {
                ID = 42084708
              }
            }, {
              first = 0x5555a26b7220,
              second = {
                ID = 42084904
              }
            }, {
              first = 0x5555a26b82d0,
              second = {
                ID = 42085095
              }
            }, {
              first = 0x5555a26b9380,
              second = {
                ID = 42085284
              }
            }, {
              first = 0x5555a26ba430,
              second = {
                ID = 42085483
              }
            }, {
              first = 0x5555a26bb260,
              second = {
                ID = 42085651
              }
            }, {
              first = 0x5555a26bc090,
              second = {
                ID = 42085807
              }
            }, {
              first = 0x5555a26bce90,
              second = {
                ID = 42085969
              }
            }, {
              first = 0x5555a26be1b8,
              second = {
                ID = 42086131
              }
            }, {
              first = 0x5555a1eb6fb0,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a26d2130,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a26db3c0,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a2740e60,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a26dd5f0,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a2790660,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a2745e20,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a27dfea0,
              second = {
                ID = 42009577
              }
            }, {
              first = 0x5555a2795600,
              second = {
                ID = 41668938
              }
            }, {
              first = 0x5555a1eaf490,
              second = {
                ID = 41668709
              }
            }, {
              first = 0x5555a2611db8,
              second = {
                ID = 42103689
              }
            }, {
              first = 0x5555a2a62188,
              second = {
                ID = 42328357
              }
            }, {
              first = 0x5555a2a63988,
              second = {
                ID = 42328769
              }
            }, {
              first = 0x5555a2a7b4f8,
              second = {
                ID = 42337312
              }
            }, {
              first = 0x5555a2a7ba98,
              second = {
                ID = 42337516
              }
            }, {
              first = 0x5555a2ae8998,
              second = {
                ID = 42391378
              }
            }, {
              first = 0x5555a2ae8b88,
              second = {
                ID = 42391467
              }
            }, {
              first = 0x5555a2aeae88,
              second = {
                ID = 42391542
              }
            }, {
              first = 0x5555a2aeb078,
              second = {
                ID = 42391616
              }
            }, {
              first = 0x5555a2aea658,
              second = {
                ID = 42391685
              }
            }, {
              first = 0x5555a2aea718,
              second = {
                ID = 42391771
              }
            }, {
              first = 0x5555a2aea988,
              second = {
                ID = 42391948
              }
            }, {
              first = 0x5555a2aeac78,
              second = {
                ID = 42392068
              }
            }, {
              first = 0x5555a2aeb3f8,
              second = {
                ID = 42392408
              }
            }, {
              first = 0x5555a2aeb6c8,
              second = {
                ID = 42392541
              }
            }, {
              first = 0x5555a2aebaf8,
              second = {
                ID = 42392691
              }
            }, {
              first = 0x5555a2aebef8,
              second = {
                ID = 42392879
              }
            }, {
              first = 0x5555a2aec278,
              second = {
                ID = 42393060
              }
            }, {
              first = 0x5555a2aec5f8,
              second = {
                ID = 42393242
              }
            }, {
              first = 0x5555a2aec968,
              second = {
                ID = 42393415
              }
            }, {
              first = 0x5555a2aeccd0,
              second = {
                ID = 42393607
              }
            }, {
              first = 0x5555a2aecfd0,
              second = {
                ID = 42393792
              }
            }, {
              first = 0x5555a2aed2c8,
              second = {
                ID = 42393978
              }
            }, {
              first = 0x5555a2aed568,
              second = {
                ID = 42394128
              }
            }, {
              first = 0x5555a2aed690,
              second = {
                ID = 42394194
              }
            }, {
              first = 0x5555a2aed7a8,
              second = {
                ID = 42394254
              }
            }, {
              first = 0x5555a2dc94d0,
              second = {
                ID = 41830397
              }
            }, {
              first = 0x5555a2e22408,
              second = {
                ID = 42543607
              }
            }, {
              first = 0x5555a2e227e8,
              second = {
                ID = 42543663
              }
            }, {
              first = 0x5555a2b39bc8,
              second = {
                ID = 42543693
              }
            }, {
              first = 0x5555a2b39e10,
              second = {
                ID = 42543840
              }
            }, {
              first = 0x5555a2b3b7a8,
              second = {
                ID = 42543904
              }
            }, {
              first = 0x5555a2ec4110,
              second = {
                ID = 42590669
              }
            }, {
              first = 0x5555a2ec47c0,
              second = {
                ID = 42590724
              }
            }, {
              first = 0x5555a37353b0,
              second = {
                ID = 43208330
              }
            }, {
              first = 0x5555a3798ad8,
              second = {
                ID = 43242857
              }
            }, {
              first = 0x5555a3794030,
              second = {
                ID = 43243308
              }
            }, {
              first = 0x5555a3796678,
              second = {
                ID = 43243507
              }
            }, {
              first = 0x5555a3798220,
              second = {
                ID = 43244435
              }
            }, {
              first = 0x5555a3798810,
              second = {
                ID = 43244564
              }
            }, {
              first = 0x5555a38715e0,
              second = {
                ID = 43309899
              }
            }, {
              first = 0x5555a387f010,
              second = {
                ID = 43310867
              }
            }, {
              first = 0x5555a38b20e0,
              second = {
                ID = 43311784
              }
            }, {
              first = 0x5555a3969790,
              second = {
                ID = 43340462
              }
            }, {
              first = 0x5555a3972908,
              second = {
                ID = 43340651
              }
            }, {
              first = 0x5555a39a8348,
              second = {
                ID = 43344201
              }
            }, {
              first = 0x5555a39aaf48,
              second = {
                ID = 43344392
              }
            }, {
              first = 0x5555a39cc1b0,
              second = {
                ID = 43349966
              }
            }, {
              first = 0x5555a39cf338,
              second = {
                ID = 43350162
              }
            }, {
              first = 0x5555a39e9448,
              second = {
                ID = 43354983
              }
            }, {
              first = 0x5555a39ec8a8,
              second = {
                ID = 43355178
              }
            }, {
              first = 0x5555a3a12a18,
              second = {
                ID = 43359562
              }
            }, {
              first = 0x5555a3a15e18,
              second = {
                ID = 43359762
              }
            }, {
              first = 0x5555a3c02358,
              second = {
                ID = 43269921
              }
            }, {
              first = 0x5555a3bef230,
              second = {
                ID = 43289974
              }
            }, {
              first = 0x5555a3dfa268,
              second = {
                ID = 43427665
              }
            }, {
              first = 0x5555a3dfa360,
              second = {
                ID = 43427633
              }
            }, {
              first = 0x5555a3e00408,
              second = {
                ID = 43428926
              }
            }, {
              first = 0x5555a3e00500,
              second = {
                ID = 43428894
              }
            }, {
              first = 0x5555a3e06588,
              second = {
                ID = 43430201
              }
            }, {
              first = 0x5555a3e06680,
              second = {
                ID = 43430169
              }
            }, {
              first = 0x5555a3e106b8,
              second = {
                ID = 43431474
              }
            }, {
              first = 0x5555a3e107b0,
              second = {
                ID = 43431442
              }
            }, {
              first = 0x5555a4057bf8,
              second = {
                ID = 43521362
              }
            }, {
              first = 0x5555a2f587d8,
              second = {
                ID = 43660767
              }
            }, {
              first = 0x5555a45af2a8,
              second = {
                ID = 43735962
              }
            }, {
              first = 0x5555a45b3670,
              second = {
                ID = 43735977
              }
            }, {
              first = 0x5555a45af8d0,
              second = {
                ID = 43736058
              }
            }, {
              first = 0x5555a46223d8,
              second = {
                ID = 43736192
              }
            }, {
              first = 0x5555a462c790,
              second = {
                ID = 43736207
              }
            }, {
              first = 0x5555a4622a00,
              second = {
                ID = 43736288
              }
            }, {
              first = 0x5555a4654020,
              second = {
                ID = 43736454
              }
            }, {
              first = 0x5555a46555b0,
              second = {
                ID = 43736715
              }
            }, {
              first = 0x5555a478c800,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a478c800,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a47baf50,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a47baf50,
              second = {
                ID = 43728904
              }
            }, {
              first = 0x5555a4a08920,
              second = {
                ID = 44223232
              }
            }, {
              first = 0x5555a4a09450,
              second = {
                ID = 44223352
              }
            }, {
              first = 0x5555a4a09f40,
              second = {
                ID = 44223493
              }
            }, {
              first = 0x5555a4ad6410,
              second = {
                ID = 44305306
              }
            }, {
              first = 0x5555a4ad6ee0,
              second = {
                ID = 44305471
              }
            }, {
              first = 0x5555a4ad85d0,
              second = {
                ID = 44305918
              }
            }, {
              first = 0x5555a4ad9280,
              second = {
                ID = 44306085
              }
            }, {
              first = 0x5555a4ada6f0,
              second = {
                ID = 44306500
              }
            }, {
              first = 0x5555a4adafe0,
              second = {
                ID = 44306619
              }
            }, {
              first = 0x5555a4adcfa0,
              second = {
                ID = 44306996
              }
            }, {
              first = 0x5555a4add690,
              second = {
                ID = 44307109
              }
            }, {
              first = 0x5555a4ade6c0,
              second = {
                ID = 44307452
              }
            }, {
              first = 0x5555a4aded80,
              second = {
                ID = 44307565
              }
            }, {
              first = 0x5555a4adff20,
              second = {
                ID = 44307921
              }
            }, {
              first = 0x5555a4ae07e0,
              second = {
                ID = 44308060
              }
            }, {
              first = 0x5555a4ae2940,
              second = {
                ID = 44308475
              }
            }, {
              first = 0x5555a4ae3200,
              second = {
                ID = 44308612
              }
            }, {
              first = 0x5555a4ae5360,
              second = {
                ID = 44309028
              }
            }, {
              first = 0x5555a4ae5c20,
              second = {
                ID = 44309165
              }
            }, {
              first = 0x5555a4ae7d80,
              second = {
                ID = 44309581
              }
            }, {
              first = 0x5555a4ae8640,
              second = {
                ID = 44309718
              }
            }, {
              first = 0x5555a4aea7a0,
              second = {
                ID = 44310133
              }
            }, {
              first = 0x5555a4aeb060,
              second = {
                ID = 44310270
              }
            }, {
              first = 0x5555a4aed1c0,
              second = {
                ID = 44310684
              }
            }, {
              first = 0x5555a4aeda80,
              second = {
                ID = 44310815
              }
            }, {
              first = 0x5555a4aefbe0,
              second = {
                ID = 44311215
              }
            }, {
              first = 0x5555a4af04a0,
              second = {
                ID = 44311346
              }
            }, {
              first = 0x5555a4af27d0,
              second = {
                ID = 44311759
              }
            }, {
              first = 0x5555a4af3280,
              second = {
                ID = 44311916
              }
            }, {
              first = 0x5555a4af5980,
              second = {
                ID = 44312356
              }
            }, {
              first = 0x5555a4af6060,
              second = {
                ID = 44312455
              }
            }, {
              first = 0x5555a4af7230,
              second = {
                ID = 44312790
              }
            }, {
              first = 0x5555a4af7b30,
              second = {
                ID = 44312921
              }
            }, {
              first = 0x5555a4af8e10,
              second = {
                ID = 44313301
              }
            }, {
              first = 0x5555a4af96a0,
              second = {
                ID = 44313429
              }
            }, {
              first = 0x5555a4afa910,
              second = {
                ID = 44313802
              }
            }, {
              first = 0x5555a4afb1a0,
              second = {
                ID = 44313937
              }
            }, {
              first = 0x5555a4afc260,
              second = {
                ID = 44314309
              }
            }, {
              first = 0x5555a4afc920,
              second = {
                ID = 44314420
              }
            }, {
              first = 0x5555a4afda90,
              second = {
                ID = 44314776
              }
            }, {
              first = 0x5555a4afe320,
              second = {
                ID = 44314908
              }
            }, {
              first = 0x5555a4aff730,
              second = {
                ID = 44315314
              }
            }, {
              first = 0x5555a4b00190,
              second = {
                ID = 44315483
              }
            }, {
              first = 0x5555a4b014e0,
              second = {
                ID = 44315914
              }
            }, {
              first = 0x5555a4b01d70,
              second = {
                ID = 44316048
              }
            }, {
              first = 0x5555a4b03710,
              second = {
                ID = 44316554
              }
            }, {
              first = 0x5555a4b04640,
              second = {
                ID = 44316738
              }
            }, {
              first = 0x5555a4b07df0,
              second = {
                ID = 44317869
              }
            }, {
              first = 0x5555a4b088b0,
              second = {
                ID = 44318033
              }
            }, {
              first = 0x5555a4b0b590,
              second = {
                ID = 44318523
              }
            }, {
              first = 0x5555a4b0c2d0,
              second = {
                ID = 44318701
              }
            }, {
              first = 0x5555a4c6d338,
              second = {
                ID = 44422350
              }
            }, {
              first = 0x5555a4c70088,
              second = {
                ID = 44422505
              }
            }, {
              first = 0x5555a4cfea88,
              second = {
                ID = 44432563
              }
            }, {
              first = 0x5555a4d03968,
              second = {
                ID = 44432734
              }
            }, {
              first = 0x5555a4d00568,
              second = {
                ID = 44437987
              }
            }, {
              first = 0x5555a4d053e8,
              second = {
                ID = 44438148
              }
            }, {
              first = 0x5555a4d4dcc8,
              second = {
                ID = 44443976
              }
            }, {
              first = 0x5555a4d51338,
              second = {
                ID = 44444145
              }
            }, {
              first = 0x5555a4dac768,
              second = {
                ID = 44448506
              }
            }, {
              first = 0x5555a4dafdc8,
              second = {
                ID = 44448685
              }
            }, {
              first = 0x5555a518c000,
              second = {
                ID = 44557664
              }
            }, {
              first = 0x5555a518d0e8,
              second = {
                ID = 44558038
              }
            }, {
              first = 0x5555a5292178,
              second = {
                ID = 44689734
              }
            }, {
              first = 0x5555a58e9cc8,
              second = {
                ID = 45775897
              }
            }, {
              first = 0x5555a58ea7f8,
              second = {
                ID = 45776071
              }
            }, {
              first = 0x5555a58eb298,
              second = {
                ID = 45776242
              }
            }, {
              first = 0x5555a58ebcd8,
              second = {
                ID = 45776410
              }
            }, {
              first = 0x5555a58ec7a8,
              second = {
                ID = 45776581
              }
            }, {
              first = 0x5555a58ed2d8,
              second = {
                ID = 45776755
              }
            }, {
              first = 0x5555a58edd78,
              second = {
                ID = 45776926
              }
            }, {
              first = 0x5555a58ee7b8,
              second = {
                ID = 45777094
              }
            }, {
              first = 0x5555a58ef1f8,
              second = {
                ID = 45777265
              }
            }, {
              first = 0x5555a58efc38,
              second = {
                ID = 45777439
              }
            }, {
              first = 0x5555a58f0678,
              second = {
                ID = 45777610
              }
            }, {
              first = 0x5555a58f10b8,
              second = {
                ID = 45777778
              }
            }, {
              first = 0x5555a58f1b88,
              second = {
                ID = 45777949
              }
            }, {
              first = 0x5555a58f26b8,
              second = {
                ID = 45778123
              }
            }, {
              first = 0x5555a58f3158,
              second = {
                ID = 45778294
              }
            }, {
              first = 0x5555a58f3b98,
              second = {
                ID = 45778462
              }
            }, {
              first = 0x5555a58f45d8,
              second = {
                ID = 45778633
              }
            }, {
              first = 0x5555a58f5018,
              second = {
                ID = 45778807
              }
            }, {
              first = 0x5555a58f5a58,
              second = {
                ID = 45778978
              }
            }, {
              first = 0x5555a58f6498,
              second = {
                ID = 45779146
              }
            }, {
              first = 0x5555a58f6ed8,
              second = {
                ID = 45779317
              }
            }, {
              first = 0x5555a58f7918,
              second = {
                ID = 45779491
              }
            }, {
              first = 0x5555a58f8358,
              second = {
                ID = 45779662
              }
            }, {
              first = 0x5555a58f8d98,
              second = {
                ID = 45779830
              }
            }...},
          LateParsedInstantiations = {
            <llvm::SmallVectorImpl<std::pair<clang::ValueDecl*, clang::SourceLocation> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::ValueDecl*, clang::SourceLocation>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::ValueDecl*, clang::SourceLocation>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1420,
                    Size = 0,
                    Capacity = 1
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::ValueDecl*, clang::SourceLocation>, 1>> = {
              InlineElts = '\000' <repeats 15 times>
            }, <No data fields>},
          PendingLocalImplicitInstantiations = std::deque with 0 elements,
          VarDataSharingAttributesStack = 0x5555a18e1830,
          DeclareTargetNesting = {
            <llvm::SmallVectorImpl<clang::Sema::DeclareTargetContextInfo>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::DeclareTargetContextInfo, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::DeclareTargetContextInfo, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1498,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::DeclareTargetContextInfo, 4>> = {
              InlineElts = '\000' <repeats 223 times>
            }, <No data fields>},
          OMPDeclareVariantScopes = {
            <llvm::SmallVectorImpl<clang::Sema::OMPDeclareVariantScope>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::OMPDeclareVariantScope, false>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::OMPDeclareVariantScope, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1588,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::OMPDeclareVariantScope, 4>> = {
              InlineElts = '\000' <repeats 159 times>
            }, <No data fields>},
          OMPAssumeScoped = {
            <llvm::SmallVectorImpl<clang::AssumptionAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::AssumptionAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::AssumptionAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1638,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::AssumptionAttr*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          OMPAssumeGlobal = {
            <llvm::SmallVectorImpl<clang::AssumptionAttr*>> = {
              <llvm::SmallVectorTemplateBase<clang::AssumptionAttr*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::AssumptionAttr*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1668,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::AssumptionAttr*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          ForceCUDAHostDeviceDepth = 0,
          DeviceDeferredDiags = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > >, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > > > >, clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > >, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > >, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, std::vector<std::pair<clang::SourceLocation, clang::PartialDiagnostic>, std::allocator<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > > > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          LocsWithCUDACallDiags = {
            <llvm::detail::DenseSetImpl<clang::Sema::FunctionDeclAndLoc, llvm::DenseMap<clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >, clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::Sema::FunctionDeclAndLoc, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Sema::FunctionDeclAndLoc, void>, llvm::detail::DenseSetPair<clang::Sema::FunctionDeclAndLoc> >:
                Buckets = 0x0,
                NumEntries = 0,
                NumTombstones = 0,
                NumBuckets = 0
              }
            }, <No data fields>},
          DeviceKnownEmittedFns = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc> >, clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc, llvm::DenseMapInfo<clang::CanonicalDeclPtr<clang::FunctionDecl>, void>, llvm::detail::DenseMapPair<clang::CanonicalDeclPtr<clang::FunctionDecl>, clang::Sema::FunctionDeclAndLoc> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          TypeTagForDatatypeMagicValues = std::unique_ptr<llvm::DenseMap<std::pair<clang::IdentifierInfo const*, unsigned long>, clang::Sema::TypeTagData, llvm::DenseMapInfo<std::pair<clang::IdentifierInfo const*, unsigned long>, void>, llvm::detail::DenseMapPair<std::pair<clang::IdentifierInfo const*, unsigned long>, clang::Sema::TypeTagData> >> = {
            get() = 0x0
          },
          CurScope = 0x55556d734890,
          Ident_super = 0x0,
          Ident___float128 = 0x0,
          Ident__Nonnull = 0x0,
          Ident__Nullable = 0x0,
          Ident__Nullable_result = 0x0,
          Ident__Null_unspecified = 0x0,
          Ident_NSError = 0x0,
          SemaPPCallbackHandler = 0x555561a6bde0,
          CFError = 0x0,
          DelayedDllExportClasses = {
            <llvm::SmallVectorImpl<clang::CXXRecordDecl*>> = {
              <llvm::SmallVectorTemplateBase<clang::CXXRecordDecl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::CXXRecordDecl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1740,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::CXXRecordDecl*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          DelayedDllExportMemberFunctions = {
            <llvm::SmallVectorImpl<clang::CXXMethodDecl*>> = {
              <llvm::SmallVectorTemplateBase<clang::CXXMethodDecl*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::CXXMethodDecl*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e1770,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::CXXMethodDecl*, 4>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          ParsingClassDepth = 2,
          MisalignedMembers = {
            <llvm::SmallVectorImpl<clang::Sema::MisalignedMember>> = {
              <llvm::SmallVectorTemplateBase<clang::Sema::MisalignedMember, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Sema::MisalignedMember, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a18e17a8,
                    Size = 0,
                    Capacity = 4
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Sema::MisalignedMember, 4>> = {
              InlineElts = '\000' <repeats 127 times>
            }, <No data fields>}
        }
        pp2 = @0x5555a1bf36a0: {
          OnToken = {
            <llvm::detail::UniqueFunctionBase<void, clang::Token const&>> = {
              StorageUnion = {
                OutOfLineStorage = {
                  StoragePtr = 0x20,
                  Size = 32,
                  Alignment = 93806192291827
                },
                InlineStorage = {
                  __data = " \000\000\000\000\000\000\000 \000\000\000\000\000\000\000\363\357\304\364PU\000",
                  __align = {<No data fields>}
                }
              },
              CallbackAndInlineFlag = {
                Value = 0
              }
            }, <No data fields>},
          PPOpts = std::shared_ptr<clang::PreprocessorOptions> (use count 3, weak count 0) = {
            get() = 0x55556153e770
          },
          Diags = 0x5555615324b0,
          LangOpts = @0x55556152eb00,
          Target = 0x555561539bc0,
          AuxTarget = 0x0,
          FileMgr = @0x55556155a650,
          SourceMgr = @0x55556153b630,
          ScratchBuf = std::unique_ptr<clang::ScratchBuffer> = {
            get() = 0x5555a18af000
          },
          HeaderInfo = @0x5555a18cc2c0,
          TheModuleLoader = @0x555561537f70,
          ExternalSource = 0x0,
          BP = {
            <llvm::AllocatorBase<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {<No data fields>}, 
            <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
              <llvm::MallocAllocator> = {
                <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            members of llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>:
            CurPtr = 0x5555a192f688 " ",
            End = 0x5555a192f6d0 "\317\357\310\364PU",
            Slabs = {
              <llvm::SmallVectorImpl<void*>> = {
                <llvm::SmallVectorTemplateBase<void*, true>> = {
                  <llvm::SmallVectorTemplateCommon<void*, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x555576bfa500,
                      Size = 12,
                      Capacity = 19
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<void*, 4>> = {
                InlineElts = " \246R\233UU\000\000p\005\221\241UU\000\000\220%\221\241UU\000\000\320e\221\241UU\000"
              }, <No data fields>},
            CustomSizedSlabs = {
              <llvm::SmallVectorImpl<std::pair<void*, unsigned long> >> = {
                <llvm::SmallVectorTemplateBase<std::pair<void*, unsigned long>, true>> = {
                  <llvm::SmallVectorTemplateCommon<std::pair<void*, unsigned long>, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a1bf3770,
                      Size = 0,
                      Capacity = 0
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<std::pair<void*, unsigned long>, 0>> = {<No data fields>}, <No data fields>},
            BytesAllocated = 44496,
            RedZoneSize = 1
          },
          Ident__LINE__ = 0x55556b16c920,
          Ident__FILE__ = 0x55556b16c958,
          Ident__DATE__ = 0x55556b16c990,
          Ident__TIME__ = 0x55556b16c9c8,
          Ident__INCLUDE_LEVEL__ = 0x55556b16cb28,
          Ident__BASE_FILE__ = 0x55556b16cae8,
          Ident__FILE_NAME__ = 0x55556b16cb98,
          Ident__TIMESTAMP__ = 0x55556b16cb60,
          Ident__COUNTER__ = 0x55556b16ca00,
          Ident_Pragma = 0x55556b16ca30,
          Ident__pragma = 0x0,
          Ident__identifier = 0x0,
          Ident__VA_ARGS__ = 0x55556b16c8b0,
          Ident__VA_OPT__ = 0x55556b16c8e8,
          Ident__has_feature = 0x55556b16cbd0,
          Ident__has_extension = 0x55556b16cc08,
          Ident__has_builtin = 0x55556b16cc40,
          Ident__has_constexpr_builtin = 0x55556b16cc80,
          Ident__has_attribute = 0x55556b16ccb8,
          Ident__has_include = 0x55556b16cd38,
          Ident__has_include_next = 0x55556b16cd78,
          Ident__has_warning = 0x55556b16cdb0,
          Ident__is_identifier = 0x55556b16cde8,
          Ident__building_module = 0x55556b16cfa8,
          Ident__MODULE__ = 0x0,
          Ident__has_cpp_attribute = 0x55556b16cab0,
          Ident__has_c_attribute = 0x0,
          Ident__has_declspec = 0x55556b16cd00,
          Ident__is_target_arch = 0x55556b16ce28,
          Ident__is_target_vendor = 0x55556b16ce68,
          Ident__is_target_os = 0x55556b16cea0,
          Ident__is_target_environment = 0x55556b16cee0,
          Ident__is_target_variant_os = 0x55556b16cf20,
          Ident__is_target_variant_environment = 0x55556b16cf68,
          Ident__FLT_EVAL_METHOD__ = 0x55556b16ca70,
          ArgMacro = 0x0,
          DATELoc = {
            ID = 0
          },
          TIMELoc = {
            ID = 0
          },
          CurrentFPEvalMethod = clang::LangOptions::FEM_Source,
          LastFPEvalPragmaLocation = {
            ID = 0
          },
          TUFPEvalMethod = clang::LangOptions::FEM_Source,
          CounterValue = 0,
          KeepComments = false,
          KeepMacroComments = false,
          SuppressIncludeNotFoundError = false,
          InMacroArgs = false,
          OwnsHeaderSearch = true,
          DisableMacroExpansion = false,
          MacroExpansionInDirectivesOverride = false,
          ReadMacrosFromExternalSource = false,
          PragmasEnabled = true,
          PreprocessedOutput = false,
          ParsingIfOrElifDirective = false,
          InMacroArgPreExpansion = false,
          Identifiers = {
            HashTable = {
              <llvm::StringMapImpl> = {
                TheTable = 0x5555a4914750,
                NumBuckets = 32768,
                NumItems = 16402,
                NumTombstones = 0,
                ItemSize = 16
              }, 
              <llvm::detail::AllocatorHolder<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {
                <llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>> = {
                  <llvm::AllocatorBase<llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128> >> = {<No data fields>}, 
                  <llvm::detail::AllocatorHolder<llvm::MallocAllocator>> = {
                    <llvm::MallocAllocator> = {
                      <llvm::AllocatorBase<llvm::MallocAllocator>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
                  members of llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096, 128>:
                  CurPtr = 0x5555a3a82b88 "\260K\377\377\377\177",
                  End = 0x5555a3a84280 "@\033\032\244UU",
                  Slabs = {
                    <llvm::SmallVectorImpl<void*>> = {
                      <llvm::SmallVectorTemplateBase<void*, true>> = {
                        <llvm::SmallVectorTemplateCommon<void*, void>> = {
                          <llvm::SmallVectorBase<unsigned int>> = {
                            BeginX = 0x55559ede7520,
                            Size = 182,
                            Capacity = 319
                          }, <No data fields>}, 
                      }, <No data fields>}, 
                    <llvm::SmallVectorStorage<void*, 4>> = {
                      InlineElts = "\220\310\026kUU\000\000\0009jnUU\000\000\020\210LnUU\000\000\260\177NnUU\000"
                    }, <No data fields>},
                  CustomSizedSlabs = {
                    <llvm::SmallVectorImpl<std::pair<void*, unsigned long> >> = {
                      <llvm::SmallVectorTemplateBase<std::pair<void*, unsigned long>, true>> = {
                        <llvm::SmallVectorTemplateCommon<std::pair<void*, unsigned long>, void>> = {
                          <llvm::SmallVectorBase<unsigned int>> = {
                            BeginX = 0x5555a1bf3928,
                            Size = 0,
                            Capacity = 0
                          }, <No data fields>}, 
                      }, <No data fields>}, 
                    <llvm::SmallVectorStorage<std::pair<void*, unsigned long>, 0>> = {<No data fields>}, <No data fields>},
                  BytesAllocated = 903517,
                  RedZoneSize = 1
                }, <No data fields>}, <No data fields>},
            ExternalLookup = 0x0
          },
          Selectors = {
            Impl = 0x5555a16594f0
          },
          BuiltinInfo = std::unique_ptr<clang::Builtin::Context> = {
            get() = 0x5555a1860160
          },
          PragmaHandlers = std::unique_ptr<clang::PragmaNamespace> = {
            get() = 0x5555a18c93b0
          },
          PragmaHandlersBackup = std::unique_ptr<clang::PragmaNamespace> = {
            get() = 0x0
          },
          CommentHandlers = std::vector of length 1, capacity 1 = {0x5555773d1ce0},
          Emptyline = 0x0,
          TUKind = clang::TU_Complete,
          CodeComplete = 0x55559f6c1e60,
          CodeCompletionFile = 0x0,
          CodeCompletionOffset = 0,
          CodeCompletionLoc = {
            ID = 0
          },
          CodeCompletionFileLoc = {
            ID = 0
          },
          ModuleImportLoc = {
            ID = 0
          },
          NamedModuleImportPath = {
            <llvm::SmallVectorImpl<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >> = {
              <llvm::SmallVectorTemplateBase<std::pair<clang::IdentifierInfo*, clang::SourceLocation>, true>> = {
                <llvm::SmallVectorTemplateCommon<std::pair<clang::IdentifierInfo*, clang::SourceLocation>, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a1bf39b8,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<std::pair<clang::IdentifierInfo*, clang::SourceLocation>, 2>> = {
              InlineElts = '\000' <repeats 31 times>
            }, <No data fields>},
          IsAtImport = false,
          LastTokenWasAt = false,
          StdCXXImportSeqState = {
            S = 3,
            AfterHeaderName = false
          },
          TrackGMFState = {
            S = clang::Preprocessor::TrackGMF::BeforeGMFIntroducer
          },
          ModuleDeclState = {
            State = clang::Preprocessor::ModuleDeclSeq::NotAModuleDecl,
            Name = ""
          },
          ModuleImportExpectsIdentifier = false,
          PragmaARCCFCodeAuditedInfo = {
            first = 0x0,
            second = {
              ID = 0
            }
          },
          PragmaAssumeNonNullLoc = {
            ID = 0
          },
          PreambleRecordedPragmaAssumeNonNullLoc = {
            ID = 0
          },
          CodeCompletionReached = false,
          CodeCompletionII = 0x0,
          CodeCompletionTokenRange = {
            B = {
              ID = 0
            },
            E = {
              ID = 0
            }
          },
          MainFileDir = 0x0,
          SkipMainFilePreamble = {
            first = 0,
            second = false
          },
          HasReachedMaxIncludeDepth = false,
          LexLevel = 0,
          TokenCount = 845750,
          PreprocessToken = false,
          MaxTokens = 0,
          MaxTokensOverrideLoc = {
            ID = 0
          },
          PreambleConditionalStack = {
            SkipInfo = std::optional<clang::Preprocessor::PreambleSkipInfo> [no contained value],
            ConditionalStack = {
              <llvm::SmallVectorImpl<clang::PPConditionalInfo>> = {
                <llvm::SmallVectorTemplateBase<clang::PPConditionalInfo, true>> = {
                  <llvm::SmallVectorTemplateCommon<clang::PPConditionalInfo, void>> = {
                    <llvm::SmallVectorBase<unsigned int>> = {
                      BeginX = 0x5555a1bf3a98,
                      Size = 0,
                      Capacity = 4
                    }, <No data fields>}, 
                }, <No data fields>}, 
              <llvm::SmallVectorStorage<clang::PPConditionalInfo, 4>> = {
                InlineElts = '\000' <repeats 31 times>
              }, <No data fields>},
            ConditionalStackState = clang::Preprocessor::PreambleConditionalStackStore::Off
          },
          CurLexer = std::unique_ptr<clang::Lexer> = {
            get() = 0x5555a1a10c60
          },
          CurPPLexer = 0x5555a1a10c60,
          CurDirLookup = {
            <llvm::iterator_facade_base<clang::detail::SearchDirIteratorImpl<true>, std::forward_iterator_tag, clang::DirectoryLookup const, long, clang::DirectoryLookup const*, clang::DirectoryLookup const&>> = {<No data fields>}, 
            members of clang::detail::SearchDirIteratorImpl<true>:
            HS = 0x0,
            Idx = 0
          },
          CurTokenLexer = std::unique_ptr<clang::TokenLexer> = {
            get() = 0x0
          },
          CurLexerKind = clang::Preprocessor::CLK_Lexer,
          CurLexerSubmodule = 0x0,
          IncludeMacroStack = std::vector of length 0, capacity 256,
          Callbacks = std::unique_ptr<clang::PPCallbacks> = {
            get() = 0x5555773dcb80
          },
          PostLexAction = {
            <std::_Maybe_unary_or_binary_function<void, clang::Token const&>> = {
              <std::unary_function<clang::Token const&, void>> = {<No data fields>}, <No data fields>}, 
            <std::_Function_base> = {
              _M_functor = {
                _M_unused = {
                  _M_object = 0x0,
                  _M_const_object = 0x0,
                  _M_function_pointer = 0x0,
                  _M_member_pointer = NULL
                },
                _M_pod_data = '\000' <repeats 15 times>
              },
              _M_manager = 0x55555bcf82d4 <std::_Function_handler<void(const clang::Token&), clang::Preprocessor::Lex(clang::Token&)::<lambda(const clang::Token&)> >::_M_manager(std::_Any_data &, const std::_Any_data &, std::_Manager_operation)>
            }, 
            members of std::function<void(const clang::Token&)>:
            _M_invoker = 0x55555bcf8296 <std::_Function_handler<void(const clang::Token&), clang::Preprocessor::Lex(clang::Token&)::<lambda(const clang::Token&)> >::_M_invoke(const std::_Any_data &, const clang::Token &)>
          },
          DelayedMacroExpandsCallbacks = {
            <llvm::SmallVectorImpl<clang::Preprocessor::MacroExpandsInfo>> = {
              <llvm::SmallVectorTemplateBase<clang::Preprocessor::MacroExpandsInfo, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Preprocessor::MacroExpandsInfo, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a1bf3b48,
                    Size = 0,
                    Capacity = 2
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Preprocessor::MacroExpandsInfo, 2>> = {
              InlineElts = '\000' <repeats 111 times>
            }, <No data fields>},
          BuildingSubmoduleStack = {
            <llvm::SmallVectorImpl<clang::Preprocessor::BuildingSubmoduleInfo>> = {
              <llvm::SmallVectorTemplateBase<clang::Preprocessor::BuildingSubmoduleInfo, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Preprocessor::BuildingSubmoduleInfo, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a1bf3bc8,
                    Size = 0,
                    Capacity = 8
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Preprocessor::BuildingSubmoduleInfo, 8>> = {
              InlineElts = '\000' <repeats 255 times>
            }, <No data fields>},
          Submodules = std::map with 0 elements,
          NullSubmoduleState = {
            Macros = {
              <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo const*, clang::Preprocessor::MacroState, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroState> >, clang::IdentifierInfo const*, clang::Preprocessor::MacroState, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroState> >> = {
                <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
              members of llvm::DenseMap<clang::IdentifierInfo const*, clang::Preprocessor::MacroState, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroState> >:
              Buckets = 0x5555a19256a0,
              NumEntries = 495,
              NumTombstones = 0,
              NumBuckets = 1024
            },
            VisibleModules = {
              ImportLocs = std::vector of length 0, capacity 0,
              Generation = 0
            }
          },
          CurSubmoduleState = 0x5555a1bf3cf8,
          IncludedFiles = {
            <llvm::detail::DenseSetImpl<clang::FileEntry const*, llvm::DenseMap<clang::FileEntry const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseSetPair<clang::FileEntry const*> >, llvm::DenseMapInfo<clang::FileEntry const*, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::DenseMap<clang::FileEntry const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseSetPair<clang::FileEntry const*> >, clang::FileEntry const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseSetPair<clang::FileEntry const*> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::DenseMap<clang::FileEntry const*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::FileEntry const*, void>, llvm::detail::DenseSetPair<clang::FileEntry const*> >:
                Buckets = 0x55559a2258a0,
                NumEntries = 1,
                NumTombstones = 0,
                NumBuckets = 64
              }
            }, <No data fields>},
          AffectingClangModules = {
            <llvm::SetVector<clang::Module*, llvm::SmallVector<clang::Module*, 2>, llvm::SmallDenseSet<clang::Module*, 2, llvm::DenseMapInfo<clang::Module*, void> > >> = {
              set_ = {
                <llvm::detail::DenseSetImpl<clang::Module*, llvm::SmallDenseMap<clang::Module*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >, llvm::DenseMapInfo<clang::Module*, void> >> = {
                  TheMap = {
                    <llvm::DenseMapBase<llvm::SmallDenseMap<clang::Module*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >, clang::Module*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >> = {
                      <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                    members of llvm::SmallDenseMap<clang::Module*, llvm::detail::DenseSetEmpty, 2, llvm::DenseMapInfo<clang::Module*, void>, llvm::detail::DenseSetPair<clang::Module*> >:
                    Small = 1,
                    NumEntries = 0,
                    NumTombstones = 0,
                    storage = {
                      buffer = "\000\360\377\377\377\377\377\377\000\360\377\377\377\377\377\377"
                    }
                  }
                }, <No data fields>},
              vector_ = {
                <llvm::SmallVectorImpl<clang::Module*>> = {
                  <llvm::SmallVectorTemplateBase<clang::Module*, true>> = {
                    <llvm::SmallVectorTemplateCommon<clang::Module*, void>> = {
                      <llvm::SmallVectorBase<unsigned int>> = {
                        BeginX = 0x5555a1bf3d78,
                        Size = 0,
                        Capacity = 2
                      }, <No data fields>}, 
                  }, <No data fields>}, 
                <llvm::SmallVectorStorage<clang::Module*, 2>> = {
                  InlineElts = '\000' <repeats 15 times>
                }, <No data fields>}
            }, <No data fields>},
          ModuleMacros = {
            <llvm::FoldingSetImpl<llvm::FoldingSet<clang::ModuleMacro>, clang::ModuleMacro>> = {
              <llvm::FoldingSetBase> = {
                Buckets = 0x55556d3a9ba0,
                NumBuckets = 64,
                NumNodes = 0
              }, <No data fields>}, <No data fields>},
          PendingModuleMacroNames = {
            <llvm::SmallVectorImpl<clang::IdentifierInfo const*>> = {
              <llvm::SmallVectorTemplateBase<clang::IdentifierInfo const*, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::IdentifierInfo const*, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a1bf3da8,
                    Size = 0,
                    Capacity = 32
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::IdentifierInfo const*, 32>> = {
              InlineElts = '\000' <repeats 255 times>
            }, <No data fields>},
          LeafModuleMacros = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*>, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*> > >, clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*>, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*> > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*>, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, llvm::TinyPtrVector<clang::ModuleMacro*> > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          WarnUnusedMacroLocs = {
            <llvm::detail::DenseSetImpl<clang::SourceLocation, llvm::SmallDenseMap<clang::SourceLocation, llvm::detail::DenseSetEmpty, 32, llvm::DenseMapInfo<clang::SourceLocation, void>, llvm::detail::DenseSetPair<clang::SourceLocation> >, llvm::DenseMapInfo<clang::SourceLocation, void> >> = {
              TheMap = {
                <llvm::DenseMapBase<llvm::SmallDenseMap<clang::SourceLocation, llvm::detail::DenseSetEmpty, 32, llvm::DenseMapInfo<clang::SourceLocation, void>, llvm::detail::DenseSetPair<clang::SourceLocation> >, clang::SourceLocation, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<clang::SourceLocation, void>, llvm::detail::DenseSetPair<clang::SourceLocation> >> = {
                  <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
                members of llvm::SmallDenseMap<clang::SourceLocation, llvm::detail::DenseSetEmpty, 32, llvm::DenseMapInfo<clang::SourceLocation, void>, llvm::detail::DenseSetPair<clang::SourceLocation> >:
                Small = 1,
                NumEntries = 0,
                NumTombstones = 0,
                storage = {
                  buffer = '\377' <repeats 128 times>
                }
              }
            }, <No data fields>},
          AnnotationInfos = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations> >, clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations, llvm::DenseMapInfo<clang::IdentifierInfo const*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo const*, clang::Preprocessor::MacroAnnotations> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          MacroArgCache = 0x0,
          PragmaPushMacroInfo = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> > > >, clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> > > >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> >, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, std::vector<clang::MacroInfo*, std::allocator<clang::MacroInfo*> > > >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          NumDirectives = 896,
          NumDefined = 466,
          NumUndefined = 0,
          NumPragma = 427,
          NumIf = 0,
          NumElse = 0,
          NumEndif = 0,
          NumEnteredSourceFiles = 2,
          MaxIncludeStackDepth = 0,
          NumMacroExpanded = 0,
          NumFnMacroExpanded = 0,
          NumBuiltinMacroExpanded = 0,
          NumFastMacroExpanded = 0,
          NumTokenPaste = 0,
          NumFastTokenPaste = 0,
          NumSkipped = 0,
          Predefines = "# 1 \"<built-in>\" 3\n#define __llvm__ 1\n#define __clang__ 1\n#define __clang_major__ 16\n#define __clang_minor__ 0\n#define __clang_patchlevel__ 5\n#define __clang_version__ \"16.0.5 \"\n#define __GNUC__ 4\n#de"...,
          PredefinesFileID = {
            ID = 851075
          },
          PCHThroughHeaderFileID = {
            ID = 0
          },
          SkippingUntilPragmaHdrStop = false,
          SkippingUntilPCHThroughHeader = false,
          NumCachedTokenLexers = 8,
          TokenLexerCache = {std::unique_ptr<clang::TokenLexer> = {
              get() = 0x555585e27de0
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x5555a12e47b0
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x55559f21a640
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x55559f3cedd0
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x55559e5f0bb0
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x55559e5d3f10
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x55556bb6cf30
            }, std::unique_ptr<clang::TokenLexer> = {
              get() = 0x55559d955680
            }},
          MacroExpandedTokens = {
            <llvm::SmallVectorImpl<clang::Token>> = {
              <llvm::SmallVectorTemplateBase<clang::Token, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Token, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x5555a1bf4040,
                    Size = 0,
                    Capacity = 16
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Token, 16>> = {
              InlineElts = '\000' <repeats 383 times>
            }, <No data fields>},
          MacroExpandingLexersStack = std::vector of length 0, capacity 0,
          Record = 0x55557b163dc0,
          CachedTokens = {
            <llvm::SmallVectorImpl<clang::Token>> = {
              <llvm::SmallVectorTemplateBase<clang::Token, true>> = {
                <llvm::SmallVectorTemplateCommon<clang::Token, void>> = {
                  <llvm::SmallVectorBase<unsigned int>> = {
                    BeginX = 0x55559dba52a0,
                    Size = 0,
                    Capacity = 31
                  }, <No data fields>}, 
              }, <No data fields>}, 
            <llvm::SmallVectorStorage<clang::Token, 1>> = {
              InlineElts = "\246_w\002\t\000\000\000@㒡UU\000\000\005\000\001\000PU\000"
            }, <No data fields>},
          CachedLexPos = 0,
          BacktrackPositions = std::vector of length 0, capacity 2,
          SkippingExcludedConditionalBlock = false,
          RecordedSkippedRanges = {
            <llvm::DenseMapBase<llvm::DenseMap<char const*, unsigned int, llvm::DenseMapInfo<char const*, void>, llvm::detail::DenseMapPair<char const*, unsigned int> >, char const*, unsigned int, llvm::DenseMapInfo<char const*, void>, llvm::detail::DenseMapPair<char const*, unsigned int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<char const*, unsigned int, llvm::DenseMapInfo<char const*, void>, llvm::detail::DenseMapPair<char const*, unsigned int> >:
            Buckets = 0x0,
            NumEntries = 0,
            NumTombstones = 0,
            NumBuckets = 0
          },
          PoisonReasons = {
            <llvm::DenseMapBase<llvm::DenseMap<clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >, clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >> = {
              <llvm::DebugEpochBase> = {<No data fields>}, <No data fields>}, 
            members of llvm::DenseMap<clang::IdentifierInfo*, unsigned int, llvm::DenseMapInfo<clang::IdentifierInfo*, void>, llvm::detail::DenseMapPair<clang::IdentifierInfo*, unsigned int> >:
            Buckets = 0x55559a892c00,
            NumEntries = 2,
            NumTombstones = 0,
            NumBuckets = 64
          },
          Ident__exception_code = 0x0,
          Ident___exception_code = 0x0,
          Ident_GetExceptionCode = 0x0,
          Ident__exception_info = 0x0,
          Ident___exception_info = 0x0,
          Ident_GetExceptionInfo = 0x0,
          Ident__abnormal_termination = 0x0,
          Ident___abnormal_termination = 0x0,
          Ident_AbnormalTermination = 0x0
        }
        parser = std::unique_ptr<clang::Parser> = {
          get() = 0x55559f6c1e60
        }
        import_state = clang::Sema::ModuleImportState::NotACXX20Module
        a_decl = {
          Ptr = 0x0
        }
#28 0x0000555555ef7b59 in main (argc=81, argv=0x7fffffffcd38) at /home/swd/projs/common/pasta/bin/DumpAST/Main.cpp:135
        maybe_ast = {
          destroyed = 176,
          checked = 203,
          data = std::variant<pasta::AST, std::string> [no contained value]
        }
        job = @0x555561541be0: {
          impl = std::shared_ptr<pasta::CompileJobImpl> (use count 1, weak count 1) = {
            get() = 0x555561547230
          }
        }
        __for_range = @0x7fffffffcac0: std::vector of length 1, capacity 1 = {{
            impl = std::shared_ptr<pasta::CompileJobImpl> (use count 1, weak count 1) = {
              get() = 0x555561547230
            }
          }}
        __for_begin = {
  impl = std::shared_ptr<pasta::CompileJobImpl> (use count 1, weak count 1) = {
    get() = 0x555561547230
  }
}
        __for_end = {
  impl = <error reading variable: Cannot access memory at address 0x39>
}
        initializer = {
          fds = {<No data fields>},
          llvm = {<No data fields>}
        }
        fm = {
          impl = std::shared_ptr<pasta::FileManagerImpl> (use count 12062, weak count 1814) = {
            get() = 0x55556152d860
          }
        }
        maybe_compiler = {
          destroyed = false,
          checked = true,
          data = std::variant<pasta::Compiler, std::string> [index 0] = {{
              impl = std::shared_ptr<pasta::CompilerImpl> (use count 1, weak count 0) = {
                get() = 0x55556152e510
              }
            }}
        }
        maybe_cwd = {
          destroyed = true,
          checked = true,
          data = std::variant<std::filesystem::__cxx11::path, std::error_code> [index 0] containing filesystem::path ""
        }
        args = {
          argv = std::vector of length 80, capacity 128 = {0x55556152f310 "/home/swd/apps/clang-latest/bin/clang++", 0x55556152f338 "-DBOOST_ASIO_DISABLE_HANDLER_TYPE_REQUIREMENTS", 0x55556152f367 "-DBOOST_ASIO_USE_TS_EXECUTOR_AS_DEFAULT", 0x55556152f38f "-DBOOST_BEAST_ALLOW_DEPRECATED", 0x55556152f3ae "-DBOOST_CONTAINER_FWD_BAD_DEQUE", 0x55556152f3ce "-DBOOST_COROUTINES_NO_DEPRECATION_WARNING", 0x55556152f3f8 "-DBOOST_FILESYSTEM_DEPRECATED", 0x55556152f416 "-DBOOST_STACKTRACE_ADDR2LINE_LOCATION=\\\"/usr/bin/addr2line\\\"", 0x55556152f453 "-DBOOST_STACKTRACE_USE_ADDR2LINE", 0x55556152f474 "-DBOOST_STACKTRACE_USE_BACKTRACE", 0x55556152f495 "-DBOOST_STACKTRACE_USE_NOOP", 0x55556152f4b1 "-DCARES_STATICLIB", 0x55556152f4c3 "-DDATE_HEADER_ONLY", 0x55556152f4d6 "-DDEBUG", 0x55556152f4de "-DENABLE_TESTS", 0x55556152f4ed "-DGIT_COMMIT_HASH=\\\"ed9064ce3f6de6da6b63417e59f3100c8e6c4c6d\\\"", 0x55556152f52c "-DHAS_UNCAUGHT_EXCEPTIONS=1", 0x55556152f548 "-DOPENSSL_NO_SSL2", 0x55556152f55a "-D_DEBUG", 0x55556152f563 "-I/home/swd/projs/ripple/mine/src/ed25519-donna", 0x55556152f593 "-I/home/swd/projs/ripple/mine/src/secp256k1/include", 0x55556152f5c7 "-I/home/swd/projs/ripple/mine/src", 0x55556152f5e9 "-isystem", 0x55556152f5f2 "/home/swd/.conan/data/boost/1.82.0/_/_/package/f81afbcfa21cf6994cf0e45c1b11229c01c767a7/include", 0x55556152f652 "-isystem", 0x55556152f65b "/home/swd/.conan/data/openssl/1.1.1u/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", 0x55556152f6bd "-isystem", 0x55556152f6c6 "/home/swd/.conan/data/libarchive/3.6.2/_/_/package/d9fea6983af2a77bcbe3f0b088cea5aef9308bd7/include", 0x55556152f72a "-isystem", 0x55556152f733 "/home/swd/.conan/data/lz4/1.9.3/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", 0x55556152f790 "-isystem", 0x55556152f799 "/home/swd/projs/ripple/mine/cur_build/proto_gen_grpc", 0x55556152f7ce "-isystem", 0x55556152f7d7 "/home/swd/.conan/data/grpc/1.50.1/_/_/package/d156c58fd512defbc1155e665684d7875e800ba9/include", 0x55556152f836 "-isystem", 0x55556152f83f "/home/swd/.conan/data/abseil/20220623.0/_/_/package/e84b6d643e7f97d33bf72700134618fbae8bbbf6/include", 0x55556152f8a4 "-isystem", 0x55556152f8ad "/home/swd/.conan/data/c-ares/1.19.0/_/_/package/ed86cef4487c6b9ce327a03d24ced8142000e8b9/include", 0x55556152f90e "-isystem", 0x55556152f917 "/home/swd/.conan/data/re2/20230301/_/_/package/e84b6d643e7f97d33bf72700134618fbae8bbbf6/include", 0x55556152f977 "-isystem", 0x55556152f980 "/home/swd/.conan/data/zlib/1.2.13/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", 0x55556152f9df "-isystem", 0x55556152f9e8 "/home/swd/.conan/data/protobuf/3.21.9/_/_/package/681b3b1dffc7e4dc6f5551cdb6e1fe56bdda3e85/include", 0x55556152fa4b "-isystem", 0x55556152fa54 "/home/swd/projs/ripple/mine/cur_build/proto_gen", 0x55556152fa84 "-isystem", 0x55556152fa8d "/home/swd/projs/ripple/mine/cur_build/proto_gen/src/ripple/proto", 0x55556152face "-isystem", 0x55556152fad7 "/home/swd/.conan/data/soci/4.0.3/_/_/package/dc82e3681e64ed36c447531c9e4883a5c616a774/include", 0x55556152fb35 "-isystem", 0x55556152fb3e "/home/swd/.conan/data/bzip2/1.0.8/_/_/package/5e357164f23f7c4e38ebe87433827878dbe1a74c/include", 0x55556152fb9d "-isystem", 0x55556152fba6 "/home/swd/.conan/data/libbacktrace/cci.20210118/_/_/package/06b9cd1c4dccbb163a99056eda646b0e168548fc/include", 0x55556152fc13 "-isystem", 0x55556152fc1c "/home/swd/.conan/data/sqlite3/3.42.0/_/_/package/ae0e146c4c82ac1e46c279d15c964c80fedbdf5f/include", 0x55556152fc7e "-isystem", 0x55556152fc87 "/home/swd/.conan/data/nudb/2.0.8/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include", 0x55556152fce5 "-isystem", 0x55556152fcee "/home/swd/.conan/data/date/3.0.1/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include", 0x55556152fd4c "-m64", 0x55556152fd51 "-stdlib=libstdc++", 0x55556152fd63 "-Wall", 0x55556152fd69 "-Wdeprecated", 0x55556152fd76 "-Wextra", 0x55556152fd7e "-Wno-unused-parameter", 0x55556152fd94 "-g", 0x55556152fd97 "-std=c++20", 0x55556152fda2 "-fPIE", 0x55556152fda8 "-frtti", 0x55556152fdaf "-Wnon-virtual-dtor", 0x55556152fdc2 "-Wno-sign-compare", 0x55556152fdd4 "-Wno-char-subscripts", 0x55556152fde9 "-Wno-format", 0x55556152fdf5 "-Wno-unused-local-typedefs", 0x55556152fe10 "-fstack-protector", 0x55556152fe22 "-o", 0x55556152fe25 "CMakeFiles/rippled.dir/src/ripple/app/ledger/impl/LedgerReplay.cpp.o", 0x55556152fe6a "-c", 0x55556152fe6d "/home/swd/projs/ripple/mine/src/ripple/app/ledger/impl/LedgerReplay.cpp"},
          data = std::unique_ptr<char []> = {
            get() = 0x55556152f310 "/home/swd/apps/clang-latest/bin/clang++"
          }
        }
        maybe_command = {
          destroyed = true,
          checked = true,
          data = std::variant<pasta::CompileCommand, std::string_view> [index 0] = {{
              impl = std::shared_ptr<pasta::CompileCommandImpl> (empty) = {
                get() = 0x0
              }
            }}
        }
        command = {
          impl = std::shared_ptr<pasta::CompileCommandImpl> (use count 1, weak count 1) = {
            get() = 0x55556152e840
          }
        }
        maybe_jobs = {
          destroyed = true,
          checked = true,
          data = std::variant<std::vector<pasta::CompileJob>, std::string> [index 0] containing std::vector of length 0, capacity 0
        }
#0  HandleUnkownTypeAttrAsAnnotateTypeAttr (State=..., CurType=..., PA=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaType.cpp:8299
#1  0x0000555559ed322d in processTypeAttrs (state=..., type=..., TAL=TAL_DeclName, attrs=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaType.cpp:8413
#2  0x0000555559ec608b in GetFullTypeForDeclarator (state=..., declSpecType=..., TInfo=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaType.cpp:5810
#3  0x0000555559ec6d41 in clang::Sema::GetTypeForDeclarator (this=0x5555a18ddbf0, D=..., S=0x55556d734890) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaType.cpp:5935
#4  0x000055555909d929 in clang::Sema::HandleDeclarator (this=0x5555a18ddbf0, S=0x55556d734890, D=..., TemplateParamLists=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaDecl.cpp:6304
#5  0x00005555591ed58d in clang::Sema::ActOnCXXMemberDeclarator (this=0x5555a18ddbf0, S=0x55556d734890, AS=clang::AS_public, D=..., TemplateParameterLists=..., BW=0x0, VS=..., InitStyle=clang::ICIS_NoInit) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Sema/SemaDeclCXX.cpp:3510
#6  0x00005555589d2f3c in clang::Parser::ParseCXXInlineMethodDef (this=0x55559f6c1e60, AS=clang::AS_public, AccessAttrs=..., D=..., TemplateInfo=..., VS=..., PureSpecLoc=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseCXXInlineMethods.cpp:42
#7  0x0000555558a18a29 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x55559f6c1e60, AS=clang::AS_public, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:2956
#8  0x0000555558a1ac52 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x55559f6c1e60, AS=@0x7fffffff8598: clang::AS_public, AccessAttrs=..., TagType=clang::TST_struct, TagDecl=0x5555a64f2098) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:3391
#9  0x0000555558a1baee in clang::Parser::ParseCXXMemberSpecification (this=0x55559f6c1e60, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=25, TagDecl=0x5555a64f2098) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:3595
#10 0x0000555558a1506a in clang::Parser::ParseClassSpecifier (this=0x55559f6c1e60, TagTokKind=clang::tok::kw_struct, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_private, EnteringContext=true, DSC=clang::Parser::DeclSpecContext::DSC_class, Attributes=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:2107
#11 0x00005555589ee713 in clang::Parser::ParseDeclarationSpecifiers (this=0x55559f6c1e60, DS=..., TemplateInfo=..., AS=clang::AS_private, DSContext=clang::Parser::DeclSpecContext::DSC_class, LateAttrs=0x7fffffff9540, AllowImplicitTypename=clang::ImplicitTypenameContext::Yes) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDecl.cpp:4220
#12 0x00005555589cc6cb in clang::Parser::ParseDeclarationSpecifiers (this=0x55559f6c1e60, DS=..., TemplateInfo=..., AS=clang::AS_private, DSC=clang::Parser::DeclSpecContext::DSC_class, LateAttrs=0x7fffffff9540) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/include/clang/Parse/Parser.h:2421
#13 0x0000555558a18209 in clang::Parser::ParseCXXClassMemberDeclaration (this=0x55559f6c1e60, AS=clang::AS_private, AccessAttrs=..., TemplateInfo=..., TemplateDiags=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:2803
#14 0x0000555558a1ac52 in clang::Parser::ParseCXXClassMemberDeclarationWithPragmas (this=0x55559f6c1e60, AS=@0x7fffffffa8c8: clang::AS_private, AccessAttrs=..., TagType=clang::TST_class, TagDecl=0x5555a64eae48) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:3391
#15 0x0000555558a1baee in clang::Parser::ParseCXXMemberSpecification (this=0x55559f6c1e60, RecordLoc=..., AttrFixitLoc=..., Attrs=..., TagType=26, TagDecl=0x5555a64eae48) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:3595
#16 0x0000555558a1506a in clang::Parser::ParseClassSpecifier (this=0x55559f6c1e60, TagTokKind=clang::tok::kw_class, StartLoc=..., DS=..., TemplateInfo=..., AS=clang::AS_none, EnteringContext=true, DSC=clang::Parser::DeclSpecContext::DSC_top_level, Attributes=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:2107
#17 0x00005555589ee713 in clang::Parser::ParseDeclarationSpecifiers (this=0x55559f6c1e60, DS=..., TemplateInfo=..., AS=clang::AS_none, DSContext=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0, AllowImplicitTypename=clang::ImplicitTypenameContext::Yes) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDecl.cpp:4220
#18 0x00005555589cc6cb in clang::Parser::ParseDeclarationSpecifiers (this=0x55559f6c1e60, DS=..., TemplateInfo=..., AS=clang::AS_none, DSC=clang::Parser::DeclSpecContext::DSC_top_level, LateAttrs=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/include/clang/Parse/Parser.h:2421
#19 0x00005555589c11f8 in clang::Parser::ParseDeclOrFunctionDefInternal (this=0x55559f6c1e60, Attrs=..., DeclSpecAttrs=..., DS=..., AS=clang::AS_none) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/Parser.cpp:1119
#20 0x00005555589c18e6 in clang::Parser::ParseDeclarationOrFunctionDefinition (this=0x55559f6c1e60, Attrs=..., DeclSpecAttrs=..., DS=0x0, AS=clang::AS_none) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/Parser.cpp:1226
#21 0x00005555589c0c1f in clang::Parser::ParseExternalDeclaration (this=0x55559f6c1e60, Attrs=..., DeclSpecAttrs=..., DS=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/Parser.cpp:1041
#22 0x0000555558a0cfe8 in clang::Parser::ParseInnerNamespace (this=0x55559f6c1e60, InnerNSs=..., index=0, InlineLoc=..., attrs=..., Tracker=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:261
#23 0x0000555558a0cc6e in clang::Parser::ParseNamespace (this=0x55559f6c1e60, Context=clang::DeclaratorContext::File, DeclEnd=..., InlineLoc=...) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDeclCXX.cpp:238
#24 0x00005555589e4dad in clang::Parser::ParseDeclaration (this=0x55559f6c1e60, Context=clang::DeclaratorContext::File, DeclEnd=..., DeclAttrs=..., DeclSpecAttrs=..., DeclSpecStart=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/ParseDecl.cpp:1807
#25 0x00005555589c070a in clang::Parser::ParseExternalDeclaration (this=0x55559f6c1e60, Attrs=..., DeclSpecAttrs=..., DS=0x0) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/Parser.cpp:957
#26 0x00005555589bfa16 in clang::Parser::ParseTopLevelDecl (this=0x55559f6c1e60, Result=..., ImportState=@0x7fffffffc6c8: clang::Sema::ModuleImportState::NotACXX20Module) at /home/swd/projs/common/cxx-common-debug/vcpkg/buildtrees/llvm-16/src/org-16.0.5-90a3d25b70.clean/clang/lib/Parse/Parser.cpp:743
#27 0x00005555562df830 in pasta::CompileJob::Run[abi:cxx11]() const (this=0x555561541be0) at /home/swd/projs/common/pasta/lib/Compile/Run.cpp:425
#28 0x0000555555ef7b59 in main (argc=81, argv=0x7fffffffcd38) at /home/swd/projs/common/pasta/bin/DumpAST/Main.cpp:135
